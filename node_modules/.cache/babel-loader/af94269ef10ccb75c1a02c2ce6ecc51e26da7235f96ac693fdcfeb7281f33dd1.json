{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\"; // Importa useState e useEffect\n\n// Hook que verifica se o usuário está autenticado\nconst useAuth = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Estado para armazenar status de autenticação\n\n  useEffect(() => {\n    // Recupera o token do localStorage\n    const token = localStorage.getItem(\"token\");\n    setIsAuthenticated(!!token); // Define como autenticado se houver token\n  }, []);\n  return isAuthenticated; // Retorna o status de autenticação\n};\n_s(useAuth, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\nexport default useAuth;","map":{"version":3,"names":["useState","useEffect","useAuth","_s","isAuthenticated","setIsAuthenticated","token","localStorage","getItem"],"sources":["C:/Users/jpls2/TCC/React/myfinance/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect } from \"react\"; // Importa useState e useEffect\r\n\r\n// Hook que verifica se o usuário está autenticado\r\nconst useAuth = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Estado para armazenar status de autenticação\r\n\r\n  useEffect(() => {\r\n    // Recupera o token do localStorage\r\n    const token = localStorage.getItem(\"token\");\r\n    setIsAuthenticated(!!token); // Define como autenticado se houver token\r\n  }, []);\r\n\r\n  return isAuthenticated; // Retorna o status de autenticação\r\n};\r\n\r\nexport default useAuth;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;;AAE7C;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/DC,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CH,kBAAkB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,eAAe,CAAC,CAAC;AAC1B,CAAC;AAACD,EAAA,CAVID,OAAO;AAYb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}