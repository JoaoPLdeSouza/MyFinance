{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\pages\\\\Lancamentos.js\",\n  _s = $RefreshSig$();\n// src/pages/Lancamentos.js\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Layout from \"../components/Layout\";\nimport authService from \"../services/authService\";\nimport EditarModal from \"../components/EditarModal\";\nimport NovoModal from \"../components/NovoModal\";\nimport \"../assets/Lancamentos.css\";\n\n// Mova categoriaMapeada para FORA do componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoriaMapeada = {\n  NECESSIDADES: \"Necessidade\",\n  DESEJOS: \"Desejo\",\n  INVESTIMENTO_E_POUPANCA: \"Investimento/Poupança\"\n};\n\n// Mapeamento reverso para quando precisar do valor original (ex: para salvar na API)\nconst categoriaReversaMapeada = Object.keys(categoriaMapeada).reduce((acc, key) => {\n  acc[categoriaMapeada[key]] = key;\n  return acc;\n}, {});\n\n// A função parseDateString não será mais usada para ordenação, mas pode ser útil para o filtro de datas\n// se as datas no dropdown continuarem sendo no formato \"DD/MM/AAAA\".\n// Vou mantê-la e adaptar seu uso.\nconst parseDateString = dateString => {\n  if (!dateString) return null;\n\n  // Adaptação: Se a data já for ISO 8601 (como do Swagger: \"2025-05-26T...Z\"), new Date() a lê direto.\n  // Se for \"DD/MM/AAAA\", tentamos parsear.\n  // Isso cobre ambos os casos, caso a dataHora venha de fontes diferentes ou editores de texto.\n  if (dateString.includes('-') && dateString.includes('T')) {\n    return new Date(dateString); // Provavelmente ISO 8601\n  }\n  const parts = dateString.match(/(\\d{2})\\/(\\d{2})\\/(\\d{4})(?: (\\d{2}):(\\d{2}):(\\d{2}))?/);\n  if (!parts) return null;\n  const day = parseInt(parts[1], 10);\n  const month = parseInt(parts[2], 10) - 1; // Mês é base 0\n  const year = parseInt(parts[3], 10);\n  const hour = parseInt(parts[4] || '0', 10);\n  const minute = parseInt(parts[5] || '0', 10);\n  const second = parseInt(parts[6] || '0', 10);\n  return new Date(year, month, day, hour, minute, second);\n};\n\n// Função auxiliar para formatar a data para exibição (sempre DD/MM/AAAA)\nconst formatarDataParaExibicao = isoString => {\n  try {\n    // Tenta criar uma data a partir da string (pode ser ISO ou DD/MM/AAAA)\n    const date = new Date(isoString);\n    if (isNaN(date.getTime())) {\n      // Se a data for \"DD/MM/AAAA\", o new Date direto falha em alguns browsers, então usa parseDateString\n      const parsedDate = parseDateString(isoString);\n      if (parsedDate && !isNaN(parsedDate.getTime())) {\n        return parsedDate.toLocaleDateString('pt-BR');\n      }\n      return \"Data Inválida\";\n    }\n    return date.toLocaleDateString('pt-BR');\n  } catch (e) {\n    console.error(\"Erro ao formatar data:\", isoString, e);\n    return \"Data Inválida\";\n  }\n};\nconst Lancamentos = () => {\n  _s();\n  const [lancamentos, setLancamentos] = useState([]);\n  const [paginaAtual, setPaginaAtual] = useState(1);\n  const [modalAberto, setModalAberto] = useState(false);\n  const [lancamentoSelecionado, setLancamentoSelecionado] = useState(null);\n  const [novoModalAberto, setNovoModalAberto] = useState(false);\n  const [idParaExcluir, setIdParaExcluir] = useState(null);\n  const [filtrosVisiveis, setFiltrosVisiveis] = useState(false);\n\n  // Estados para os valores dos filtros\n  const [filtroCategoria, setFiltroCategoria] = useState(\"\");\n  const [filtroSubcategoria, setFiltroSubcategoria] = useState(\"\");\n  const [filtroData, setFiltroData] = useState(\"\"); // Este será a string \"DD/MM/AAAA\"\n\n  // ESTADOS PARA AS OPÇÕES EXIBIDAS NOS DROPDOWNS (DINÂMICAS)\n  const [opcoesCategorias, setOpcoesCategorias] = useState([]);\n  const [opcoesSubcategorias, setOpcoesSubcategorias] = useState([]);\n  const [opcoesDatas, setOpcoesDatas] = useState([]);\n\n  // Estado para armazenar TODOS os lançamentos brutos (para facilitar a filtragem dinâmica)\n  const [todosLancamentosOriginais, setTodosLancamentosOriginais] = useState([]);\n  const itensPorPagina = 15;\n  const buscarLancamentos = useCallback(() => {\n    const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n    if (usuario !== null && usuario !== void 0 && usuario.id) {\n      authService.buscarLancamentosPorUsuario(usuario.id).then(res => {\n        // *** ALTERAÇÃO PRINCIPAL AQUI: ORDENAR POR ID DECRESCENTE ***\n        const lancamentosOrdenados = res.data.sort((a, b) => {\n          return b.id - a.id; // Ordem decrescente de ID (maior ID primeiro)\n        });\n        setLancamentos(lancamentosOrdenados);\n        setTodosLancamentosOriginais(lancamentosOrdenados); // Armazenar dados brutos já ordenados\n\n        // Inicializa as opções de filtro com base em TODOS os lançamentos (agora ordenados)\n        const categoriasIniciais = [...new Set(lancamentosOrdenados.map(item => categoriaMapeada[item.categoria] || item.categoria).filter(Boolean))].sort();\n        const subcategoriasIniciais = [...new Set(lancamentosOrdenados.map(item => item.subcategoria).filter(Boolean))].sort();\n\n        // As datas para as opções do dropdown devem ser as datas formatadas para exibição,\n        // e ordenadas (aqui ainda por data para o filtro de data ter ordem lógica)\n        const datasUnicasExibicao = [...new Set(lancamentosOrdenados.map(item => formatarDataParaExibicao(item.dataHora)).filter(Boolean))].sort((a, b) => {\n          // Convertemos para Date para ordenar as opções de data (ex: \"25/05/2025\")\n          // Revertemos para AAAA-MM-DD para criar o objeto Date\n          const partsA = a.split('/');\n          const dateA = new Date(parseInt(partsA[2]), parseInt(partsA[1]) - 1, parseInt(partsA[0]));\n          const partsB = b.split('/');\n          const dateB = new Date(parseInt(partsB[2]), parseInt(partsB[1]) - 1, parseInt(partsB[0]));\n          return dateB.getTime() - dateA.getTime(); // Ordem decrescente\n        });\n        setOpcoesCategorias(categoriasIniciais);\n        setOpcoesSubcategorias(subcategoriasIniciais);\n        setOpcoesDatas(datasUnicasExibicao);\n      }).catch(err => console.error(\"Erro ao buscar lançamentos\", err));\n    }\n  }, []); // Sem dependências desnecessárias\n\n  useEffect(() => {\n    buscarLancamentos();\n  }, [buscarLancamentos]);\n\n  // Efeito para atualizar as opções de Subcategoria e Categoria com base nos filtros selecionados\n  useEffect(() => {\n    let filteredByCatSub = todosLancamentosOriginais;\n\n    // Se a categoria está selecionada, filtra os lançamentos por ela\n    if (filtroCategoria) {\n      const categoriaOriginal = categoriaReversaMapeada[filtroCategoria] || filtroCategoria;\n      filteredByCatSub = filteredByCatSub.filter(item => item.categoria === categoriaOriginal);\n    }\n\n    // Se a subcategoria está selecionada, filtra os lançamentos por ela\n    if (filtroSubcategoria) {\n      filteredByCatSub = filteredByCatSub.filter(item => item.subcategoria === filtroSubcategoria);\n    }\n\n    // Gerar novas opções de subcategoria baseadas nos lançamentos filtrados pela categoria (e sub)\n    const novasOpcoesSubcategorias = [...new Set(filteredByCatSub.map(item => item.subcategoria).filter(Boolean))].sort();\n    setOpcoesSubcategorias(novasOpcoesSubcategorias);\n\n    // Gerar novas opções de categoria baseadas nos lançamentos filtrados pela subcategoria (e cat)\n    const novasOpcoesCategorias = [...new Set(filteredByCatSub.map(item => categoriaMapeada[item.categoria] || item.categoria).filter(Boolean))].sort();\n    setOpcoesCategorias(novasOpcoesCategorias);\n  }, [filtroCategoria, filtroSubcategoria, todosLancamentosOriginais]);\n\n  // Lógica de FILTRAGEM PRINCIPAL (para exibição da tabela)\n  const lancamentosFiltrados = lancamentos.filter(lancamento => {\n    const categoriaExibicao = categoriaMapeada[lancamento.categoria] || lancamento.categoria;\n    const categoriaLower = categoriaExibicao ? categoriaExibicao.toLowerCase() : '';\n    const subcategoriaLower = lancamento.subcategoria ? lancamento.subcategoria.toLowerCase() : '';\n\n    // Usar formatarDataParaExibicao para garantir que a data do lançamento seja \"DD/MM/AAAA\" para comparação\n    const dataLancamentoFormatada = formatarDataParaExibicao(lancamento.dataHora);\n    const matchCategoria = filtroCategoria ? categoriaLower === filtroCategoria.toLowerCase() : true;\n    const matchSubcategoria = filtroSubcategoria ? subcategoriaLower === filtroSubcategoria.toLowerCase() : true;\n    const matchData = filtroData ? dataLancamentoFormatada === filtroData : true;\n    return matchCategoria && matchSubcategoria && matchData;\n  });\n  const totalPaginas = Math.ceil(lancamentosFiltrados.length / itensPorPagina);\n  const lancamentosExibidos = lancamentosFiltrados.slice((paginaAtual - 1) * itensPorPagina, paginaAtual * itensPorPagina);\n  const mudarPagina = novaPagina => {\n    if (novaPagina >= 1 && novaPagina <= totalPaginas) {\n      setPaginaAtual(novaPagina);\n    }\n  };\n  const confirmarExclusao = id => {\n    setIdParaExcluir(id);\n  };\n  const cancelarExclusao = () => {\n    setIdParaExcluir(null);\n  };\n  const excluirConfirmado = async () => {\n    try {\n      await authService.deletarGasto(idParaExcluir);\n      buscarLancamentos(); // Refresca os lançamentos e, consequentemente, as opções de filtro\n      setIdParaExcluir(null);\n      setPaginaAtual(1);\n    } catch (error) {\n      alert(\"Erro ao excluir lançamento.\");\n      console.error(\"Erro ao excluir gasto:\", error);\n    }\n  };\n  const abrirModal = lancamento => {\n    setLancamentoSelecionado(lancamento);\n    setModalAberto(true);\n  };\n  const salvarAlteracoes = async lancamentoEditado => {\n    try {\n      // Mapeia a categoria de volta para o formato original para a API\n      const categoriaParaSalvar = categoriaReversaMapeada[lancamentoEditado.categoria] || lancamentoEditado.categoria;\n\n      // Conversão da data para ISO 8601 se o modal retornar DD/MM/AAAA\n      let dataHoraParaApi = lancamentoEditado.dataHora;\n      if (typeof lancamentoEditado.dataHora === 'string' && lancamentoEditado.dataHora.includes('/')) {\n        const [dia, mes, ano] = lancamentoEditado.dataHora.split('/');\n        // Se precisar de horário específico, EditarModal deve fornecer.\n        // Aqui, estamos criando uma data com base apenas no dia, mês e ano.\n        dataHoraParaApi = new Date(parseInt(ano), parseInt(mes) - 1, parseInt(dia)).toISOString();\n      }\n      await authService.alterarGasto(lancamentoEditado.id, {\n        valor: lancamentoEditado.valor,\n        categoria: categoriaParaSalvar,\n        // Usar o valor original da categoria\n        subcategoria: lancamentoEditado.subcategoria,\n        dataHora: dataHoraParaApi // Envia a data no formato ISO 8601\n      });\n      buscarLancamentos(); // Refresca os lançamentos e as opções de filtro\n      setModalAberto(false);\n    } catch (error) {\n      console.error(\"Erro ao salvar alteração:\", error);\n      alert(\"Erro ao salvar alteração no lançamento.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lancamentos-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Lan\\xE7amentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"novo-button\",\n            onClick: () => setNovoModalAberto(true),\n            children: \"+ Novo Lan\\xE7amento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toggle-filtros-button\",\n            onClick: () => setFiltrosVisiveis(!filtrosVisiveis),\n            children: filtrosVisiveis ? \"Esconder Filtros\" : \"Mostrar Filtros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"lancamentos-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subcategoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\xF5es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), filtrosVisiveis && /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"filter-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: filtroCategoria,\n                onChange: e => {\n                  setFiltroCategoria(e.target.value);\n                  setPaginaAtual(1);\n                  setFiltroSubcategoria(\"\"); // Limpa o filtro de subcategoria ao mudar a categoria\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Todas as Categorias\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this), opcoesCategorias.map(categoria => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: categoria,\n                  children: categoria\n                }, categoria, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: filtroSubcategoria,\n                onChange: e => {\n                  setFiltroSubcategoria(e.target.value);\n                  setPaginaAtual(1);\n                  setFiltroCategoria(\"\"); // Limpa o filtro de categoria ao mudar a subcategoria\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Todas as Subcategorias\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this), opcoesSubcategorias.map(subcategoria => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: subcategoria,\n                  children: subcategoria\n                }, subcategoria, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: filtroData,\n                onChange: e => {\n                  setFiltroData(e.target.value);\n                  setPaginaAtual(1);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Todas as Datas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this), opcoesDatas.map(data => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: data,\n                  children: data\n                }, data, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: lancamentosExibidos.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              className: \"no-results-message\",\n              children: \"Nenhum lan\\xE7amento encontrado com os filtros aplicados.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this) : lancamentosExibidos.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.valor.toLocaleString(\"pt-BR\", {\n                style: \"currency\",\n                currency: \"BRL\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: categoriaMapeada[item.categoria] || item.categoria\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.subcategoria\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatarDataParaExibicao(item.dataHora)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"acoes\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"editar\",\n                onClick: () => abrirModal(item),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"excluir\",\n                onClick: () => confirmarExclusao(item.id),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginacao\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => mudarPagina(paginaAtual - 1),\n          disabled: paginaAtual === 1,\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"P\\xE1gina \", paginaAtual, \" de \", totalPaginas === 0 ? 1 : totalPaginas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => mudarPagina(paginaAtual + 1),\n          disabled: paginaAtual === totalPaginas || totalPaginas === 0,\n          children: \"Pr\\xF3xima\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), modalAberto && /*#__PURE__*/_jsxDEV(EditarModal\n    // Ao abrir o modal, passamos a dataHora no formato que ela vem da API (ISO 8601)\n    // Se o seu EditarModal espera DD/MM/AAAA, você precisaria formatar aqui.\n    // Por exemplo: dataHora: formatarDataParaExibicao(lancamentoSelecionado.dataHora)\n    , {\n      lancamento: lancamentoSelecionado,\n      onClose: () => setModalAberto(false),\n      onSave: salvarAlteracoes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this), novoModalAberto && /*#__PURE__*/_jsxDEV(NovoModal, {\n      onClose: () => setNovoModalAberto(false),\n      onSalvarNovo: (idUsuario, novoGasto) => {\n        // NovoGasto.dataHora aqui pode vir em \"DD/MM/AAAA\" do modal de entrada\n        // Se sim, precisamos converter para ISO 8601 para a API.\n        let dataHoraParaApi = novoGasto.dataHora;\n        if (typeof novoGasto.dataHora === 'string' && novoGasto.dataHora.includes('/')) {\n          const [dia, mes, ano] = novoGasto.dataHora.split('/');\n          // Por padrão, se o modal não fornecer hora, minuto, segundo, usaremos 00:00:00 UTC\n          dataHoraParaApi = new Date(parseInt(ano), parseInt(mes) - 1, parseInt(dia)).toISOString();\n        }\n        authService.cadastrarGasto(idUsuario, {\n          ...novoGasto,\n          dataHora: dataHoraParaApi\n        }).then(() => {\n          buscarLancamentos();\n          setNovoModalAberto(false);\n        }).catch(err => {\n          console.error(\"Erro ao cadastrar gasto:\", err);\n          alert(\"Erro ao cadastrar novo lançamento.\");\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this), idParaExcluir !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Tem certeza que deseja excluir este lan\\xE7amento?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-confirmar\",\n            onClick: excluirConfirmado,\n            children: \"Confirmar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-cancelar\",\n            onClick: cancelarExclusao,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(Lancamentos, \"XGu1cogbRLgVtWz8kwZXNbQM7xU=\");\n_c = Lancamentos;\nexport default Lancamentos;\nvar _c;\n$RefreshReg$(_c, \"Lancamentos\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Layout","authService","EditarModal","NovoModal","jsxDEV","_jsxDEV","categoriaMapeada","NECESSIDADES","DESEJOS","INVESTIMENTO_E_POUPANCA","categoriaReversaMapeada","Object","keys","reduce","acc","key","parseDateString","dateString","includes","Date","parts","match","day","parseInt","month","year","hour","minute","second","formatarDataParaExibicao","isoString","date","isNaN","getTime","parsedDate","toLocaleDateString","e","console","error","Lancamentos","_s","lancamentos","setLancamentos","paginaAtual","setPaginaAtual","modalAberto","setModalAberto","lancamentoSelecionado","setLancamentoSelecionado","novoModalAberto","setNovoModalAberto","idParaExcluir","setIdParaExcluir","filtrosVisiveis","setFiltrosVisiveis","filtroCategoria","setFiltroCategoria","filtroSubcategoria","setFiltroSubcategoria","filtroData","setFiltroData","opcoesCategorias","setOpcoesCategorias","opcoesSubcategorias","setOpcoesSubcategorias","opcoesDatas","setOpcoesDatas","todosLancamentosOriginais","setTodosLancamentosOriginais","itensPorPagina","buscarLancamentos","usuario","JSON","parse","localStorage","getItem","id","buscarLancamentosPorUsuario","then","res","lancamentosOrdenados","data","sort","a","b","categoriasIniciais","Set","map","item","categoria","filter","Boolean","subcategoriasIniciais","subcategoria","datasUnicasExibicao","dataHora","partsA","split","dateA","partsB","dateB","catch","err","filteredByCatSub","categoriaOriginal","novasOpcoesSubcategorias","novasOpcoesCategorias","lancamentosFiltrados","lancamento","categoriaExibicao","categoriaLower","toLowerCase","subcategoriaLower","dataLancamentoFormatada","matchCategoria","matchSubcategoria","matchData","totalPaginas","Math","ceil","length","lancamentosExibidos","slice","mudarPagina","novaPagina","confirmarExclusao","cancelarExclusao","excluirConfirmado","deletarGasto","alert","abrirModal","salvarAlteracoes","lancamentoEditado","categoriaParaSalvar","dataHoraParaApi","dia","mes","ano","toISOString","alterarGasto","valor","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","target","colSpan","toLocaleString","style","currency","disabled","onClose","onSave","onSalvarNovo","idUsuario","novoGasto","cadastrarGasto","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/pages/Lancamentos.js"],"sourcesContent":["// src/pages/Lancamentos.js\r\n\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport authService from \"../services/authService\";\r\nimport EditarModal from \"../components/EditarModal\";\r\nimport NovoModal from \"../components/NovoModal\";\r\nimport \"../assets/Lancamentos.css\";\r\n\r\n// Mova categoriaMapeada para FORA do componente\r\nconst categoriaMapeada = {\r\n  NECESSIDADES: \"Necessidade\",\r\n  DESEJOS: \"Desejo\",\r\n  INVESTIMENTO_E_POUPANCA: \"Investimento/Poupança\"\r\n};\r\n\r\n// Mapeamento reverso para quando precisar do valor original (ex: para salvar na API)\r\nconst categoriaReversaMapeada = Object.keys(categoriaMapeada).reduce((acc, key) => {\r\n  acc[categoriaMapeada[key]] = key;\r\n  return acc;\r\n}, {});\r\n\r\n// A função parseDateString não será mais usada para ordenação, mas pode ser útil para o filtro de datas\r\n// se as datas no dropdown continuarem sendo no formato \"DD/MM/AAAA\".\r\n// Vou mantê-la e adaptar seu uso.\r\nconst parseDateString = (dateString) => {\r\n  if (!dateString) return null;\r\n\r\n  // Adaptação: Se a data já for ISO 8601 (como do Swagger: \"2025-05-26T...Z\"), new Date() a lê direto.\r\n  // Se for \"DD/MM/AAAA\", tentamos parsear.\r\n  // Isso cobre ambos os casos, caso a dataHora venha de fontes diferentes ou editores de texto.\r\n  if (dateString.includes('-') && dateString.includes('T')) {\r\n    return new Date(dateString); // Provavelmente ISO 8601\r\n  }\r\n\r\n  const parts = dateString.match(/(\\d{2})\\/(\\d{2})\\/(\\d{4})(?: (\\d{2}):(\\d{2}):(\\d{2}))?/);\r\n  if (!parts) return null;\r\n\r\n  const day = parseInt(parts[1], 10);\r\n  const month = parseInt(parts[2], 10) - 1; // Mês é base 0\r\n  const year = parseInt(parts[3], 10);\r\n  const hour = parseInt(parts[4] || '0', 10);\r\n  const minute = parseInt(parts[5] || '0', 10);\r\n  const second = parseInt(parts[6] || '0', 10);\r\n\r\n  return new Date(year, month, day, hour, minute, second);\r\n};\r\n\r\n// Função auxiliar para formatar a data para exibição (sempre DD/MM/AAAA)\r\nconst formatarDataParaExibicao = (isoString) => {\r\n  try {\r\n    // Tenta criar uma data a partir da string (pode ser ISO ou DD/MM/AAAA)\r\n    const date = new Date(isoString);\r\n    if (isNaN(date.getTime())) {\r\n      // Se a data for \"DD/MM/AAAA\", o new Date direto falha em alguns browsers, então usa parseDateString\r\n      const parsedDate = parseDateString(isoString);\r\n      if (parsedDate && !isNaN(parsedDate.getTime())) {\r\n        return parsedDate.toLocaleDateString('pt-BR');\r\n      }\r\n      return \"Data Inválida\";\r\n    }\r\n    return date.toLocaleDateString('pt-BR');\r\n  } catch (e) {\r\n    console.error(\"Erro ao formatar data:\", isoString, e);\r\n    return \"Data Inválida\";\r\n  }\r\n};\r\n\r\n\r\nconst Lancamentos = () => {\r\n  const [lancamentos, setLancamentos] = useState([]);\r\n  const [paginaAtual, setPaginaAtual] = useState(1);\r\n  const [modalAberto, setModalAberto] = useState(false);\r\n  const [lancamentoSelecionado, setLancamentoSelecionado] = useState(null);\r\n  const [novoModalAberto, setNovoModalAberto] = useState(false);\r\n  const [idParaExcluir, setIdParaExcluir] = useState(null);\r\n\r\n  const [filtrosVisiveis, setFiltrosVisiveis] = useState(false);\r\n\r\n  // Estados para os valores dos filtros\r\n  const [filtroCategoria, setFiltroCategoria] = useState(\"\");\r\n  const [filtroSubcategoria, setFiltroSubcategoria] = useState(\"\");\r\n  const [filtroData, setFiltroData] = useState(\"\"); // Este será a string \"DD/MM/AAAA\"\r\n\r\n  // ESTADOS PARA AS OPÇÕES EXIBIDAS NOS DROPDOWNS (DINÂMICAS)\r\n  const [opcoesCategorias, setOpcoesCategorias] = useState([]);\r\n  const [opcoesSubcategorias, setOpcoesSubcategorias] = useState([]);\r\n  const [opcoesDatas, setOpcoesDatas] = useState([]);\r\n\r\n  // Estado para armazenar TODOS os lançamentos brutos (para facilitar a filtragem dinâmica)\r\n  const [todosLancamentosOriginais, setTodosLancamentosOriginais] = useState([]);\r\n\r\n  const itensPorPagina = 15;\r\n\r\n  const buscarLancamentos = useCallback(() => {\r\n    const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n    if (usuario?.id) {\r\n      authService.buscarLancamentosPorUsuario(usuario.id)\r\n        .then(res => {\r\n          // *** ALTERAÇÃO PRINCIPAL AQUI: ORDENAR POR ID DECRESCENTE ***\r\n          const lancamentosOrdenados = res.data.sort((a, b) => {\r\n            return b.id - a.id; // Ordem decrescente de ID (maior ID primeiro)\r\n          });\r\n\r\n          setLancamentos(lancamentosOrdenados);\r\n          setTodosLancamentosOriginais(lancamentosOrdenados); // Armazenar dados brutos já ordenados\r\n\r\n          // Inicializa as opções de filtro com base em TODOS os lançamentos (agora ordenados)\r\n          const categoriasIniciais = [...new Set(lancamentosOrdenados.map(item => categoriaMapeada[item.categoria] || item.categoria).filter(Boolean))].sort();\r\n          const subcategoriasIniciais = [...new Set(lancamentosOrdenados.map(item => item.subcategoria).filter(Boolean))].sort();\r\n          \r\n          // As datas para as opções do dropdown devem ser as datas formatadas para exibição,\r\n          // e ordenadas (aqui ainda por data para o filtro de data ter ordem lógica)\r\n          const datasUnicasExibicao = [...new Set(lancamentosOrdenados.map(item => formatarDataParaExibicao(item.dataHora)).filter(Boolean))].sort((a, b) => {\r\n            // Convertemos para Date para ordenar as opções de data (ex: \"25/05/2025\")\r\n            // Revertemos para AAAA-MM-DD para criar o objeto Date\r\n            const partsA = a.split('/');\r\n            const dateA = new Date(parseInt(partsA[2]), parseInt(partsA[1]) - 1, parseInt(partsA[0]));\r\n            \r\n            const partsB = b.split('/');\r\n            const dateB = new Date(parseInt(partsB[2]), parseInt(partsB[1]) - 1, parseInt(partsB[0]));\r\n            \r\n            return dateB.getTime() - dateA.getTime(); // Ordem decrescente\r\n          });\r\n\r\n\r\n          setOpcoesCategorias(categoriasIniciais);\r\n          setOpcoesSubcategorias(subcategoriasIniciais);\r\n          setOpcoesDatas(datasUnicasExibicao);\r\n        })\r\n        .catch(err => console.error(\"Erro ao buscar lançamentos\", err));\r\n    }\r\n  }, []); // Sem dependências desnecessárias\r\n\r\n  useEffect(() => {\r\n    buscarLancamentos();\r\n  }, [buscarLancamentos]);\r\n\r\n  // Efeito para atualizar as opções de Subcategoria e Categoria com base nos filtros selecionados\r\n  useEffect(() => {\r\n    let filteredByCatSub = todosLancamentosOriginais;\r\n\r\n    // Se a categoria está selecionada, filtra os lançamentos por ela\r\n    if (filtroCategoria) {\r\n      const categoriaOriginal = categoriaReversaMapeada[filtroCategoria] || filtroCategoria;\r\n      filteredByCatSub = filteredByCatSub.filter(item => item.categoria === categoriaOriginal);\r\n    }\r\n\r\n    // Se a subcategoria está selecionada, filtra os lançamentos por ela\r\n    if (filtroSubcategoria) {\r\n      filteredByCatSub = filteredByCatSub.filter(item => item.subcategoria === filtroSubcategoria);\r\n    }\r\n\r\n    // Gerar novas opções de subcategoria baseadas nos lançamentos filtrados pela categoria (e sub)\r\n    const novasOpcoesSubcategorias = [...new Set(filteredByCatSub.map(item => item.subcategoria).filter(Boolean))].sort();\r\n    setOpcoesSubcategorias(novasOpcoesSubcategorias);\r\n\r\n    // Gerar novas opções de categoria baseadas nos lançamentos filtrados pela subcategoria (e cat)\r\n    const novasOpcoesCategorias = [...new Set(filteredByCatSub.map(item => categoriaMapeada[item.categoria] || item.categoria).filter(Boolean))].sort();\r\n    setOpcoesCategorias(novasOpcoesCategorias);\r\n\r\n  }, [filtroCategoria, filtroSubcategoria, todosLancamentosOriginais]);\r\n\r\n\r\n  // Lógica de FILTRAGEM PRINCIPAL (para exibição da tabela)\r\n  const lancamentosFiltrados = lancamentos.filter((lancamento) => {\r\n    const categoriaExibicao = categoriaMapeada[lancamento.categoria] || lancamento.categoria;\r\n    const categoriaLower = categoriaExibicao ? categoriaExibicao.toLowerCase() : '';\r\n    const subcategoriaLower = lancamento.subcategoria ? lancamento.subcategoria.toLowerCase() : '';\r\n    \r\n    // Usar formatarDataParaExibicao para garantir que a data do lançamento seja \"DD/MM/AAAA\" para comparação\r\n    const dataLancamentoFormatada = formatarDataParaExibicao(lancamento.dataHora);\r\n\r\n    const matchCategoria = filtroCategoria\r\n      ? categoriaLower === filtroCategoria.toLowerCase()\r\n      : true;\r\n    const matchSubcategoria = filtroSubcategoria\r\n      ? subcategoriaLower === filtroSubcategoria.toLowerCase()\r\n      : true;\r\n    const matchData = filtroData ? dataLancamentoFormatada === filtroData : true;\r\n\r\n    return matchCategoria && matchSubcategoria && matchData;\r\n  });\r\n\r\n  const totalPaginas = Math.ceil(lancamentosFiltrados.length / itensPorPagina);\r\n  const lancamentosExibidos = lancamentosFiltrados.slice(\r\n    (paginaAtual - 1) * itensPorPagina,\r\n    paginaAtual * itensPorPagina\r\n  );\r\n\r\n  const mudarPagina = (novaPagina) => {\r\n    if (novaPagina >= 1 && novaPagina <= totalPaginas) {\r\n      setPaginaAtual(novaPagina);\r\n    }\r\n  };\r\n\r\n  const confirmarExclusao = (id) => {\r\n    setIdParaExcluir(id);\r\n  };\r\n\r\n  const cancelarExclusao = () => {\r\n    setIdParaExcluir(null);\r\n  };\r\n\r\n  const excluirConfirmado = async () => {\r\n    try {\r\n      await authService.deletarGasto(idParaExcluir);\r\n      buscarLancamentos(); // Refresca os lançamentos e, consequentemente, as opções de filtro\r\n      setIdParaExcluir(null);\r\n      setPaginaAtual(1);\r\n    } catch (error) {\r\n      alert(\"Erro ao excluir lançamento.\");\r\n      console.error(\"Erro ao excluir gasto:\", error);\r\n    }\r\n  };\r\n\r\n  const abrirModal = (lancamento) => {\r\n    setLancamentoSelecionado(lancamento);\r\n    setModalAberto(true);\r\n  };\r\n\r\n  const salvarAlteracoes = async (lancamentoEditado) => {\r\n    try {\r\n      // Mapeia a categoria de volta para o formato original para a API\r\n      const categoriaParaSalvar = categoriaReversaMapeada[lancamentoEditado.categoria] || lancamentoEditado.categoria;\r\n\r\n      // Conversão da data para ISO 8601 se o modal retornar DD/MM/AAAA\r\n      let dataHoraParaApi = lancamentoEditado.dataHora;\r\n      if (typeof lancamentoEditado.dataHora === 'string' && lancamentoEditado.dataHora.includes('/')) {\r\n          const [dia, mes, ano] = lancamentoEditado.dataHora.split('/');\r\n          // Se precisar de horário específico, EditarModal deve fornecer.\r\n          // Aqui, estamos criando uma data com base apenas no dia, mês e ano.\r\n          dataHoraParaApi = new Date(parseInt(ano), parseInt(mes) - 1, parseInt(dia)).toISOString();\r\n      }\r\n\r\n\r\n      await authService.alterarGasto(lancamentoEditado.id, {\r\n        valor: lancamentoEditado.valor,\r\n        categoria: categoriaParaSalvar, // Usar o valor original da categoria\r\n        subcategoria: lancamentoEditado.subcategoria,\r\n        dataHora: dataHoraParaApi, // Envia a data no formato ISO 8601\r\n      });\r\n      buscarLancamentos(); // Refresca os lançamentos e as opções de filtro\r\n      setModalAberto(false);\r\n    } catch (error) {\r\n      console.error(\"Erro ao salvar alteração:\", error);\r\n      alert(\"Erro ao salvar alteração no lançamento.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"lancamentos-container\">\r\n        <div className=\"header-bar\">\r\n          <h2>Lançamentos</h2>\r\n          <div className=\"header-buttons\">\r\n            <button className=\"novo-button\" onClick={() => setNovoModalAberto(true)}>\r\n              + Novo Lançamento\r\n            </button>\r\n            <button\r\n              className=\"toggle-filtros-button\"\r\n              onClick={() => setFiltrosVisiveis(!filtrosVisiveis)}\r\n            >\r\n              {filtrosVisiveis ? \"Esconder Filtros\" : \"Mostrar Filtros\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"lancamentos-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Valor</th>\r\n              <th>Categoria</th>\r\n              <th>Subcategoria</th>\r\n              <th>Data</th>\r\n              <th>Ações</th>\r\n            </tr>\r\n            {filtrosVisiveis && (\r\n              <tr className=\"filter-row\">\r\n                <td> {/* Coluna Valor sem filtro */}</td>\r\n                <td>\r\n                  <select\r\n                    value={filtroCategoria}\r\n                    onChange={(e) => {\r\n                      setFiltroCategoria(e.target.value);\r\n                      setPaginaAtual(1);\r\n                      setFiltroSubcategoria(\"\"); // Limpa o filtro de subcategoria ao mudar a categoria\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Todas as Categorias</option>\r\n                    {opcoesCategorias.map((categoria) => (\r\n                      <option key={categoria} value={categoria}>{categoria}</option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={filtroSubcategoria}\r\n                    onChange={(e) => {\r\n                      setFiltroSubcategoria(e.target.value);\r\n                      setPaginaAtual(1);\r\n                      setFiltroCategoria(\"\"); // Limpa o filtro de categoria ao mudar a subcategoria\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Todas as Subcategorias</option>\r\n                    {opcoesSubcategorias.map((subcategoria) => (\r\n                      <option key={subcategoria} value={subcategoria}>{subcategoria}</option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={filtroData}\r\n                    onChange={(e) => {\r\n                      setFiltroData(e.target.value);\r\n                      setPaginaAtual(1);\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Todas as Datas</option>\r\n                    {opcoesDatas.map((data) => (\r\n                      <option key={data} value={data}>{data}</option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td> {/* Coluna Ações sem filtro */}</td>\r\n              </tr>\r\n            )}\r\n          </thead>\r\n          <tbody>\r\n            {lancamentosExibidos.length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"5\" className=\"no-results-message\">\r\n                  Nenhum lançamento encontrado com os filtros aplicados.\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              lancamentosExibidos.map((item) => (\r\n                <tr key={item.id}>\r\n                  <td>{item.valor.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" })}</td>\r\n                  <td>{categoriaMapeada[item.categoria] || item.categoria}</td>\r\n                  <td>{item.subcategoria}</td>\r\n                  <td>{formatarDataParaExibicao(item.dataHora)}</td> {/* Usa a função auxiliar para exibir DD/MM/AAAA */}\r\n                  <td className=\"acoes\">\r\n                    <button className=\"editar\" onClick={() => abrirModal(item)}>Editar</button>\r\n                    <button className=\"excluir\" onClick={() => confirmarExclusao(item.id)}>Excluir</button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"paginacao\">\r\n          <button onClick={() => mudarPagina(paginaAtual - 1)} disabled={paginaAtual === 1}>Anterior</button>\r\n          <span>Página {paginaAtual} de {totalPaginas === 0 ? 1 : totalPaginas}</span>\r\n          <button onClick={() => mudarPagina(paginaAtual + 1)} disabled={paginaAtual === totalPaginas || totalPaginas === 0}>Próxima</button>\r\n        </div>\r\n      </div>\r\n\r\n      {modalAberto && (\r\n        <EditarModal\r\n          // Ao abrir o modal, passamos a dataHora no formato que ela vem da API (ISO 8601)\r\n          // Se o seu EditarModal espera DD/MM/AAAA, você precisaria formatar aqui.\r\n          // Por exemplo: dataHora: formatarDataParaExibicao(lancamentoSelecionado.dataHora)\r\n          lancamento={lancamentoSelecionado}\r\n          onClose={() => setModalAberto(false)}\r\n          onSave={salvarAlteracoes}\r\n        />\r\n      )}\r\n\r\n      {novoModalAberto && (\r\n        <NovoModal\r\n          onClose={() => setNovoModalAberto(false)}\r\n          onSalvarNovo={(idUsuario, novoGasto) => {\r\n            // NovoGasto.dataHora aqui pode vir em \"DD/MM/AAAA\" do modal de entrada\r\n            // Se sim, precisamos converter para ISO 8601 para a API.\r\n            let dataHoraParaApi = novoGasto.dataHora;\r\n            if (typeof novoGasto.dataHora === 'string' && novoGasto.dataHora.includes('/')) {\r\n                const [dia, mes, ano] = novoGasto.dataHora.split('/');\r\n                // Por padrão, se o modal não fornecer hora, minuto, segundo, usaremos 00:00:00 UTC\r\n                dataHoraParaApi = new Date(parseInt(ano), parseInt(mes) - 1, parseInt(dia)).toISOString();\r\n            }\r\n\r\n            authService.cadastrarGasto(idUsuario, { ...novoGasto, dataHora: dataHoraParaApi })\r\n              .then(() => {\r\n                buscarLancamentos();\r\n                setNovoModalAberto(false);\r\n              })\r\n              .catch(err => {\r\n                console.error(\"Erro ao cadastrar gasto:\", err);\r\n                alert(\"Erro ao cadastrar novo lançamento.\");\r\n              });\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {idParaExcluir !== null && (\r\n        <div className=\"popup-overlay\">\r\n          <div className=\"popup\">\r\n            <p>Tem certeza que deseja excluir este lançamento?</p>\r\n            <div className=\"popup-buttons\">\r\n              <button className=\"btn-confirmar\" onClick={excluirConfirmado}>Confirmar</button>\r\n              <button className=\"btn-cancelar\" onClick={cancelarExclusao}>Cancelar</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Lancamentos;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}