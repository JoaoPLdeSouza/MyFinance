{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\pages\\\\Planos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Chart } from \"react-google-charts\";\nimport authService from \"../services/authService\";\nimport \"../assets/Planos.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Planos = () => {\n  _s();\n  var _dadosPlano$ajustes, _dadosPlano$riscos, _dadosPlano$ajustes2, _dadosPlano$riscos2;\n  const [dadosPlano, setDadosPlano] = useState(null);\n  const [loading, setLoading] = useState(false); // Começa como false para não carregar automaticamente\n  const [error, setError] = useState(null);\n  const [planoGerado, setPlanoGerado] = useState(false); // Novo estado para controlar se um plano já foi gerado\n\n  // useCallback para memorizar a função e evitar recriação desnecessária\n  const buscarPlanos = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n      if (!usuario || !usuario.id) {\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\n      }\n      const response = await authService.gerarPlano(usuario.id);\n      setDadosPlano(response.data);\n      setPlanoGerado(true); // Indica que um plano foi gerado com sucesso\n    } catch (err) {\n      console.error(\"Erro ao buscar dados do plano:\", err);\n      // Mensagens de erro mais amigáveis\n      if (err.response && err.response.status === 404) {\n        setError(\"Nenhum plano encontrado. Clique em 'Gerar Novo Plano' para criar um.\");\n      } else if (err.response && err.response.data && err.response.data.message) {\n        setError(`Erro ao gerar plano: ${err.response.data.message}`);\n      } else {\n        setError(\"Não foi possível gerar o plano financeiro. Verifique sua conexão ou tente novamente.\");\n      }\n      setDadosPlano(null); // Limpa dados antigos em caso de erro\n      setPlanoGerado(false); // Reseta o status se houver erro na geração\n    } finally {\n      setLoading(false);\n    }\n  }, []); // Sem dependências para esta função\n\n  useEffect(() => {\n    // Ao carregar a página, não geramos o plano automaticamente.\n    // O usuário deve clicar no botão.\n    // Podemos, no entanto, adicionar uma lógica para carregar um plano *anteriormente salvo*\n    // se o seu backend fornecer um endpoint para isso. Por enquanto, só o botão.\n  }, []);\n  const formatarValor = valor => {\n    return valor.toLocaleString(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    });\n  };\n  const prepararDadosParaGrafico = (dataArray, titulo) => {\n    // Agrupa os valores por categoria para o gráfico\n    const categoriasAgrupadas = dataArray.reduce((acc, item) => {\n      acc[item.categoria] = (acc[item.categoria] || 0) + item.valor;\n      return acc;\n    }, {});\n\n    // Converte para o formato do Google Charts\n    const dados = [[\"Categoria\", titulo]];\n    for (const categoria in categoriasAgrupadas) {\n      dados.push([categoriaMapeada[categoria] || categoria, categoriasAgrupadas[categoria]]);\n    }\n    return dados;\n  };\n  const categoriaMapeada = {\n    NECESSIDADES: \"Necessidades\",\n    DESEJOS: \"Desejos\",\n    INVESTIMENTO_E_POUPANCA: \"Investimento/Poupança\"\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planos-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"planos-header\",\n        children: \"Seu Plano Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"planos-description\",\n        children: \"Utilize esta ferramenta para gerar um plano financeiro personalizado. Com base nos seus lan\\xE7amentos, identificamos ajustes recomendados e \\xE1reas de risco em suas despesas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gerar-plano-button\",\n          onClick: buscarPlanos // Chama a função ao clicar\n          ,\n          disabled: loading // Desabilita o botão enquanto carrega\n          ,\n          children: loading ? \"Gerando Plano...\" : \"Gerar Novo Plano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-message error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), !planoGerado && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-message initial-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Clique em \\\"Gerar Novo Plano\\\" para analisar seus gastos e obter recomenda\\xE7\\xF5es.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), planoGerado && !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [(dadosPlano === null || dadosPlano === void 0 ? void 0 : (_dadosPlano$ajustes = dadosPlano.ajustes) === null || _dadosPlano$ajustes === void 0 ? void 0 : _dadosPlano$ajustes.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Ajustes Recomendados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Estes s\\xE3o os valores e categorias onde voc\\xEA pode ajustar seus gastos para melhorar sua sa\\xFAde financeira. Considere redirecionar esses valores para poupan\\xE7a ou investimentos.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planos-content-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                chartType: \"PieChart\",\n                width: \"100%\",\n                height: \"100%\",\n                data: prepararDadosParaGrafico(dadosPlano.ajustes, \"Valor Ajustado\"),\n                options: {\n                  title: \"Distribuição dos Ajustes Recomendados\",\n                  pieHole: 0.4,\n                  is3D: false,\n                  legend: {\n                    position: \"bottom\",\n                    alignment: \"center\"\n                  },\n                  colors: ['#28a745', '#007bff', '#ffc107', '#dc3545', '#6f42c1'],\n                  tooltip: {\n                    trigger: 'focus'\n                  } // Mostra tooltip ao focar/passar mouse\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Detalhes dos Ajustes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: dadosPlano.ajustes.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [categoriaMapeada[item.categoria] || item.categoria, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 27\n                  }, this), \" \", item.subcategoria, \" - \", formatarValor(item.valor)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), (dadosPlano === null || dadosPlano === void 0 ? void 0 : (_dadosPlano$riscos = dadosPlano.riscos) === null || _dadosPlano$riscos === void 0 ? void 0 : _dadosPlano$riscos.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\xC1reas de Risco\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Estes gastos foram detectados como potencialmente altos em suas categorias. Recomendamos uma revis\\xE3o para identificar oportunidades de economia.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planos-content-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                chartType: \"BarChart\",\n                width: \"100%\",\n                height: \"100%\",\n                data: prepararDadosParaGrafico(dadosPlano.riscos, \"Valor Detectado\"),\n                options: {\n                  title: \"Valores por Categoria de Risco\",\n                  legend: {\n                    position: \"none\"\n                  },\n                  bars: \"horizontal\",\n                  hAxis: {\n                    format: \"currency\"\n                  },\n                  colors: ['#dc3545'],\n                  // Cores para riscos\n                  tooltip: {\n                    trigger: 'focus'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Detalhes dos Riscos:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: dadosPlano.riscos.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [categoriaMapeada[item.categoria] || item.categoria, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 27\n                  }, this), \" \", item.subcategoria, \" - \", formatarValor(item.valor)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this), !(dadosPlano !== null && dadosPlano !== void 0 && (_dadosPlano$ajustes2 = dadosPlano.ajustes) !== null && _dadosPlano$ajustes2 !== void 0 && _dadosPlano$ajustes2.length) && !(dadosPlano !== null && dadosPlano !== void 0 && (_dadosPlano$riscos2 = dadosPlano.riscos) !== null && _dadosPlano$riscos2 !== void 0 && _dadosPlano$riscos2.length) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-message no-data-found-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"N\\xE3o foram encontrados ajustes ou riscos para o seu perfil atual. Continue monitorando seus gastos!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this), (dadosPlano === null || dadosPlano === void 0 ? void 0 : dadosPlano.dataAlteracao) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"data-alteracao\",\n          children: [\"\\xDAltima atualiza\\xE7\\xE3o do plano: \", dadosPlano.dataAlteracao]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Planos, \"SkyKQzmAUrNT7lbYkwa1g78OW64=\");\n_c = Planos;\nexport default Planos;\nvar _c;\n$RefreshReg$(_c, \"Planos\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Layout","Chart","authService","jsxDEV","_jsxDEV","Fragment","_Fragment","Planos","_s","_dadosPlano$ajustes","_dadosPlano$riscos","_dadosPlano$ajustes2","_dadosPlano$riscos2","dadosPlano","setDadosPlano","loading","setLoading","error","setError","planoGerado","setPlanoGerado","buscarPlanos","usuario","JSON","parse","localStorage","getItem","id","Error","response","gerarPlano","data","err","console","status","message","formatarValor","valor","toLocaleString","style","currency","prepararDadosParaGrafico","dataArray","titulo","categoriasAgrupadas","reduce","acc","item","categoria","dados","push","categoriaMapeada","NECESSIDADES","DESEJOS","INVESTIMENTO_E_POUPANCA","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ajustes","length","chartType","width","height","options","title","pieHole","is3D","legend","position","alignment","colors","tooltip","trigger","map","index","subcategoria","riscos","bars","hAxis","format","dataAlteracao","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/pages/Planos.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport authService from \"../services/authService\";\r\nimport \"../assets/Planos.css\";\r\n\r\nconst Planos = () => {\r\n  const [dadosPlano, setDadosPlano] = useState(null);\r\n  const [loading, setLoading] = useState(false); // Começa como false para não carregar automaticamente\r\n  const [error, setError] = useState(null);\r\n  const [planoGerado, setPlanoGerado] = useState(false); // Novo estado para controlar se um plano já foi gerado\r\n\r\n  // useCallback para memorizar a função e evitar recriação desnecessária\r\n  const buscarPlanos = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n      if (!usuario || !usuario.id) {\r\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\r\n      }\r\n\r\n      const response = await authService.gerarPlano(usuario.id);\r\n      setDadosPlano(response.data);\r\n      setPlanoGerado(true); // Indica que um plano foi gerado com sucesso\r\n    } catch (err) {\r\n      console.error(\"Erro ao buscar dados do plano:\", err);\r\n      // Mensagens de erro mais amigáveis\r\n      if (err.response && err.response.status === 404) {\r\n        setError(\"Nenhum plano encontrado. Clique em 'Gerar Novo Plano' para criar um.\");\r\n      } else if (err.response && err.response.data && err.response.data.message) {\r\n        setError(`Erro ao gerar plano: ${err.response.data.message}`);\r\n      } else {\r\n        setError(\"Não foi possível gerar o plano financeiro. Verifique sua conexão ou tente novamente.\");\r\n      }\r\n      setDadosPlano(null); // Limpa dados antigos em caso de erro\r\n      setPlanoGerado(false); // Reseta o status se houver erro na geração\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []); // Sem dependências para esta função\r\n\r\n  useEffect(() => {\r\n    // Ao carregar a página, não geramos o plano automaticamente.\r\n    // O usuário deve clicar no botão.\r\n    // Podemos, no entanto, adicionar uma lógica para carregar um plano *anteriormente salvo*\r\n    // se o seu backend fornecer um endpoint para isso. Por enquanto, só o botão.\r\n  }, []);\r\n\r\n\r\n  const formatarValor = (valor) => {\r\n    return valor.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" });\r\n  };\r\n\r\n  const prepararDadosParaGrafico = (dataArray, titulo) => {\r\n    // Agrupa os valores por categoria para o gráfico\r\n    const categoriasAgrupadas = dataArray.reduce((acc, item) => {\r\n      acc[item.categoria] = (acc[item.categoria] || 0) + item.valor;\r\n      return acc;\r\n    }, {});\r\n\r\n    // Converte para o formato do Google Charts\r\n    const dados = [[\"Categoria\", titulo]];\r\n    for (const categoria in categoriasAgrupadas) {\r\n      dados.push([categoriaMapeada[categoria] || categoria, categoriasAgrupadas[categoria]]);\r\n    }\r\n    return dados;\r\n  };\r\n\r\n  const categoriaMapeada = {\r\n    NECESSIDADES: \"Necessidades\",\r\n    DESEJOS: \"Desejos\",\r\n    INVESTIMENTO_E_POUPANCA: \"Investimento/Poupança\"\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"planos-container\">\r\n        <h1 className=\"planos-header\">Seu Plano Financeiro</h1>\r\n        <p className=\"planos-description\">\r\n          Utilize esta ferramenta para gerar um plano financeiro personalizado.\r\n          Com base nos seus lançamentos, identificamos ajustes recomendados\r\n          e áreas de risco em suas despesas.\r\n        </p>\r\n\r\n        <div className=\"planos-actions\">\r\n          <button\r\n            className=\"gerar-plano-button\"\r\n            onClick={buscarPlanos} // Chama a função ao clicar\r\n            disabled={loading} // Desabilita o botão enquanto carrega\r\n          >\r\n            {loading ? \"Gerando Plano...\" : \"Gerar Novo Plano\"}\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"planos-message error-message\">\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {!planoGerado && !loading && !error && (\r\n          <div className=\"planos-message initial-message\">\r\n            <p>Clique em \"Gerar Novo Plano\" para analisar seus gastos e obter recomendações.</p>\r\n          </div>\r\n        )}\r\n\r\n        {planoGerado && !loading && !error && (\r\n          <>\r\n            {dadosPlano?.ajustes?.length > 0 && (\r\n              <div className=\"planos-section\">\r\n                <h2>Ajustes Recomendados</h2>\r\n                <p>\r\n                  Estes são os valores e categorias onde você pode ajustar seus gastos para\r\n                  melhorar sua saúde financeira. Considere redirecionar esses valores\r\n                  para poupança ou investimentos.\r\n                </p>\r\n                <div className=\"planos-content-grid\">\r\n                  <div className=\"chart-wrapper\">\r\n                    <Chart\r\n                      chartType=\"PieChart\"\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      data={prepararDadosParaGrafico(dadosPlano.ajustes, \"Valor Ajustado\")}\r\n                      options={{\r\n                        title: \"Distribuição dos Ajustes Recomendados\",\r\n                        pieHole: 0.4,\r\n                        is3D: false,\r\n                        legend: { position: \"bottom\", alignment: \"center\" },\r\n                        colors: ['#28a745', '#007bff', '#ffc107', '#dc3545', '#6f42c1'],\r\n                        tooltip: { trigger: 'focus' } // Mostra tooltip ao focar/passar mouse\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"list-wrapper\">\r\n                    <h3>Detalhes dos Ajustes:</h3>\r\n                    <ul>\r\n                      {dadosPlano.ajustes.map((item, index) => (\r\n                        <li key={index}>\r\n                          <strong>{categoriaMapeada[item.categoria] || item.categoria}:</strong> {item.subcategoria} - {formatarValor(item.valor)}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {dadosPlano?.riscos?.length > 0 && (\r\n              <div className=\"planos-section\">\r\n                <h2>Áreas de Risco</h2>\r\n                <p>\r\n                  Estes gastos foram detectados como potencialmente altos em suas categorias.\r\n                  Recomendamos uma revisão para identificar oportunidades de economia.\r\n                </p>\r\n                <div className=\"planos-content-grid\">\r\n                  <div className=\"chart-wrapper\">\r\n                    <Chart\r\n                      chartType=\"BarChart\"\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      data={prepararDadosParaGrafico(dadosPlano.riscos, \"Valor Detectado\")}\r\n                      options={{\r\n                        title: \"Valores por Categoria de Risco\",\r\n                        legend: { position: \"none\" },\r\n                        bars: \"horizontal\",\r\n                        hAxis: { format: \"currency\" },\r\n                        colors: ['#dc3545'], // Cores para riscos\r\n                        tooltip: { trigger: 'focus' }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"list-wrapper\">\r\n                    <h3>Detalhes dos Riscos:</h3>\r\n                    <ul>\r\n                      {dadosPlano.riscos.map((item, index) => (\r\n                        <li key={index}>\r\n                          <strong>{categoriaMapeada[item.categoria] || item.categoria}:</strong> {item.subcategoria} - {formatarValor(item.valor)}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {!dadosPlano?.ajustes?.length && !dadosPlano?.riscos?.length && (\r\n                <div className=\"planos-message no-data-found-message\">\r\n                    <p>Não foram encontrados ajustes ou riscos para o seu perfil atual. Continue monitorando seus gastos!</p>\r\n                </div>\r\n            )}\r\n\r\n            {dadosPlano?.dataAlteracao && (\r\n              <p className=\"data-alteracao\">\r\n                Última atualização do plano: {dadosPlano.dataAlteracao}\r\n              </p>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Planos;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,mBAAA,EAAAC,kBAAA,EAAAC,oBAAA,EAAAC,mBAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMuB,YAAY,GAAGtB,WAAW,CAAC,YAAY;IAC3CiB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;MAC3D,IAAI,CAACJ,OAAO,IAAI,CAACA,OAAO,CAACK,EAAE,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;MACxE;MAEA,MAAMC,QAAQ,GAAG,MAAM3B,WAAW,CAAC4B,UAAU,CAACR,OAAO,CAACK,EAAE,CAAC;MACzDb,aAAa,CAACe,QAAQ,CAACE,IAAI,CAAC;MAC5BX,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAAChB,KAAK,CAAC,gCAAgC,EAAEe,GAAG,CAAC;MACpD;MACA,IAAIA,GAAG,CAACH,QAAQ,IAAIG,GAAG,CAACH,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC/ChB,QAAQ,CAAC,sEAAsE,CAAC;MAClF,CAAC,MAAM,IAAIc,GAAG,CAACH,QAAQ,IAAIG,GAAG,CAACH,QAAQ,CAACE,IAAI,IAAIC,GAAG,CAACH,QAAQ,CAACE,IAAI,CAACI,OAAO,EAAE;QACzEjB,QAAQ,CAAC,wBAAwBc,GAAG,CAACH,QAAQ,CAACE,IAAI,CAACI,OAAO,EAAE,CAAC;MAC/D,CAAC,MAAM;QACLjB,QAAQ,CAAC,sFAAsF,CAAC;MAClG;MACAJ,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;MACrBM,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERnB,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAGN,MAAMuC,aAAa,GAAIC,KAAK,IAAK;IAC/B,OAAOA,KAAK,CAACC,cAAc,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE,UAAU;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAAC;EAC9E,CAAC;EAED,MAAMC,wBAAwB,GAAGA,CAACC,SAAS,EAAEC,MAAM,KAAK;IACtD;IACA,MAAMC,mBAAmB,GAAGF,SAAS,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MAC1DD,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC,GAAG,CAACF,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC,IAAID,IAAI,CAACV,KAAK;MAC7D,OAAOS,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACA,MAAMG,KAAK,GAAG,CAAC,CAAC,WAAW,EAAEN,MAAM,CAAC,CAAC;IACrC,KAAK,MAAMK,SAAS,IAAIJ,mBAAmB,EAAE;MAC3CK,KAAK,CAACC,IAAI,CAAC,CAACC,gBAAgB,CAACH,SAAS,CAAC,IAAIA,SAAS,EAAEJ,mBAAmB,CAACI,SAAS,CAAC,CAAC,CAAC;IACxF;IACA,OAAOC,KAAK;EACd,CAAC;EAED,MAAME,gBAAgB,GAAG;IACvBC,YAAY,EAAE,cAAc;IAC5BC,OAAO,EAAE,SAAS;IAClBC,uBAAuB,EAAE;EAC3B,CAAC;EAED,oBACElD,OAAA,CAACJ,MAAM;IAAAuD,QAAA,eACLnD,OAAA;MAAKoD,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/BnD,OAAA;QAAIoD,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvDxD,OAAA;QAAGoD,SAAS,EAAC,oBAAoB;QAAAD,QAAA,EAAC;MAIlC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEJxD,OAAA;QAAKoD,SAAS,EAAC,gBAAgB;QAAAD,QAAA,eAC7BnD,OAAA;UACEoD,SAAS,EAAC,oBAAoB;UAC9BK,OAAO,EAAExC,YAAa,CAAC;UAAA;UACvByC,QAAQ,EAAE/C,OAAQ,CAAC;UAAA;UAAAwC,QAAA,EAElBxC,OAAO,GAAG,kBAAkB,GAAG;QAAkB;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAEL3C,KAAK,iBACJb,OAAA;QAAKoD,SAAS,EAAC,8BAA8B;QAAAD,QAAA,eAC3CnD,OAAA;UAAAmD,QAAA,EAAItC;QAAK;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CACN,EAEA,CAACzC,WAAW,IAAI,CAACJ,OAAO,IAAI,CAACE,KAAK,iBACjCb,OAAA;QAAKoD,SAAS,EAAC,gCAAgC;QAAAD,QAAA,eAC7CnD,OAAA;UAAAmD,QAAA,EAAG;QAA6E;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CACN,EAEAzC,WAAW,IAAI,CAACJ,OAAO,IAAI,CAACE,KAAK,iBAChCb,OAAA,CAAAE,SAAA;QAAAiD,QAAA,GACG,CAAA1C,UAAU,aAAVA,UAAU,wBAAAJ,mBAAA,GAAVI,UAAU,CAAEkD,OAAO,cAAAtD,mBAAA,uBAAnBA,mBAAA,CAAqBuD,MAAM,IAAG,CAAC,iBAC9B5D,OAAA;UAAKoD,SAAS,EAAC,gBAAgB;UAAAD,QAAA,gBAC7BnD,OAAA;YAAAmD,QAAA,EAAI;UAAoB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BxD,OAAA;YAAAmD,QAAA,EAAG;UAIH;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJxD,OAAA;YAAKoD,SAAS,EAAC,qBAAqB;YAAAD,QAAA,gBAClCnD,OAAA;cAAKoD,SAAS,EAAC,eAAe;cAAAD,QAAA,eAC5BnD,OAAA,CAACH,KAAK;gBACJgE,SAAS,EAAC,UAAU;gBACpBC,KAAK,EAAC,MAAM;gBACZC,MAAM,EAAC,MAAM;gBACbpC,IAAI,EAAEU,wBAAwB,CAAC5B,UAAU,CAACkD,OAAO,EAAE,gBAAgB,CAAE;gBACrEK,OAAO,EAAE;kBACPC,KAAK,EAAE,uCAAuC;kBAC9CC,OAAO,EAAE,GAAG;kBACZC,IAAI,EAAE,KAAK;kBACXC,MAAM,EAAE;oBAAEC,QAAQ,EAAE,QAAQ;oBAAEC,SAAS,EAAE;kBAAS,CAAC;kBACnDC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;kBAC/DC,OAAO,EAAE;oBAAEC,OAAO,EAAE;kBAAQ,CAAC,CAAC;gBAChC;cAAE;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNxD,OAAA;cAAKoD,SAAS,EAAC,cAAc;cAAAD,QAAA,gBAC3BnD,OAAA;gBAAAmD,QAAA,EAAI;cAAqB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC9BxD,OAAA;gBAAAmD,QAAA,EACG1C,UAAU,CAACkD,OAAO,CAACe,GAAG,CAAC,CAAC/B,IAAI,EAAEgC,KAAK,kBAClC3E,OAAA;kBAAAmD,QAAA,gBACEnD,OAAA;oBAAAmD,QAAA,GAASJ,gBAAgB,CAACJ,IAAI,CAACC,SAAS,CAAC,IAAID,IAAI,CAACC,SAAS,EAAC,GAAC;kBAAA;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,KAAC,EAACb,IAAI,CAACiC,YAAY,EAAC,KAAG,EAAC5C,aAAa,CAACW,IAAI,CAACV,KAAK,CAAC;gBAAA,GADhH0C,KAAK;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEV,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAEA,CAAA/C,UAAU,aAAVA,UAAU,wBAAAH,kBAAA,GAAVG,UAAU,CAAEoE,MAAM,cAAAvE,kBAAA,uBAAlBA,kBAAA,CAAoBsD,MAAM,IAAG,CAAC,iBAC7B5D,OAAA;UAAKoD,SAAS,EAAC,gBAAgB;UAAAD,QAAA,gBAC7BnD,OAAA;YAAAmD,QAAA,EAAI;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBxD,OAAA;YAAAmD,QAAA,EAAG;UAGH;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJxD,OAAA;YAAKoD,SAAS,EAAC,qBAAqB;YAAAD,QAAA,gBAClCnD,OAAA;cAAKoD,SAAS,EAAC,eAAe;cAAAD,QAAA,eAC5BnD,OAAA,CAACH,KAAK;gBACJgE,SAAS,EAAC,UAAU;gBACpBC,KAAK,EAAC,MAAM;gBACZC,MAAM,EAAC,MAAM;gBACbpC,IAAI,EAAEU,wBAAwB,CAAC5B,UAAU,CAACoE,MAAM,EAAE,iBAAiB,CAAE;gBACrEb,OAAO,EAAE;kBACPC,KAAK,EAAE,gCAAgC;kBACvCG,MAAM,EAAE;oBAAEC,QAAQ,EAAE;kBAAO,CAAC;kBAC5BS,IAAI,EAAE,YAAY;kBAClBC,KAAK,EAAE;oBAAEC,MAAM,EAAE;kBAAW,CAAC;kBAC7BT,MAAM,EAAE,CAAC,SAAS,CAAC;kBAAE;kBACrBC,OAAO,EAAE;oBAAEC,OAAO,EAAE;kBAAQ;gBAC9B;cAAE;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNxD,OAAA;cAAKoD,SAAS,EAAC,cAAc;cAAAD,QAAA,gBAC3BnD,OAAA;gBAAAmD,QAAA,EAAI;cAAoB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC7BxD,OAAA;gBAAAmD,QAAA,EACG1C,UAAU,CAACoE,MAAM,CAACH,GAAG,CAAC,CAAC/B,IAAI,EAAEgC,KAAK,kBACjC3E,OAAA;kBAAAmD,QAAA,gBACEnD,OAAA;oBAAAmD,QAAA,GAASJ,gBAAgB,CAACJ,IAAI,CAACC,SAAS,CAAC,IAAID,IAAI,CAACC,SAAS,EAAC,GAAC;kBAAA;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,KAAC,EAACb,IAAI,CAACiC,YAAY,EAAC,KAAG,EAAC5C,aAAa,CAACW,IAAI,CAACV,KAAK,CAAC;gBAAA,GADhH0C,KAAK;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEV,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAEA,EAAC/C,UAAU,aAAVA,UAAU,gBAAAF,oBAAA,GAAVE,UAAU,CAAEkD,OAAO,cAAApD,oBAAA,eAAnBA,oBAAA,CAAqBqD,MAAM,KAAI,EAACnD,UAAU,aAAVA,UAAU,gBAAAD,mBAAA,GAAVC,UAAU,CAAEoE,MAAM,cAAArE,mBAAA,eAAlBA,mBAAA,CAAoBoD,MAAM,kBACxD5D,OAAA;UAAKoD,SAAS,EAAC,sCAAsC;UAAAD,QAAA,eACjDnD,OAAA;YAAAmD,QAAA,EAAG;UAAkG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxG,CACR,EAEA,CAAA/C,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEwE,aAAa,kBACxBjF,OAAA;UAAGoD,SAAS,EAAC,gBAAgB;UAAAD,QAAA,GAAC,wCACC,EAAC1C,UAAU,CAACwE,aAAa;QAAA;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CACJ;MAAA,eACD,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACpD,EAAA,CApMID,MAAM;AAAA+E,EAAA,GAAN/E,MAAM;AAsMZ,eAAeA,MAAM;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}