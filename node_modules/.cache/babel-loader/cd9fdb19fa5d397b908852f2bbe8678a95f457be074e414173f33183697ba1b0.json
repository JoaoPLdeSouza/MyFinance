{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\pages\\\\Planos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Chart } from \"react-google-charts\";\nimport authService from \"../services/authService\";\nimport \"../assets/Planos.css\";\nimport ValueInputPopup from \"../components/ValueInputPopup\"; // Import the new popup component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Planos = () => {\n  _s();\n  var _dadosPlano$ajustes, _dadosPlano$riscos;\n  const [dadosPlano, setDadosPlano] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showValueInputPopup, setShowValueInputPopup] = useState(false); // State for popup visibility\n  const [todosOsPlanos, setTodosOsPlanos] = useState([]); // State to store all recent plans\n  const [currentPlanIndex, setCurrentPlanIndex] = useState(0); // State for current displayed plan index\n\n  const formatarValor = valor => {\n    return valor.toLocaleString(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    });\n  };\n  const categoriaMapeada = {\n    NECESSIDADES: \"Necessidades\",\n    DESEJOS: \"Desejos\",\n    INVESTIMENTO_E_POUPANCA: \"Investimento/Poupança\"\n  };\n  const prepararDadosParaGrafico = (dataArray, titulo) => {\n    const categoriasAgrupadas = dataArray.reduce((acc, item) => {\n      acc[item.categoria] = (acc[item.categoria] || 0) + item.valor;\n      return acc;\n    }, {});\n    const dados = [[\"Categoria\", titulo]];\n    for (const categoria in categoriasAgrupadas) {\n      dados.push([categoriaMapeada[categoria] || categoria, categoriasAgrupadas[categoria]]);\n    }\n    return dados;\n  };\n\n  // Function to load the user's plans (up to the last 3)\n  const carregarPlanosDoUsuario = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n      if (!usuario || !usuario.id) {\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\n      }\n      const response = await authService.buscarPlanosPorUsuario(usuario.id);\n      if (Array.isArray(response.data) && response.data.length > 0) {\n        const planosDoUsuario = response.data.filter(plano => plano.idUsuario === usuario.id).sort((a, b) => b.id - a.id); // Sort by ID descending (most recent first)\n\n        // Take up to the last 3 plans\n        const ultimos3Planos = planosDoUsuario.slice(0, 3);\n        setTodosOsPlanos(ultimos3Planos);\n        if (ultimos3Planos.length > 0) {\n          // Set the most recent plan as the currently displayed one\n          setDadosPlano(ultimos3Planos[0]);\n          setCurrentPlanIndex(0); // Set index to the most recent plan\n        } else {\n          setDadosPlano(null);\n          setCurrentPlanIndex(0);\n        }\n      } else {\n        setDadosPlano(null);\n        setTodosOsPlanos([]);\n        setCurrentPlanIndex(0);\n      }\n    } catch (err) {\n      console.error(\"Erro ao carregar os planos:\", err);\n      if (err.response && err.response.status === 404) {\n        setDadosPlano(null);\n        setTodosOsPlanos([]);\n      } else if (err.response && err.response.data && err.response.data.message) {\n        setError(`Erro ao carregar planos: ${err.response.data.message}`);\n      } else {\n        setError(\"Não foi possível carregar os planos financeiros. Verifique sua conexão.\");\n      }\n      setDadosPlano(null);\n      setTodosOsPlanos([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Function to generate a NEW plan without optional value\n  const gerarNovoPlano = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n      if (!usuario || !usuario.id) {\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\n      }\n      const response = await authService.gerarPlano(usuario.id);\n      if (response.data && response.data.id) {\n        carregarPlanosDoUsuario(); // Recarga os planos para exibir o recém-gerado\n      } else {\n        setDadosPlano(null);\n        setError(\"O plano foi gerado, mas não pudemos exibi-lo. Tente recarregar a página.\");\n      }\n    } catch (err) {\n      console.error(\"Erro ao gerar novo plano:\", err);\n      if (err.response && err.response.data && err.response.data.message) {\n        setError(`Erro ao gerar plano: ${err.response.data.message}`);\n      } else {\n        setError(\"Não foi possível gerar um novo plano financeiro. Verifique sua conexão ou tente novamente.\");\n      }\n      setDadosPlano(null);\n    } finally {\n      setLoading(false);\n    }\n  }, [carregarPlanosDoUsuario]);\n\n  // NEW Function: Generate plan with optional value\n  const gerarNovoPlanoComValor = useCallback(async valor => {\n    setLoading(true);\n    setError(null);\n    setShowValueInputPopup(false); // Close popup immediately\n    try {\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n      if (!usuario || !usuario.id) {\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\n      }\n      const response = await authService.gerarPlano(usuario.id, valor); // Pass the optional value\n\n      if (response.data && response.data.id) {\n        carregarPlanosDoUsuario();\n      } else {\n        setDadosPlano(null);\n        setError(\"O plano foi gerado, mas não pudemos exibi-lo. Tente recarregar a página.\");\n      }\n    } catch (err) {\n      console.error(\"Erro ao gerar novo plano com valor:\", err);\n      if (err.response && err.response.data && err.response.data.message) {\n        setError(`Erro ao gerar plano: ${err.response.data.message}`);\n      } else {\n        setError(\"Não foi possível gerar um novo plano financeiro com o valor fornecido. Verifique sua conexão ou tente novamente.\");\n      }\n      setDadosPlano(null);\n    } finally {\n      setLoading(false);\n    }\n  }, [carregarPlanosDoUsuario]);\n\n  // Navigation for plans\n  const handlePreviousPlan = () => {\n    const newIndex = currentPlanIndex + 1;\n    if (newIndex < todosOsPlanos.length) {\n      setCurrentPlanIndex(newIndex);\n      setDadosPlano(todosOsPlanos[newIndex]);\n    }\n  };\n  const handleNextPlan = () => {\n    const newIndex = currentPlanIndex - 1;\n    if (newIndex >= 0) {\n      setCurrentPlanIndex(newIndex);\n      setDadosPlano(todosOsPlanos[newIndex]);\n    }\n  };\n\n  // Effect to load plans on component mount\n  useEffect(() => {\n    carregarPlanosDoUsuario();\n  }, [carregarPlanosDoUsuario]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planos-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"planos-header\",\n        children: \"Seu Plano Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"planos-description\",\n        children: \"Aqui voc\\xEA pode visualizar seu plano financeiro atual. Ele \\xE9 gerado com base nos seus lan\\xE7amentos e oferece recomenda\\xE7\\xF5es de ajustes e identifica \\xE1reas de risco em suas despesas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gerar-plano-button\",\n          onClick: gerarNovoPlano,\n          disabled: loading,\n          children: loading ? \"Gerando Plano...\" : \"Gerar Novo Plano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gerar-plano-button\",\n          onClick: () => setShowValueInputPopup(true) // Button to open the popup\n          ,\n          disabled: loading,\n          style: {\n            marginLeft: '10px'\n          } // Add some spacing\n          ,\n          children: \"Gerar Plano com Valor Espec\\xEDfico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-message loading-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Carregando plano financeiro...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-message error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), !loading && !error && dadosPlano && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Entenda seu plano:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), \"Ajustes Recomendados: Representam oportunidades para otimizar seus gastos. Considere direcionar esses valores para suas economias ou investimentos, visando alcan\\xE7ar seus objetivos financeiros mais rapidamente.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), \"\\xC1reas de Risco: Indicam despesas que foram identificadas como potencialmente altas. \\xC9 crucial revisar esses itens para identificar onde voc\\xEA pode economizar e evitar que eles comprometam sua sa\\xFAde financeira.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), dadosPlano.ajustes && dadosPlano.ajustes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Ajustes Recomendados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Estes s\\xE3o os valores e categorias onde voc\\xEA pode ajustar seus gastos para melhorar sua sa\\xFAde financeira. Ao reduzir esses gastos, voc\\xEA pode direcionar mais recursos para suas metas financeiras.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planos-content-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                chartType: \"PieChart\",\n                width: \"100%\",\n                height: \"100%\",\n                data: prepararDadosParaGrafico(dadosPlano.ajustes, \"Valor Ajustado\"),\n                options: {\n                  title: \"Distribuição dos Ajustes Recomendados\",\n                  pieHole: 0.4,\n                  is3D: false,\n                  legend: {\n                    position: \"bottom\",\n                    alignment: \"center\"\n                  },\n                  colors: ['#28a745', '#007bff', '#ffc107', '#6f42c1', '#17a2b8'],\n                  tooltip: {\n                    trigger: 'focus'\n                  },\n                  backgroundColor: 'transparent'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Detalhes dos Ajustes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: dadosPlano.ajustes.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [categoriaMapeada[item.categoria] || item.categoria, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 27\n                  }, this), \" \", item.subcategoria, \" - \", formatarValor(item.valor)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this), dadosPlano.riscos && dadosPlano.riscos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\xC1reas de Risco\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Estes gastos foram identificados como potencialmente altos. Recomendamos que voc\\xEA os revise para encontrar oportunidades de economia e evitar desequil\\xEDbrios em suas finan\\xE7as.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planos-content-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                chartType: \"BarChart\",\n                width: \"100%\",\n                height: \"100%\",\n                data: prepararDadosParaGrafico(dadosPlano.riscos, \"Valor Detectado\"),\n                options: {\n                  title: \"Valores por Categoria de Risco\",\n                  legend: {\n                    position: \"none\"\n                  },\n                  bars: \"horizontal\",\n                  hAxis: {\n                    format: \"currency\"\n                  },\n                  colors: ['#dc3545'],\n                  // Cores para riscos\n                  tooltip: {\n                    trigger: 'focus'\n                  },\n                  backgroundColor: 'transparent'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Detalhes dos Riscos:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: dadosPlano.riscos.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [categoriaMapeada[item.categoria] || item.categoria, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 27\n                  }, this), \" \", item.subcategoria, \" - \", formatarValor(item.valor)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this), !(dadosPlano !== null && dadosPlano !== void 0 && (_dadosPlano$ajustes = dadosPlano.ajustes) !== null && _dadosPlano$ajustes !== void 0 && _dadosPlano$ajustes.length) && !(dadosPlano !== null && dadosPlano !== void 0 && (_dadosPlano$riscos = dadosPlano.riscos) !== null && _dadosPlano$riscos !== void 0 && _dadosPlano$riscos.length) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-message no-data-found-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"O plano foi gerado, mas n\\xE3o foram encontrados ajustes ou riscos para o seu perfil financeiro atual. Parece que suas finan\\xE7as est\\xE3o em ordem!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }, this), dadosPlano.dataAlteracao && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"data-alteracao\",\n          children: [\"\\xDAltima atualiza\\xE7\\xE3o do plano: \", dadosPlano.dataAlteracao]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this), todosOsPlanos.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePreviousPlan,\n            disabled: currentPlanIndex === todosOsPlanos.length - 1 || loading,\n            className: \"gerar-plano-button\" // Reusing the button style\n            ,\n            style: {\n              marginRight: '10px'\n            },\n            children: [\"Plano Anterior (\", todosOsPlanos.length - 1 - currentPlanIndex, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextPlan,\n            disabled: currentPlanIndex === 0 || loading,\n            className: \"gerar-plano-button\" // Reusing the button style\n            ,\n            children: [\"Pr\\xF3ximo Plano (\", currentPlanIndex, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), !loading && !error && !dadosPlano && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-message initial-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Voc\\xEA ainda n\\xE3o possui um plano financeiro salvo ou ele est\\xE1 vazio.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), \"Clique em \\\"Gerar Novo Plano\\\" para analisar seus gastos e obter recomenda\\xE7\\xF5es personalizadas.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ValueInputPopup, {\n        isOpen: showValueInputPopup,\n        onClose: () => setShowValueInputPopup(false),\n        onSubmit: gerarNovoPlanoComValor,\n        isLoading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Planos, \"eEC7OlQW0357M/FAuh74sbOprJc=\");\n_c = Planos;\nexport default Planos;\nvar _c;\n$RefreshReg$(_c, \"Planos\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Layout","Chart","authService","ValueInputPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","Planos","_s","_dadosPlano$ajustes","_dadosPlano$riscos","dadosPlano","setDadosPlano","loading","setLoading","error","setError","showValueInputPopup","setShowValueInputPopup","todosOsPlanos","setTodosOsPlanos","currentPlanIndex","setCurrentPlanIndex","formatarValor","valor","toLocaleString","style","currency","categoriaMapeada","NECESSIDADES","DESEJOS","INVESTIMENTO_E_POUPANCA","prepararDadosParaGrafico","dataArray","titulo","categoriasAgrupadas","reduce","acc","item","categoria","dados","push","carregarPlanosDoUsuario","usuario","JSON","parse","localStorage","getItem","id","Error","response","buscarPlanosPorUsuario","Array","isArray","data","length","planosDoUsuario","filter","plano","idUsuario","sort","a","b","ultimos3Planos","slice","err","console","status","message","gerarNovoPlano","gerarPlano","gerarNovoPlanoComValor","handlePreviousPlan","newIndex","handleNextPlan","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","marginLeft","ajustes","chartType","width","height","options","title","pieHole","is3D","legend","position","alignment","colors","tooltip","trigger","backgroundColor","map","index","subcategoria","riscos","bars","hAxis","format","dataAlteracao","marginRight","isOpen","onClose","onSubmit","isLoading","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/pages/Planos.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport authService from \"../services/authService\";\r\nimport \"../assets/Planos.css\";\r\nimport ValueInputPopup from \"../components/ValueInputPopup\"; // Import the new popup component\r\n\r\nconst Planos = () => {\r\n  const [dadosPlano, setDadosPlano] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showValueInputPopup, setShowValueInputPopup] = useState(false); // State for popup visibility\r\n  const [todosOsPlanos, setTodosOsPlanos] = useState([]); // State to store all recent plans\r\n  const [currentPlanIndex, setCurrentPlanIndex] = useState(0); // State for current displayed plan index\r\n\r\n  const formatarValor = (valor) => {\r\n    return valor.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" });\r\n  };\r\n\r\n  const categoriaMapeada = {\r\n    NECESSIDADES: \"Necessidades\",\r\n    DESEJOS: \"Desejos\",\r\n    INVESTIMENTO_E_POUPANCA: \"Investimento/Poupança\"\r\n  };\r\n\r\n  const prepararDadosParaGrafico = (dataArray, titulo) => {\r\n    const categoriasAgrupadas = dataArray.reduce((acc, item) => {\r\n      acc[item.categoria] = (acc[item.categoria] || 0) + item.valor;\r\n      return acc;\r\n    }, {});\r\n\r\n    const dados = [[\"Categoria\", titulo]];\r\n    for (const categoria in categoriasAgrupadas) {\r\n      dados.push([categoriaMapeada[categoria] || categoria, categoriasAgrupadas[categoria]]);\r\n    }\r\n    return dados;\r\n  };\r\n\r\n  // Function to load the user's plans (up to the last 3)\r\n  const carregarPlanosDoUsuario = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n      if (!usuario || !usuario.id) {\r\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\r\n      }\r\n\r\n      const response = await authService.buscarPlanosPorUsuario(usuario.id);\r\n\r\n      if (Array.isArray(response.data) && response.data.length > 0) {\r\n        const planosDoUsuario = response.data\r\n          .filter((plano) => plano.idUsuario === usuario.id)\r\n          .sort((a, b) => b.id - a.id); // Sort by ID descending (most recent first)\r\n\r\n        // Take up to the last 3 plans\r\n        const ultimos3Planos = planosDoUsuario.slice(0, 3);\r\n        setTodosOsPlanos(ultimos3Planos);\r\n\r\n        if (ultimos3Planos.length > 0) {\r\n          // Set the most recent plan as the currently displayed one\r\n          setDadosPlano(ultimos3Planos[0]);\r\n          setCurrentPlanIndex(0); // Set index to the most recent plan\r\n        } else {\r\n          setDadosPlano(null);\r\n          setCurrentPlanIndex(0);\r\n        }\r\n      } else {\r\n        setDadosPlano(null);\r\n        setTodosOsPlanos([]);\r\n        setCurrentPlanIndex(0);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erro ao carregar os planos:\", err);\r\n      if (err.response && err.response.status === 404) {\r\n        setDadosPlano(null);\r\n        setTodosOsPlanos([]);\r\n      } else if (err.response && err.response.data && err.response.data.message) {\r\n        setError(`Erro ao carregar planos: ${err.response.data.message}`);\r\n      } else {\r\n        setError(\"Não foi possível carregar os planos financeiros. Verifique sua conexão.\");\r\n      }\r\n      setDadosPlano(null);\r\n      setTodosOsPlanos([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Function to generate a NEW plan without optional value\r\n  const gerarNovoPlano = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n      if (!usuario || !usuario.id) {\r\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\r\n      }\r\n\r\n      const response = await authService.gerarPlano(usuario.id);\r\n\r\n      if (response.data && response.data.id) {\r\n        carregarPlanosDoUsuario(); // Recarga os planos para exibir o recém-gerado\r\n      } else {\r\n        setDadosPlano(null);\r\n        setError(\"O plano foi gerado, mas não pudemos exibi-lo. Tente recarregar a página.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erro ao gerar novo plano:\", err);\r\n      if (err.response && err.response.data && err.response.data.message) {\r\n        setError(`Erro ao gerar plano: ${err.response.data.message}`);\r\n      } else {\r\n        setError(\"Não foi possível gerar um novo plano financeiro. Verifique sua conexão ou tente novamente.\");\r\n      }\r\n      setDadosPlano(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [carregarPlanosDoUsuario]);\r\n\r\n  // NEW Function: Generate plan with optional value\r\n  const gerarNovoPlanoComValor = useCallback(async (valor) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setShowValueInputPopup(false); // Close popup immediately\r\n    try {\r\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n      if (!usuario || !usuario.id) {\r\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\r\n      }\r\n\r\n      const response = await authService.gerarPlano(usuario.id, valor); // Pass the optional value\r\n\r\n      if (response.data && response.data.id) {\r\n        carregarPlanosDoUsuario();\r\n      } else {\r\n        setDadosPlano(null);\r\n        setError(\"O plano foi gerado, mas não pudemos exibi-lo. Tente recarregar a página.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erro ao gerar novo plano com valor:\", err);\r\n      if (err.response && err.response.data && err.response.data.message) {\r\n        setError(`Erro ao gerar plano: ${err.response.data.message}`);\r\n      } else {\r\n        setError(\"Não foi possível gerar um novo plano financeiro com o valor fornecido. Verifique sua conexão ou tente novamente.\");\r\n      }\r\n      setDadosPlano(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [carregarPlanosDoUsuario]);\r\n\r\n  // Navigation for plans\r\n  const handlePreviousPlan = () => {\r\n    const newIndex = currentPlanIndex + 1;\r\n    if (newIndex < todosOsPlanos.length) {\r\n      setCurrentPlanIndex(newIndex);\r\n      setDadosPlano(todosOsPlanos[newIndex]);\r\n    }\r\n  };\r\n\r\n  const handleNextPlan = () => {\r\n    const newIndex = currentPlanIndex - 1;\r\n    if (newIndex >= 0) {\r\n      setCurrentPlanIndex(newIndex);\r\n      setDadosPlano(todosOsPlanos[newIndex]);\r\n    }\r\n  };\r\n\r\n  // Effect to load plans on component mount\r\n  useEffect(() => {\r\n    carregarPlanosDoUsuario();\r\n  }, [carregarPlanosDoUsuario]);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"planos-container\">\r\n        <h1 className=\"planos-header\">Seu Plano Financeiro</h1>\r\n        <p className=\"planos-description\">\r\n          Aqui você pode visualizar seu plano financeiro atual. Ele é gerado com base nos seus lançamentos\r\n          e oferece recomendações de ajustes e identifica áreas de risco em suas despesas.\r\n        </p>\r\n\r\n        <div className=\"planos-actions\">\r\n          <button\r\n            className=\"gerar-plano-button\"\r\n            onClick={gerarNovoPlano}\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Gerando Plano...\" : \"Gerar Novo Plano\"}\r\n          </button>\r\n          <button\r\n            className=\"gerar-plano-button\"\r\n            onClick={() => setShowValueInputPopup(true)} // Button to open the popup\r\n            disabled={loading}\r\n            style={{ marginLeft: '10px' }} // Add some spacing\r\n          >\r\n            Gerar Plano com Valor Específico\r\n          </button>\r\n        </div>\r\n\r\n        {loading && (\r\n          <div className=\"planos-message loading-message\">\r\n            <p>Carregando plano financeiro...</p>\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <div className=\"planos-message error-message\">\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {!loading && !error && dadosPlano && (\r\n          <>\r\n            <div className=\"planos-summary\">\r\n              <p>\r\n                Entenda seu plano:\r\n                <br></br>\r\n                <br />\r\n                Ajustes Recomendados: Representam oportunidades para otimizar seus gastos.\r\n                Considere direcionar esses valores para suas economias ou investimentos,\r\n                visando alcançar seus objetivos financeiros mais rapidamente.\r\n                <br></br>\r\n                <br />\r\n                Áreas de Risco: Indicam despesas que foram identificadas como potencialmente altas.\r\n                É crucial revisar esses itens para identificar onde você pode economizar\r\n                e evitar que eles comprometam sua saúde financeira.\r\n              </p>\r\n            </div>\r\n\r\n            {dadosPlano.ajustes && dadosPlano.ajustes.length > 0 && (\r\n              <div className=\"planos-section\">\r\n                <h2>Ajustes Recomendados</h2>\r\n                <p>\r\n                  Estes são os valores e categorias onde você pode ajustar seus gastos para melhorar sua saúde financeira.\r\n                  Ao reduzir esses gastos, você pode direcionar mais recursos para suas metas financeiras.\r\n                </p>\r\n                <div className=\"planos-content-grid\">\r\n                  <div className=\"chart-wrapper\">\r\n                    <Chart\r\n                      chartType=\"PieChart\"\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      data={prepararDadosParaGrafico(dadosPlano.ajustes, \"Valor Ajustado\")}\r\n                      options={{\r\n                        title: \"Distribuição dos Ajustes Recomendados\",\r\n                        pieHole: 0.4,\r\n                        is3D: false,\r\n                        legend: { position: \"bottom\", alignment: \"center\" },\r\n                        colors: ['#28a745', '#007bff', '#ffc107', '#6f42c1', '#17a2b8'],\r\n                        tooltip: { trigger: 'focus' },\r\n                        backgroundColor: 'transparent'\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"list-wrapper\">\r\n                    <h3>Detalhes dos Ajustes:</h3>\r\n                    <ul>\r\n                      {dadosPlano.ajustes.map((item, index) => (\r\n                        <li key={index}>\r\n                          <strong>{categoriaMapeada[item.categoria] || item.categoria}:</strong> {item.subcategoria} - {formatarValor(item.valor)}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {dadosPlano.riscos && dadosPlano.riscos.length > 0 && (\r\n              <div className=\"planos-section\">\r\n                <h2>Áreas de Risco</h2>\r\n                <p>\r\n                  Estes gastos foram identificados como potencialmente altos. Recomendamos que\r\n                  você os revise para encontrar oportunidades de economia e evitar desequilíbrios em suas finanças.\r\n                </p>\r\n                <div className=\"planos-content-grid\">\r\n                  <div className=\"chart-wrapper\">\r\n                    <Chart\r\n                      chartType=\"BarChart\"\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      data={prepararDadosParaGrafico(dadosPlano.riscos, \"Valor Detectado\")}\r\n                      options={{\r\n                        title: \"Valores por Categoria de Risco\",\r\n                        legend: { position: \"none\" },\r\n                        bars: \"horizontal\",\r\n                        hAxis: { format: \"currency\" },\r\n                        colors: ['#dc3545'], // Cores para riscos\r\n                        tooltip: { trigger: 'focus' },\r\n                        backgroundColor: 'transparent'\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"list-wrapper\">\r\n                    <h3>Detalhes dos Riscos:</h3>\r\n                    <ul>\r\n                      {dadosPlano.riscos.map((item, index) => (\r\n                        <li key={index}>\r\n                          <strong>{categoriaMapeada[item.categoria] || item.categoria}:</strong> {item.subcategoria} - {formatarValor(item.valor)}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {!dadosPlano?.ajustes?.length && !dadosPlano?.riscos?.length && (\r\n              <div className=\"planos-message no-data-found-message\">\r\n                <p>O plano foi gerado, mas não foram encontrados ajustes ou riscos para o seu perfil financeiro atual. Parece que suas finanças estão em ordem!</p>\r\n              </div>\r\n            )}\r\n\r\n            {dadosPlano.dataAlteracao && (\r\n              <p className=\"data-alteracao\">\r\n                Última atualização do plano: {dadosPlano.dataAlteracao}\r\n              </p>\r\n            )}\r\n\r\n            {/* Plan navigation buttons */}\r\n            {todosOsPlanos.length > 1 && (\r\n              <div className=\"plan-navigation\">\r\n                <button\r\n                  onClick={handlePreviousPlan}\r\n                  disabled={currentPlanIndex === todosOsPlanos.length - 1 || loading}\r\n                  className=\"gerar-plano-button\" // Reusing the button style\r\n                  style={{ marginRight: '10px' }}\r\n                >\r\n                  Plano Anterior ({todosOsPlanos.length - 1 - currentPlanIndex})\r\n                </button>\r\n                <button\r\n                  onClick={handleNextPlan}\r\n                  disabled={currentPlanIndex === 0 || loading}\r\n                  className=\"gerar-plano-button\" // Reusing the button style\r\n                >\r\n                  Próximo Plano ({currentPlanIndex})\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {!loading && !error && !dadosPlano && (\r\n          <div className=\"planos-message initial-message\">\r\n            <p>\r\n              Você ainda não possui um plano financeiro salvo ou ele está vazio.\r\n              <br />\r\n              Clique em \"Gerar Novo Plano\" para analisar seus gastos e obter recomendações personalizadas.\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Render the popup component */}\r\n        <ValueInputPopup\r\n          isOpen={showValueInputPopup}\r\n          onClose={() => setShowValueInputPopup(false)}\r\n          onSubmit={gerarNovoPlanoComValor}\r\n          isLoading={loading}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Planos;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}