{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport \"../assets/Home.css\"; // Certifique-se que o CSS está linkado\nimport { Chart } from \"react-google-charts\";\nimport authService from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [renda, setRenda] = useState(0);\n  const [gastos, setGastos] = useState([]);\n  const [totalGasto, setTotalGasto] = useState(0);\n  const [totalInvestimento, setTotalInvestimento] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState(\"NECESSIDADES\");\n  const [chartsLoaded, setChartsLoaded] = useState(false);\n  const [dataError, setDataError] = useState(false); // Novo estado para erro de dados\n\n  useEffect(() => {\n    const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n    if (usuario !== null && usuario !== void 0 && usuario.id) {\n      authService.getUserById(usuario.id).then(res => setRenda(res.data.renda || 0)).catch(err => {\n        console.error(\"Erro ao buscar usuário:\", err);\n        setDataError(true); // Se houver erro aqui, provavelmente não teremos dados de gastos\n      });\n      authService.buscarLancamentosPorUsuario(usuario.id).then(res => {\n        const todos = res.data;\n        setGastos(todos);\n        const totalGasto = todos.filter(g => g.categoria !== \"INVESTIMENTO_E_POUPANCA\").reduce((acc, g) => acc + g.valor, 0);\n        const totalInvest = todos.filter(g => g.categoria === \"INVESTIMENTO_E_POUPANCA\").reduce((acc, g) => acc + g.valor, 0);\n        setTotalGasto(totalGasto);\n        setTotalInvestimento(totalInvest);\n        setChartsLoaded(true);\n        setDataError(false); // Sucesso na busca de dados\n      }).catch(err => {\n        console.error(\"Erro ao buscar lançamentos:\", err);\n        // Detecta se o erro é de sintaxe JSON (recebeu HTML)\n        if (err.response && err.response.headers['content-type'] && err.response.headers['content-type'].includes('text/html')) {\n          console.error(\"Recebeu HTML em vez de JSON. Verifique a URL da API ou o status de autenticação/autorização no backend.\");\n          setDataError(true);\n        } else {\n          setDataError(true); // Outros erros de dados\n        }\n        setGastos([]);\n        setTotalGasto(0);\n        setTotalInvestimento(0);\n        setChartsLoaded(true);\n      });\n    } else {\n      setChartsLoaded(true);\n      setDataError(true); // Se não há usuário logado, consideramos um erro de dados para os gráficos\n    }\n  }, []);\n  const categoryColors = {\n    \"investimento e poupanca\": \"#28a745\",\n    \"necessidades\": \"#007bff\",\n    \"desejos\": \"#dc3545\"\n  };\n  const dadosGraficoBrutos = gastos.reduce((acc, item) => {\n    const nome = item.categoria.replace(\"_E_\", \" e \").replace(/_/g, \" \").toLowerCase();\n    const existente = acc.find(i => i[0] === nome);\n    if (existente) {\n      existente[1] += item.valor;\n    } else {\n      acc.push([nome, item.valor]);\n    }\n    return acc;\n  }, []);\n  const dadosGrafico = [[\"Categoria\", \"Valor\"], ...(dadosGraficoBrutos.length > 0 ? dadosGraficoBrutos : [[\"Nenhuma Categoria\", 0]])];\n  const agruparSubcategorias = (lista, categoria) => {\n    const filtrado = lista.filter(g => g.categoria === categoria);\n    const agrupado = {};\n    filtrado.forEach(g => {\n      agrupado[g.subcategoria] = (agrupado[g.subcategoria] || 0) + (parseFloat(g.valor) || 0);\n    });\n    const resultados = Object.entries(agrupado).map(([nome, valor]) => {\n      const totalCategoria = filtrado.reduce((acc, g) => acc + Math.abs(parseFloat(g.valor) || 0), 0);\n      const percentual = totalCategoria > 0 ? `${(Math.abs(valor) / totalCategoria * 100).toFixed(1)}%` : '0%';\n      return [nome, valor, percentual];\n    });\n    if (resultados.length === 0) {\n      return [[\"Nenhuma Subcategoria\", 0, \"0%\"]];\n    }\n    return resultados;\n  };\n  const renderCategoryChart = () => {\n    let title = \"\";\n    let description = \"\";\n    const dataHeader = [\"Subcategoria\", \"Valor\", {\n      role: \"annotation\"\n    }];\n    let colors = [\"#007bff\"];\n    switch (selectedCategory) {\n      case \"NECESSIDADES\":\n        title = \"Necessidades: Onde seu dinheiro é essencial\";\n        description = \"Detalhes dos seus gastos fixos e indispensáveis.\";\n        colors = [\"#007bff\"];\n        break;\n      case \"DESEJOS\":\n        title = \"Desejos: Gastos para o seu lazer e prazer\";\n        description = \"Visão detalhada dos seus gastos não essenciais e de lazer.\";\n        colors = [\"#dc3545\"];\n        break;\n      case \"INVESTIMENTO_E_POUPANCA\":\n        title = \"Investimentos/Poupança: Construindo seu futuro\";\n        description = \"Acompanhe seu progresso em direção aos seus objetivos financeiros.\";\n        colors = [\"#28a745\"];\n        break;\n      default:\n        return null;\n    }\n    const subcategoryData = agruparSubcategorias(gastos, selectedCategory);\n    const chartData = [dataHeader, ...subcategoryData];\n    const isEmptyChart = chartData.length <= 1 || chartData.length === 2 && chartData[1][0] === \"Nenhuma Subcategoria\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `chart-button ${selectedCategory === \"NECESSIDADES\" ? \"active\" : \"\"}`,\n          onClick: () => setSelectedCategory(\"NECESSIDADES\"),\n          children: \"Necessidades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `chart-button ${selectedCategory === \"DESEJOS\" ? \"active\" : \"\"}`,\n          onClick: () => setSelectedCategory(\"DESEJOS\"),\n          children: \"Desejos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `chart-button ${selectedCategory === \"INVESTIMENTO_E_POUPANCA\" ? \"active\" : \"\"}`,\n          onClick: () => setSelectedCategory(\"INVESTIMENTO_E_POUPANCA\"),\n          children: \"Investimentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"chart-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chart-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-wrapper\",\n        children: !chartsLoaded ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-message\",\n          children: \"Carregando dados do gr\\xE1fico...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this) : dataError ?\n        /*#__PURE__*/\n        // Mostra erro de dados\n        _jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: \"Erro ao carregar dados do gr\\xE1fico. Verifique sua conex\\xE3o ou tente novamente mais tarde.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this) : isEmptyChart ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-data-message\",\n          children: \"N\\xE3o h\\xE1 dados para esta categoria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Chart, {\n          chartType: \"BarChart\",\n          width: \"100%\",\n          height: \"100%\",\n          data: chartData,\n          options: {\n            title: \"\",\n            legend: {\n              position: \"none\"\n            },\n            bars: \"horizontal\",\n            hAxis: {\n              format: \"currency\",\n              textStyle: {\n                color: '#555',\n                fontName: 'Inter'\n              },\n              minValue: 0\n            },\n            vAxis: {\n              textStyle: {\n                color: '#555',\n                fontName: 'Inter'\n              }\n            },\n            colors: colors,\n            chartArea: {\n              left: 100,\n              top: 30,\n              right: 30,\n              bottom: 30\n            },\n            fontName: 'Inter, sans-serif',\n            titleTextStyle: {\n              fontSize: 0\n            },\n            tooltip: {\n              textStyle: {\n                fontName: 'Inter',\n                fontSize: 13\n              }\n            },\n            annotations: {\n              alwaysOutside: true,\n              textStyle: {\n                fontSize: 12,\n                color: '#000',\n                fontName: 'Inter',\n                auraColor: 'none'\n              }\n            },\n            animation: {\n              startup: true,\n              easing: 'out',\n              duration: 500\n            }\n          }\n        }, selectedCategory, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"home-header\",\n        children: \"Relat\\xF3rios Financeiros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-label\",\n            children: \"Rendimento Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-value\",\n            children: renda.toLocaleString(\"pt-BR\", {\n              style: \"currency\",\n              currency: \"BRL\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-label\",\n            children: \"Gastos Totais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-value\",\n            children: totalGasto.toLocaleString(\"pt-BR\", {\n              style: \"currency\",\n              currency: \"BRL\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-label\",\n            children: \"Valor Investido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-value\",\n            children: totalInvestimento.toLocaleString(\"pt-BR\", {\n              style: \"currency\",\n              currency: \"BRL\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"chart-title\",\n            children: \"Distribui\\xE7\\xE3o de Gastos por Categoria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chart-description\",\n            children: \"Entenda para onde seu dinheiro est\\xE1 indo, dividido em necessidades, desejos e investimentos.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-wrapper\",\n            children: !chartsLoaded ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"loading-message\",\n              children: \"Carregando dados do gr\\xE1fico...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this) : dataError ?\n            /*#__PURE__*/\n            // Mostra erro de dados para o gráfico de pizza\n            _jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: \"Erro ao carregar dados do gr\\xE1fico.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Chart, {\n              chartType: \"PieChart\",\n              width: \"100%\",\n              height: \"100%\",\n              data: dadosGrafico,\n              options: {\n                pieHole: 0.4,\n                colors: dadosGrafico.slice(1).map(item => categoryColors[item[0]] || '#CCCCCC'),\n                legend: {\n                  position: \"bottom\",\n                  textStyle: {\n                    color: '#555',\n                    fontName: 'Inter',\n                    fontSize: 13\n                  }\n                },\n                chartArea: {\n                  left: 15,\n                  top: 15,\n                  right: 15,\n                  bottom: 50\n                },\n                fontName: 'Inter, sans-serif',\n                titleTextStyle: {\n                  fontSize: 0\n                },\n                tooltip: {\n                  textStyle: {\n                    fontName: 'Inter',\n                    fontSize: 13\n                  }\n                },\n                slices: dadosGrafico.length === 2 && dadosGrafico[1][0] === \"Nenhuma Categoria\" ? {\n                  0: {\n                    color: '#CCCCCC'\n                  }\n                } : {},\n                animation: {\n                  startup: true,\n                  easing: 'out',\n                  duration: 500\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), renderCategoryChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"sbFVg3x5gELp6LSGFsyBmkdK3fk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Layout","Chart","authService","jsxDEV","_jsxDEV","Home","_s","renda","setRenda","gastos","setGastos","totalGasto","setTotalGasto","totalInvestimento","setTotalInvestimento","selectedCategory","setSelectedCategory","chartsLoaded","setChartsLoaded","dataError","setDataError","usuario","JSON","parse","localStorage","getItem","id","getUserById","then","res","data","catch","err","console","error","buscarLancamentosPorUsuario","todos","filter","g","categoria","reduce","acc","valor","totalInvest","response","headers","includes","categoryColors","dadosGraficoBrutos","item","nome","replace","toLowerCase","existente","find","i","push","dadosGrafico","length","agruparSubcategorias","lista","filtrado","agrupado","forEach","subcategoria","parseFloat","resultados","Object","entries","map","totalCategoria","Math","abs","percentual","toFixed","renderCategoryChart","title","description","dataHeader","role","colors","subcategoryData","chartData","isEmptyChart","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","chartType","width","height","options","legend","position","bars","hAxis","format","textStyle","color","fontName","minValue","vAxis","chartArea","left","top","right","bottom","titleTextStyle","fontSize","tooltip","annotations","alwaysOutside","auraColor","animation","startup","easing","duration","toLocaleString","style","currency","pieHole","slice","slices","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport \"../assets/Home.css\"; // Certifique-se que o CSS está linkado\r\nimport { Chart } from \"react-google-charts\";\r\nimport authService from \"../services/authService\";\r\n\r\nconst Home = () => {\r\n  const [renda, setRenda] = useState(0);\r\n  const [gastos, setGastos] = useState([]);\r\n  const [totalGasto, setTotalGasto] = useState(0);\r\n  const [totalInvestimento, setTotalInvestimento] = useState(0);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"NECESSIDADES\");\r\n  const [chartsLoaded, setChartsLoaded] = useState(false);\r\n  const [dataError, setDataError] = useState(false); // Novo estado para erro de dados\r\n\r\n  useEffect(() => {\r\n    const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n    if (usuario?.id) {\r\n      authService.getUserById(usuario.id)\r\n        .then(res => setRenda(res.data.renda || 0))\r\n        .catch(err => {\r\n            console.error(\"Erro ao buscar usuário:\", err);\r\n            setDataError(true); // Se houver erro aqui, provavelmente não teremos dados de gastos\r\n        });\r\n\r\n      authService.buscarLancamentosPorUsuario(usuario.id)\r\n        .then(res => {\r\n          const todos = res.data;\r\n          setGastos(todos);\r\n\r\n          const totalGasto = todos\r\n            .filter(g => g.categoria !== \"INVESTIMENTO_E_POUPANCA\")\r\n            .reduce((acc, g) => acc + g.valor, 0);\r\n\r\n          const totalInvest = todos\r\n            .filter(g => g.categoria === \"INVESTIMENTO_E_POUPANCA\")\r\n            .reduce((acc, g) => acc + g.valor, 0);\r\n\r\n          setTotalGasto(totalGasto);\r\n          setTotalInvestimento(totalInvest);\r\n          setChartsLoaded(true);\r\n          setDataError(false); // Sucesso na busca de dados\r\n        })\r\n        .catch(err => {\r\n          console.error(\"Erro ao buscar lançamentos:\", err);\r\n          // Detecta se o erro é de sintaxe JSON (recebeu HTML)\r\n          if (err.response && err.response.headers['content-type'] && err.response.headers['content-type'].includes('text/html')) {\r\n              console.error(\"Recebeu HTML em vez de JSON. Verifique a URL da API ou o status de autenticação/autorização no backend.\");\r\n              setDataError(true);\r\n          } else {\r\n              setDataError(true); // Outros erros de dados\r\n          }\r\n          setGastos([]);\r\n          setTotalGasto(0);\r\n          setTotalInvestimento(0);\r\n          setChartsLoaded(true);\r\n        });\r\n    } else {\r\n        setChartsLoaded(true);\r\n        setDataError(true); // Se não há usuário logado, consideramos um erro de dados para os gráficos\r\n    }\r\n  }, []);\r\n\r\n  const categoryColors = {\r\n    \"investimento e poupanca\": \"#28a745\",\r\n    \"necessidades\": \"#007bff\",\r\n    \"desejos\": \"#dc3545\",\r\n  };\r\n\r\n  const dadosGraficoBrutos = gastos.reduce((acc, item) => {\r\n    const nome = item.categoria\r\n      .replace(\"_E_\", \" e \")\r\n      .replace(/_/g, \" \")\r\n      .toLowerCase();\r\n    const existente = acc.find(i => i[0] === nome);\r\n    if (existente) {\r\n      existente[1] += item.valor;\r\n    } else {\r\n      acc.push([nome, item.valor]);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  const dadosGrafico = [\r\n    [\"Categoria\", \"Valor\"],\r\n    ...(dadosGraficoBrutos.length > 0 ? dadosGraficoBrutos : [[\"Nenhuma Categoria\", 0]])\r\n  ];\r\n\r\n  const agruparSubcategorias = (lista, categoria) => {\r\n    const filtrado = lista.filter(g => g.categoria === categoria);\r\n    \r\n    const agrupado = {};\r\n    filtrado.forEach(g => {\r\n      agrupado[g.subcategoria] = (agrupado[g.subcategoria] || 0) + (parseFloat(g.valor) || 0);\r\n    });\r\n\r\n    const resultados = Object.entries(agrupado).map(([nome, valor]) => {\r\n        const totalCategoria = filtrado.reduce((acc, g) => acc + Math.abs(parseFloat(g.valor) || 0), 0);\r\n        const percentual = totalCategoria > 0 ? `${((Math.abs(valor) / totalCategoria) * 100).toFixed(1)}%` : '0%';\r\n        return [\r\n            nome,\r\n            valor,\r\n            percentual\r\n        ];\r\n    });\r\n\r\n    if (resultados.length === 0) {\r\n        return [[\"Nenhuma Subcategoria\", 0, \"0%\"]]; \r\n    }\r\n    return resultados;\r\n  };\r\n\r\n\r\n  const renderCategoryChart = () => {\r\n    let title = \"\";\r\n    let description = \"\";\r\n    const dataHeader = [\"Subcategoria\", \"Valor\", { role: \"annotation\" }]; \r\n    let colors = [\"#007bff\"]; \r\n\r\n    switch (selectedCategory) {\r\n      case \"NECESSIDADES\":\r\n        title = \"Necessidades: Onde seu dinheiro é essencial\";\r\n        description = \"Detalhes dos seus gastos fixos e indispensáveis.\";\r\n        colors = [\"#007bff\"];\r\n        break;\r\n      case \"DESEJOS\":\r\n        title = \"Desejos: Gastos para o seu lazer e prazer\";\r\n        description = \"Visão detalhada dos seus gastos não essenciais e de lazer.\";\r\n        colors = [\"#dc3545\"];\r\n        break;\r\n      case \"INVESTIMENTO_E_POUPANCA\":\r\n        title = \"Investimentos/Poupança: Construindo seu futuro\";\r\n        description = \"Acompanhe seu progresso em direção aos seus objetivos financeiros.\";\r\n        colors = [\"#28a745\"];\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n\r\n    const subcategoryData = agruparSubcategorias(gastos, selectedCategory);\r\n    const chartData = [dataHeader, ...subcategoryData];\r\n\r\n    const isEmptyChart = chartData.length <= 1 || (chartData.length === 2 && chartData[1][0] === \"Nenhuma Subcategoria\");\r\n\r\n    return (\r\n      <div className=\"chart-card\">\r\n        <div className=\"chart-buttons-container\">\r\n          <button\r\n            className={`chart-button ${selectedCategory === \"NECESSIDADES\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSelectedCategory(\"NECESSIDADES\")}\r\n          >\r\n            Necessidades\r\n          </button>\r\n          <button\r\n            className={`chart-button ${selectedCategory === \"DESEJOS\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSelectedCategory(\"DESEJOS\")}\r\n          >\r\n            Desejos\r\n          </button>\r\n          <button\r\n            className={`chart-button ${selectedCategory === \"INVESTIMENTO_E_POUPANCA\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSelectedCategory(\"INVESTIMENTO_E_POUPANCA\")}\r\n          >\r\n            Investimentos\r\n          </button>\r\n        </div>\r\n        <h2 className=\"chart-title\">{title}</h2>\r\n        <p className=\"chart-description\">{description}</p>\r\n        <div className=\"chart-wrapper\">\r\n          {!chartsLoaded ? (\r\n            <p className=\"loading-message\">Carregando dados do gráfico...</p>\r\n          ) : dataError ? ( // Mostra erro de dados\r\n            <p className=\"error-message\">Erro ao carregar dados do gráfico. Verifique sua conexão ou tente novamente mais tarde.</p>\r\n          ) : isEmptyChart ? (\r\n            <p className=\"no-data-message\">Não há dados para esta categoria.</p>\r\n          ) : (\r\n            <Chart\r\n              chartType=\"BarChart\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              data={chartData}\r\n              options={{\r\n                title: \"\",\r\n                legend: { position: \"none\" },\r\n                bars: \"horizontal\",\r\n                hAxis: { \r\n                  format: \"currency\", \r\n                  textStyle: { color: '#555', fontName: 'Inter' },\r\n                  minValue: 0,\r\n                },\r\n                vAxis: { textStyle: { color: '#555', fontName: 'Inter' } },\r\n                colors: colors,\r\n                chartArea: { left: 100, top: 30, right: 30, bottom: 30 },\r\n                fontName: 'Inter, sans-serif',\r\n                titleTextStyle: {\r\n                  fontSize: 0,\r\n                },\r\n                tooltip: { textStyle: { fontName: 'Inter', fontSize: 13 } },\r\n                annotations: {\r\n                  alwaysOutside: true,\r\n                  textStyle: {\r\n                    fontSize: 12,\r\n                    color: '#000',\r\n                    fontName: 'Inter',\r\n                    auraColor: 'none'\r\n                  }\r\n                },\r\n                animation: {\r\n                  startup: true,\r\n                  easing: 'out',\r\n                  duration: 500\r\n                }\r\n              }}\r\n              key={selectedCategory} \r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"home-container\">\r\n        <h1 className=\"home-header\">Relatórios Financeiros</h1>\r\n\r\n        <div className=\"top-cards\">\r\n          <div className=\"stat-card\">\r\n            <span className=\"card-label\">Rendimento Total</span>\r\n            <span className=\"card-value\">\r\n              {renda.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" })}\r\n            </span>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <span className=\"card-label\">Gastos Totais</span>\r\n            <span className=\"card-value\">\r\n              {totalGasto.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" })}\r\n            </span>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <span className=\"card-label\">Valor Investido</span>\r\n            <span className=\"card-value\">\r\n              {totalInvestimento.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" })}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"dashboard-grid\">\r\n          {/* Gráfico 1: Pizza geral */}\r\n          <div className=\"chart-card\">\r\n            <h2 className=\"chart-title\">Distribuição de Gastos por Categoria</h2>\r\n            <p className=\"chart-description\">Entenda para onde seu dinheiro está indo, dividido em necessidades, desejos e investimentos.</p>\r\n            <div className=\"chart-wrapper\">\r\n                {!chartsLoaded ? (\r\n                    <p className=\"loading-message\">Carregando dados do gráfico...</p>\r\n                ) : dataError ? ( // Mostra erro de dados para o gráfico de pizza\r\n                    <p className=\"error-message\">Erro ao carregar dados do gráfico.</p>\r\n                ) : (\r\n                    <Chart\r\n                    chartType=\"PieChart\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    data={dadosGrafico}\r\n                    options={{\r\n                        pieHole: 0.4,\r\n                        colors: dadosGrafico.slice(1).map(item => categoryColors[item[0]] || '#CCCCCC'),\r\n                        legend: { position: \"bottom\", textStyle: { color: '#555', fontName: 'Inter', fontSize: 13 } },\r\n                        chartArea: { left: 15, top: 15, right: 15, bottom: 50 },\r\n                        fontName: 'Inter, sans-serif',\r\n                        titleTextStyle: {\r\n                        fontSize: 0,\r\n                        },\r\n                        tooltip: { textStyle: { fontName: 'Inter', fontSize: 13 } },\r\n                        slices: dadosGrafico.length === 2 && dadosGrafico[1][0] === \"Nenhuma Categoria\" ? {\r\n                            0: { color: '#CCCCCC' }\r\n                        } : {},\r\n                        animation: {\r\n                            startup: true,\r\n                            easing: 'out',\r\n                            duration: 500\r\n                        }\r\n                    }}\r\n                    />\r\n                )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Gráfico de categoria selecionada (substitui os 3 gráficos anteriores) */}\r\n          {renderCategoryChart()}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,oBAAoB,CAAC,CAAC;AAC7B,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,cAAc,CAAC;EACxE,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMuB,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC3D,IAAIJ,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEK,EAAE,EAAE;MACfxB,WAAW,CAACyB,WAAW,CAACN,OAAO,CAACK,EAAE,CAAC,CAChCE,IAAI,CAACC,GAAG,IAAIrB,QAAQ,CAACqB,GAAG,CAACC,IAAI,CAACvB,KAAK,IAAI,CAAC,CAAC,CAAC,CAC1CwB,KAAK,CAACC,GAAG,IAAI;QACVC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;QAC7CZ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC;MAEJlB,WAAW,CAACiC,2BAA2B,CAACd,OAAO,CAACK,EAAE,CAAC,CAChDE,IAAI,CAACC,GAAG,IAAI;QACX,MAAMO,KAAK,GAAGP,GAAG,CAACC,IAAI;QACtBpB,SAAS,CAAC0B,KAAK,CAAC;QAEhB,MAAMzB,UAAU,GAAGyB,KAAK,CACrBC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAK,yBAAyB,CAAC,CACtDC,MAAM,CAAC,CAACC,GAAG,EAAEH,CAAC,KAAKG,GAAG,GAAGH,CAAC,CAACI,KAAK,EAAE,CAAC,CAAC;QAEvC,MAAMC,WAAW,GAAGP,KAAK,CACtBC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAK,yBAAyB,CAAC,CACtDC,MAAM,CAAC,CAACC,GAAG,EAAEH,CAAC,KAAKG,GAAG,GAAGH,CAAC,CAACI,KAAK,EAAE,CAAC,CAAC;QAEvC9B,aAAa,CAACD,UAAU,CAAC;QACzBG,oBAAoB,CAAC6B,WAAW,CAAC;QACjCzB,eAAe,CAAC,IAAI,CAAC;QACrBE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,CACDW,KAAK,CAACC,GAAG,IAAI;QACZC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC;QACjD;QACA,IAAIA,GAAG,CAACY,QAAQ,IAAIZ,GAAG,CAACY,QAAQ,CAACC,OAAO,CAAC,cAAc,CAAC,IAAIb,GAAG,CAACY,QAAQ,CAACC,OAAO,CAAC,cAAc,CAAC,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;UACpHb,OAAO,CAACC,KAAK,CAAC,yGAAyG,CAAC;UACxHd,YAAY,CAAC,IAAI,CAAC;QACtB,CAAC,MAAM;UACHA,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACxB;QACAV,SAAS,CAAC,EAAE,CAAC;QACbE,aAAa,CAAC,CAAC,CAAC;QAChBE,oBAAoB,CAAC,CAAC,CAAC;QACvBI,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC;IACN,CAAC,MAAM;MACHA,eAAe,CAAC,IAAI,CAAC;MACrBE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM2B,cAAc,GAAG;IACrB,yBAAyB,EAAE,SAAS;IACpC,cAAc,EAAE,SAAS;IACzB,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,kBAAkB,GAAGvC,MAAM,CAAC+B,MAAM,CAAC,CAACC,GAAG,EAAEQ,IAAI,KAAK;IACtD,MAAMC,IAAI,GAAGD,IAAI,CAACV,SAAS,CACxBY,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CACrBA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAClBC,WAAW,CAAC,CAAC;IAChB,MAAMC,SAAS,GAAGZ,GAAG,CAACa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAKL,IAAI,CAAC;IAC9C,IAAIG,SAAS,EAAE;MACbA,SAAS,CAAC,CAAC,CAAC,IAAIJ,IAAI,CAACP,KAAK;IAC5B,CAAC,MAAM;MACLD,GAAG,CAACe,IAAI,CAAC,CAACN,IAAI,EAAED,IAAI,CAACP,KAAK,CAAC,CAAC;IAC9B;IACA,OAAOD,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,YAAY,GAAG,CACnB,CAAC,WAAW,EAAE,OAAO,CAAC,EACtB,IAAIT,kBAAkB,CAACU,MAAM,GAAG,CAAC,GAAGV,kBAAkB,GAAG,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,CAAC,CACrF;EAED,MAAMW,oBAAoB,GAAGA,CAACC,KAAK,EAAErB,SAAS,KAAK;IACjD,MAAMsB,QAAQ,GAAGD,KAAK,CAACvB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAKA,SAAS,CAAC;IAE7D,MAAMuB,QAAQ,GAAG,CAAC,CAAC;IACnBD,QAAQ,CAACE,OAAO,CAACzB,CAAC,IAAI;MACpBwB,QAAQ,CAACxB,CAAC,CAAC0B,YAAY,CAAC,GAAG,CAACF,QAAQ,CAACxB,CAAC,CAAC0B,YAAY,CAAC,IAAI,CAAC,KAAKC,UAAU,CAAC3B,CAAC,CAACI,KAAK,CAAC,IAAI,CAAC,CAAC;IACzF,CAAC,CAAC;IAEF,MAAMwB,UAAU,GAAGC,MAAM,CAACC,OAAO,CAACN,QAAQ,CAAC,CAACO,GAAG,CAAC,CAAC,CAACnB,IAAI,EAAER,KAAK,CAAC,KAAK;MAC/D,MAAM4B,cAAc,GAAGT,QAAQ,CAACrB,MAAM,CAAC,CAACC,GAAG,EAAEH,CAAC,KAAKG,GAAG,GAAG8B,IAAI,CAACC,GAAG,CAACP,UAAU,CAAC3B,CAAC,CAACI,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;MAC/F,MAAM+B,UAAU,GAAGH,cAAc,GAAG,CAAC,GAAG,GAAG,CAAEC,IAAI,CAACC,GAAG,CAAC9B,KAAK,CAAC,GAAG4B,cAAc,GAAI,GAAG,EAAEI,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI;MAC1G,OAAO,CACHxB,IAAI,EACJR,KAAK,EACL+B,UAAU,CACb;IACL,CAAC,CAAC;IAEF,IAAIP,UAAU,CAACR,MAAM,KAAK,CAAC,EAAE;MACzB,OAAO,CAAC,CAAC,sBAAsB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC9C;IACA,OAAOQ,UAAU;EACnB,CAAC;EAGD,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIC,WAAW,GAAG,EAAE;IACpB,MAAMC,UAAU,GAAG,CAAC,cAAc,EAAE,OAAO,EAAE;MAAEC,IAAI,EAAE;IAAa,CAAC,CAAC;IACpE,IAAIC,MAAM,GAAG,CAAC,SAAS,CAAC;IAExB,QAAQjE,gBAAgB;MACtB,KAAK,cAAc;QACjB6D,KAAK,GAAG,6CAA6C;QACrDC,WAAW,GAAG,kDAAkD;QAChEG,MAAM,GAAG,CAAC,SAAS,CAAC;QACpB;MACF,KAAK,SAAS;QACZJ,KAAK,GAAG,2CAA2C;QACnDC,WAAW,GAAG,4DAA4D;QAC1EG,MAAM,GAAG,CAAC,SAAS,CAAC;QACpB;MACF,KAAK,yBAAyB;QAC5BJ,KAAK,GAAG,gDAAgD;QACxDC,WAAW,GAAG,oEAAoE;QAClFG,MAAM,GAAG,CAAC,SAAS,CAAC;QACpB;MACF;QACE,OAAO,IAAI;IACf;IAEA,MAAMC,eAAe,GAAGtB,oBAAoB,CAAClD,MAAM,EAAEM,gBAAgB,CAAC;IACtE,MAAMmE,SAAS,GAAG,CAACJ,UAAU,EAAE,GAAGG,eAAe,CAAC;IAElD,MAAME,YAAY,GAAGD,SAAS,CAACxB,MAAM,IAAI,CAAC,IAAKwB,SAAS,CAACxB,MAAM,KAAK,CAAC,IAAIwB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,sBAAuB;IAEpH,oBACE9E,OAAA;MAAKgF,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBjF,OAAA;QAAKgF,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACtCjF,OAAA;UACEgF,SAAS,EAAE,gBAAgBrE,gBAAgB,KAAK,cAAc,GAAG,QAAQ,GAAG,EAAE,EAAG;UACjFuE,OAAO,EAAEA,CAAA,KAAMtE,mBAAmB,CAAC,cAAc,CAAE;UAAAqE,QAAA,EACpD;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtF,OAAA;UACEgF,SAAS,EAAE,gBAAgBrE,gBAAgB,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC5EuE,OAAO,EAAEA,CAAA,KAAMtE,mBAAmB,CAAC,SAAS,CAAE;UAAAqE,QAAA,EAC/C;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtF,OAAA;UACEgF,SAAS,EAAE,gBAAgBrE,gBAAgB,KAAK,yBAAyB,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC5FuE,OAAO,EAAEA,CAAA,KAAMtE,mBAAmB,CAAC,yBAAyB,CAAE;UAAAqE,QAAA,EAC/D;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNtF,OAAA;QAAIgF,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAET;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxCtF,OAAA;QAAGgF,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAER;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDtF,OAAA;QAAKgF,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3B,CAACpE,YAAY,gBACZb,OAAA;UAAGgF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAA8B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GAC/DvE,SAAS;QAAA;QAAK;QAChBf,OAAA;UAAGgF,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAuF;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GACtHP,YAAY,gBACd/E,OAAA;UAAGgF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAiC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEpEtF,OAAA,CAACH,KAAK;UACJ0F,SAAS,EAAC,UAAU;UACpBC,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACb/D,IAAI,EAAEoD,SAAU;UAChBY,OAAO,EAAE;YACPlB,KAAK,EAAE,EAAE;YACTmB,MAAM,EAAE;cAAEC,QAAQ,EAAE;YAAO,CAAC;YAC5BC,IAAI,EAAE,YAAY;YAClBC,KAAK,EAAE;cACLC,MAAM,EAAE,UAAU;cAClBC,SAAS,EAAE;gBAAEC,KAAK,EAAE,MAAM;gBAAEC,QAAQ,EAAE;cAAQ,CAAC;cAC/CC,QAAQ,EAAE;YACZ,CAAC;YACDC,KAAK,EAAE;cAAEJ,SAAS,EAAE;gBAAEC,KAAK,EAAE,MAAM;gBAAEC,QAAQ,EAAE;cAAQ;YAAE,CAAC;YAC1DtB,MAAM,EAAEA,MAAM;YACdyB,SAAS,EAAE;cAAEC,IAAI,EAAE,GAAG;cAAEC,GAAG,EAAE,EAAE;cAAEC,KAAK,EAAE,EAAE;cAAEC,MAAM,EAAE;YAAG,CAAC;YACxDP,QAAQ,EAAE,mBAAmB;YAC7BQ,cAAc,EAAE;cACdC,QAAQ,EAAE;YACZ,CAAC;YACDC,OAAO,EAAE;cAAEZ,SAAS,EAAE;gBAAEE,QAAQ,EAAE,OAAO;gBAAES,QAAQ,EAAE;cAAG;YAAE,CAAC;YAC3DE,WAAW,EAAE;cACXC,aAAa,EAAE,IAAI;cACnBd,SAAS,EAAE;gBACTW,QAAQ,EAAE,EAAE;gBACZV,KAAK,EAAE,MAAM;gBACbC,QAAQ,EAAE,OAAO;gBACjBa,SAAS,EAAE;cACb;YACF,CAAC;YACDC,SAAS,EAAE;cACTC,OAAO,EAAE,IAAI;cACbC,MAAM,EAAE,KAAK;cACbC,QAAQ,EAAE;YACZ;UACF;QAAE,GACGxG,gBAAgB;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,oBACEtF,OAAA,CAACJ,MAAM;IAAAqF,QAAA,eACLjF,OAAA;MAAKgF,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BjF,OAAA;QAAIgF,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEvDtF,OAAA;QAAKgF,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBjF,OAAA;UAAKgF,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBjF,OAAA;YAAMgF,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpDtF,OAAA;YAAMgF,SAAS,EAAC,YAAY;YAAAC,QAAA,EACzB9E,KAAK,CAACiH,cAAc,CAAC,OAAO,EAAE;cAAEC,KAAK,EAAE,UAAU;cAAEC,QAAQ,EAAE;YAAM,CAAC;UAAC;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNtF,OAAA;UAAKgF,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBjF,OAAA;YAAMgF,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjDtF,OAAA;YAAMgF,SAAS,EAAC,YAAY;YAAAC,QAAA,EACzB1E,UAAU,CAAC6G,cAAc,CAAC,OAAO,EAAE;cAAEC,KAAK,EAAE,UAAU;cAAEC,QAAQ,EAAE;YAAM,CAAC;UAAC;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNtF,OAAA;UAAKgF,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBjF,OAAA;YAAMgF,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnDtF,OAAA;YAAMgF,SAAS,EAAC,YAAY;YAAAC,QAAA,EACzBxE,iBAAiB,CAAC2G,cAAc,CAAC,OAAO,EAAE;cAAEC,KAAK,EAAE,UAAU;cAAEC,QAAQ,EAAE;YAAM,CAAC;UAAC;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENtF,OAAA;QAAKgF,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAE7BjF,OAAA;UAAKgF,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBjF,OAAA;YAAIgF,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAoC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrEtF,OAAA;YAAGgF,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAA4F;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACjItF,OAAA;YAAKgF,SAAS,EAAC,eAAe;YAAAC,QAAA,EACzB,CAACpE,YAAY,gBACVb,OAAA;cAAGgF,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAA8B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,GACjEvE,SAAS;YAAA;YAAK;YACdf,OAAA;cAAGgF,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAAkC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,gBAEnEtF,OAAA,CAACH,KAAK;cACN0F,SAAS,EAAC,UAAU;cACpBC,KAAK,EAAC,MAAM;cACZC,MAAM,EAAC,MAAM;cACb/D,IAAI,EAAE2B,YAAa;cACnBqC,OAAO,EAAE;gBACL6B,OAAO,EAAE,GAAG;gBACZ3C,MAAM,EAAEvB,YAAY,CAACmE,KAAK,CAAC,CAAC,CAAC,CAACvD,GAAG,CAACpB,IAAI,IAAIF,cAAc,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC;gBAC/E8C,MAAM,EAAE;kBAAEC,QAAQ,EAAE,QAAQ;kBAAEI,SAAS,EAAE;oBAAEC,KAAK,EAAE,MAAM;oBAAEC,QAAQ,EAAE,OAAO;oBAAES,QAAQ,EAAE;kBAAG;gBAAE,CAAC;gBAC7FN,SAAS,EAAE;kBAAEC,IAAI,EAAE,EAAE;kBAAEC,GAAG,EAAE,EAAE;kBAAEC,KAAK,EAAE,EAAE;kBAAEC,MAAM,EAAE;gBAAG,CAAC;gBACvDP,QAAQ,EAAE,mBAAmB;gBAC7BQ,cAAc,EAAE;kBAChBC,QAAQ,EAAE;gBACV,CAAC;gBACDC,OAAO,EAAE;kBAAEZ,SAAS,EAAE;oBAAEE,QAAQ,EAAE,OAAO;oBAAES,QAAQ,EAAE;kBAAG;gBAAE,CAAC;gBAC3Dc,MAAM,EAAEpE,YAAY,CAACC,MAAM,KAAK,CAAC,IAAID,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAmB,GAAG;kBAC9E,CAAC,EAAE;oBAAE4C,KAAK,EAAE;kBAAU;gBAC1B,CAAC,GAAG,CAAC,CAAC;gBACNe,SAAS,EAAE;kBACPC,OAAO,EAAE,IAAI;kBACbC,MAAM,EAAE,KAAK;kBACbC,QAAQ,EAAE;gBACd;cACJ;YAAE;cAAAhC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD;UACJ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGLf,mBAAmB,CAAC,CAAC;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACpF,EAAA,CA/RID,IAAI;AAAAyH,EAAA,GAAJzH,IAAI;AAiSV,eAAeA,IAAI;AAAC,IAAAyH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}