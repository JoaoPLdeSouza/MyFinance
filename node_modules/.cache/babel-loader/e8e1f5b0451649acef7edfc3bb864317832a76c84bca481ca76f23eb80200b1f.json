{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\pages\\\\Planos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Chart } from \"react-google-charts\";\nimport authService from \"../services/authService\"; // Assumindo que authService tem a chamada para a API de planos\nimport \"../assets/Planos.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planos = () => {\n  _s();\n  var _dadosPlano$ajustes, _dadosPlano$riscos;\n  const [dadosPlano, setDadosPlano] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPlanos = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n        if (!usuario || !usuario.id) {\n          throw new Error(\"ID do usuário não encontrado.\");\n        }\n\n        // Supondo que você tenha um método no authService para isso.\n        // Se não tiver, você precisará adicionar ou criar uma nova chamada de API.\n        const response = await authService.gerarPlano(usuario.id);\n        setDadosPlano(response.data);\n      } catch (err) {\n        console.error(\"Erro ao buscar dados do plano:\", err);\n        setError(\"Não foi possível carregar os dados do plano. Tente novamente mais tarde.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlanos();\n  }, []);\n  const formatarValor = valor => {\n    return valor.toLocaleString(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    });\n  };\n  const prepararDadosParaGrafico = (dataArray, titulo) => {\n    // Agrupa os valores por categoria para o gráfico\n    const categoriasAgrupadas = dataArray.reduce((acc, item) => {\n      acc[item.categoria] = (acc[item.categoria] || 0) + item.valor;\n      return acc;\n    }, {});\n\n    // Converte para o formato do Google Charts\n    const dados = [[\"Categoria\", titulo]];\n    for (const categoria in categoriasAgrupadas) {\n      dados.push([categoriaMapeada[categoria] || categoria, categoriasAgrupadas[categoria]]);\n    }\n    return dados;\n  };\n  const categoriaMapeada = {\n    NECESSIDADES: \"Necessidades\",\n    DESEJOS: \"Desejos\",\n    INVESTIMENTO_E_POUPANCA: \"Investimento/Poupança\"\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-container loading-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Carregando plano financeiro...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-container error-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n  if (!dadosPlano || !((_dadosPlano$ajustes = dadosPlano.ajustes) !== null && _dadosPlano$ajustes !== void 0 && _dadosPlano$ajustes.length) && !((_dadosPlano$riscos = dadosPlano.riscos) !== null && _dadosPlano$riscos !== void 0 && _dadosPlano$riscos.length)) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-container no-data-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Plano Financeiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"N\\xE3o h\\xE1 dados de plano financeiro para exibir.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n  const dadosAjustesGrafico = prepararDadosParaGrafico(dadosPlano.ajustes, \"Valor Ajustado\");\n  const dadosRiscosGrafico = prepararDadosParaGrafico(dadosPlano.riscos, \"Valor de Risco\");\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planos-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"planos-header\",\n        children: \"Seu Plano Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"planos-description\",\n        children: \"Explore insights inteligentes sobre suas finan\\xE7as e veja as recomenda\\xE7\\xF5es e \\xE1reas de risco.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), dadosPlano.ajustes && dadosPlano.ajustes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ajustes Recomendados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Estas s\\xE3o as recomenda\\xE7\\xF5es para otimizar seus gastos e investimentos:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-content-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              chartType: \"PieChart\",\n              width: \"100%\",\n              height: \"100%\",\n              data: dadosAjustesGrafico,\n              options: {\n                title: \"Distribuição dos Ajustes Recomendados\",\n                pieHole: 0.4,\n                is3D: false,\n                legend: {\n                  position: \"bottom\"\n                },\n                colors: ['#28a745', '#007bff', '#ffc107', '#dc3545', '#6f42c1'] // Cores personalizadas\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Detalhes dos Ajustes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: dadosPlano.ajustes.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [categoriaMapeada[item.categoria] || item.categoria, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), \" \", item.subcategoria, \" - \", formatarValor(item.valor)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), dadosPlano.riscos && dadosPlano.riscos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\xC1reas de Risco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Estes s\\xE3o os gastos que foram detectados como potencialmente altos:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-content-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              chartType: \"BarChart\",\n              width: \"100%\",\n              height: \"100%\",\n              data: prepararDadosParaGrafico(dadosPlano.riscos, \"Valor Detectado\"),\n              options: {\n                title: \"Valores por Categoria de Risco\",\n                legend: {\n                  position: \"none\"\n                },\n                bars: \"horizontal\",\n                // Gráfico de barras horizontal\n                hAxis: {\n                  format: \"currency\"\n                },\n                colors: ['#dc3545'] // Cores para riscos\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Detalhes dos Riscos:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: dadosPlano.riscos.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [categoriaMapeada[item.categoria] || item.categoria, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this), \" \", item.subcategoria, \" - \", formatarValor(item.valor)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), dadosPlano.dataAlteracao && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"data-alteracao\",\n        children: [\"\\xDAltima atualiza\\xE7\\xE3o do plano: \", dadosPlano.dataAlteracao]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Planos, \"u3+55xEjF9ElSiwZR/k3Qkf3acY=\");\n_c = Planos;\nexport default Planos;\nvar _c;\n$RefreshReg$(_c, \"Planos\");","map":{"version":3,"names":["React","useEffect","useState","Layout","Chart","authService","jsxDEV","_jsxDEV","Planos","_s","_dadosPlano$ajustes","_dadosPlano$riscos","dadosPlano","setDadosPlano","loading","setLoading","error","setError","fetchPlanos","usuario","JSON","parse","localStorage","getItem","id","Error","response","gerarPlano","data","err","console","formatarValor","valor","toLocaleString","style","currency","prepararDadosParaGrafico","dataArray","titulo","categoriasAgrupadas","reduce","acc","item","categoria","dados","push","categoriaMapeada","NECESSIDADES","DESEJOS","INVESTIMENTO_E_POUPANCA","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ajustes","length","riscos","dadosAjustesGrafico","dadosRiscosGrafico","chartType","width","height","options","title","pieHole","is3D","legend","position","colors","map","index","subcategoria","bars","hAxis","format","dataAlteracao","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/pages/Planos.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport authService from \"../services/authService\"; // Assumindo que authService tem a chamada para a API de planos\r\nimport \"../assets/Planos.css\";\r\n\r\nconst Planos = () => {\r\n  const [dadosPlano, setDadosPlano] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPlanos = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n        if (!usuario || !usuario.id) {\r\n          throw new Error(\"ID do usuário não encontrado.\");\r\n        }\r\n\r\n        // Supondo que você tenha um método no authService para isso.\r\n        // Se não tiver, você precisará adicionar ou criar uma nova chamada de API.\r\n        const response = await authService.gerarPlano(usuario.id);\r\n        setDadosPlano(response.data);\r\n      } catch (err) {\r\n        console.error(\"Erro ao buscar dados do plano:\", err);\r\n        setError(\"Não foi possível carregar os dados do plano. Tente novamente mais tarde.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPlanos();\r\n  }, []);\r\n\r\n  const formatarValor = (valor) => {\r\n    return valor.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" });\r\n  };\r\n\r\n  const prepararDadosParaGrafico = (dataArray, titulo) => {\r\n    // Agrupa os valores por categoria para o gráfico\r\n    const categoriasAgrupadas = dataArray.reduce((acc, item) => {\r\n      acc[item.categoria] = (acc[item.categoria] || 0) + item.valor;\r\n      return acc;\r\n    }, {});\r\n\r\n    // Converte para o formato do Google Charts\r\n    const dados = [[\"Categoria\", titulo]];\r\n    for (const categoria in categoriasAgrupadas) {\r\n      dados.push([categoriaMapeada[categoria] || categoria, categoriasAgrupadas[categoria]]);\r\n    }\r\n    return dados;\r\n  };\r\n\r\n  const categoriaMapeada = {\r\n    NECESSIDADES: \"Necessidades\",\r\n    DESEJOS: \"Desejos\",\r\n    INVESTIMENTO_E_POUPANCA: \"Investimento/Poupança\"\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Layout>\r\n        <div className=\"planos-container loading-container\">\r\n          <p>Carregando plano financeiro...</p>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Layout>\r\n        <div className=\"planos-container error-container\">\r\n          <p>{error}</p>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  if (!dadosPlano || (!dadosPlano.ajustes?.length && !dadosPlano.riscos?.length)) {\r\n    return (\r\n      <Layout>\r\n        <div className=\"planos-container no-data-container\">\r\n          <h2>Plano Financeiro</h2>\r\n          <p>Não há dados de plano financeiro para exibir.</p>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  const dadosAjustesGrafico = prepararDadosParaGrafico(dadosPlano.ajustes, \"Valor Ajustado\");\r\n  const dadosRiscosGrafico = prepararDadosParaGrafico(dadosPlano.riscos, \"Valor de Risco\");\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"planos-container\">\r\n        <h1 className=\"planos-header\">Seu Plano Financeiro</h1>\r\n        <p className=\"planos-description\">Explore insights inteligentes sobre suas finanças e veja as recomendações e áreas de risco.</p>\r\n\r\n        {dadosPlano.ajustes && dadosPlano.ajustes.length > 0 && (\r\n          <div className=\"planos-section\">\r\n            <h2>Ajustes Recomendados</h2>\r\n            <p>Estas são as recomendações para otimizar seus gastos e investimentos:</p>\r\n            <div className=\"planos-content-grid\">\r\n              <div className=\"chart-wrapper\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  data={dadosAjustesGrafico}\r\n                  options={{\r\n                    title: \"Distribuição dos Ajustes Recomendados\",\r\n                    pieHole: 0.4,\r\n                    is3D: false,\r\n                    legend: { position: \"bottom\" },\r\n                    colors: ['#28a745', '#007bff', '#ffc107', '#dc3545', '#6f42c1'], // Cores personalizadas\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"list-wrapper\">\r\n                <h3>Detalhes dos Ajustes:</h3>\r\n                <ul>\r\n                  {dadosPlano.ajustes.map((item, index) => (\r\n                    <li key={index}>\r\n                      <strong>{categoriaMapeada[item.categoria] || item.categoria}:</strong> {item.subcategoria} - {formatarValor(item.valor)}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {dadosPlano.riscos && dadosPlano.riscos.length > 0 && (\r\n          <div className=\"planos-section\">\r\n            <h2>Áreas de Risco</h2>\r\n            <p>Estes são os gastos que foram detectados como potencialmente altos:</p>\r\n            <div className=\"planos-content-grid\">\r\n              <div className=\"chart-wrapper\">\r\n                <Chart\r\n                  chartType=\"BarChart\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  data={prepararDadosParaGrafico(dadosPlano.riscos, \"Valor Detectado\")}\r\n                  options={{\r\n                    title: \"Valores por Categoria de Risco\",\r\n                    legend: { position: \"none\" },\r\n                    bars: \"horizontal\", // Gráfico de barras horizontal\r\n                    hAxis: { format: \"currency\" },\r\n                    colors: ['#dc3545'], // Cores para riscos\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"list-wrapper\">\r\n                <h3>Detalhes dos Riscos:</h3>\r\n                <ul>\r\n                  {dadosPlano.riscos.map((item, index) => (\r\n                    <li key={index}>\r\n                      <strong>{categoriaMapeada[item.categoria] || item.categoria}:</strong> {item.subcategoria} - {formatarValor(item.valor)}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {dadosPlano.dataAlteracao && (\r\n          <p className=\"data-alteracao\">Última atualização do plano: {dadosPlano.dataAlteracao}</p>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Planos;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}