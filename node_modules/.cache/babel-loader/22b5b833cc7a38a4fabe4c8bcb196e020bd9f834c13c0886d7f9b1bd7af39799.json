{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\n// Importa as dependências necessárias do React e bibliotecas externas.\nimport React, { useEffect, useState } from \"react\"; // useState para gerenciar o estado, useEffect para efeitos colaterais (como buscar dados).\nimport Layout from \"../components/Layout\"; // Componente de layout que estrutura a página.\nimport \"../assets/Home.css\";\nimport { Chart } from \"react-google-charts\"; // Componente para renderizar gráficos do Google Charts.\nimport authService from \"../services/authService\";\n\n// Componente funcional principal da página Home.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // --- Estados do Componente ---\n  // useState para armazenar a renda do usuário. Inicializa com 0.\n  const [renda, setRenda] = useState(0);\n  // useState para armazenar a lista completa de lançamentos (gastos/receitas). Inicializa com array vazio.\n  const [gastos, setGastos] = useState([]);\n  // useState para armazenar o total de gastos (excluindo investimentos). Inicializa com 0.\n  const [totalGasto, setTotalGasto] = useState(0);\n  // useState para armazenar o total investido. Inicializa com 0.\n  const [totalInvestimento, setTotalInvestimento] = useState(0);\n  // useState para controlar qual gráfico está ativo (visível). Inicializa com 'geral'.\n  const [activeChart, setActiveChart] = useState('geral'); // Valores possíveis: 'geral', 'necessidades', 'desejos', 'investimentos'\n\n  // --- Efeito Colateral (useEffect) ---\n  // Executado uma vez após a montagem inicial do componente, e sempre que as dependências mudarem (array vazio = apenas uma vez).\n  useEffect(() => {\n    // Busca os dados do usuário logado no localStorage.\n    const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n    // Verifica se o ID do usuário existe antes de fazer chamadas à API.\n    if (usuario !== null && usuario !== void 0 && usuario.id) {\n      // Busca os dados do usuário pelo ID para obter a renda.\n      authService.getUserById(usuario.id).then(res => setRenda(res.data.renda || 0)) // Atualiza o estado 'renda'. Se não houver, assume 0.\n      .catch(err => console.error(\"Erro ao buscar usuário:\", err)); // Loga erros.\n\n      // Busca todos os lançamentos financeiros do usuário.\n      // O segundo argumento '{}' é passado para que 'dataInicio' e 'dataFinal' sejam strings vazias por padrão no serviço, buscando todos.\n      authService.buscarLancamentosPorUsuario(usuario.id, {}).then(res => {\n        // 'res' é o objeto de resposta do Axios.\n        const todos = res.data; // Extrai a lista de lançamentos de 'res.data'.\n        setGastos(todos); // Atualiza o estado 'gastos' com todos os lançamentos.\n\n        // Calcula o total de gastos, filtrando o que NÃO é 'INVESTIMENTO_E_POUPANCA'.\n        const totalGastoCalculado = todos.filter(g => g.categoria !== \"INVESTIMENTO_E_POUPANCA\").reduce((acc, g) => acc + g.valor, 0); // Soma os valores.\n\n        // Calcula o total de investimentos, filtrando apenas 'INVESTIMENTO_E_POUPANCA'.\n        const totalInvestCalculado = todos.filter(g => g.categoria === \"INVESTIMENTO_E_POUPANCA\").reduce((acc, g) => acc + g.valor, 0); // Soma os valores.\n\n        setTotalGasto(totalGastoCalculado); // Atualiza o estado 'totalGasto'.\n        setTotalInvestimento(totalInvestCalculado); // Atualiza o estado 'totalInvestimento'.\n      }).catch(err => {\n        console.error(\"Erro ao buscar lançamentos:\", err); // Loga erros.\n        // Em caso de erro, reinicia os estados para valores padrão.\n        setGastos([]);\n        setTotalGasto(0);\n        setTotalInvestimento(0);\n      });\n    }\n  }, []); // Array de dependências vazio significa que este efeito só roda uma vez, ao montar o componente.\n\n  // --- Dados e Lógica para Gráficos ---\n\n  // Objeto para mapear categorias a cores específicas nos gráficos.\n  const categoryColors = {\n    \"investimento e poupanca\": \"#28a745\",\n    // Verde para investimento.\n    \"necessidades\": \"#007bff\",\n    // Azul para necessidades.\n    \"desejos\": \"#dc3545\" // Vermelho para desejos.\n  };\n\n  // Processa os dados de gastos para o Gráfico de Pizza (Visão Geral).\n  // Agrupa os gastos por categoria e soma seus valores.\n  const dadosGraficoBrutos = gastos.reduce((acc, item) => {\n    // Formata o nome da categoria para exibição (ex: \"INVESTIMENTO_E_POUPANCA\" -> \"investimento e poupanca\").\n    const nome = item.categoria.replace(\"_E_\", \" e \").replace(/_/g, \" \").toLowerCase();\n    // Procura se a categoria já existe no acumulador.\n    const existente = acc.find(i => i[0] === nome);\n    if (existente) {\n      existente[1] += item.valor; // Se existe, adiciona o valor.\n    } else {\n      acc.push([nome, item.valor]); // Se não existe, adiciona uma nova entrada.\n    }\n    return acc;\n  }, []); // Inicia o acumulador como um array vazio.\n\n  // Prepara os dados para o Gráfico de Pizza, incluindo formatação para o tooltip.\n  // O Google Charts pode receber um objeto {v: valor, f: valor_formatado} para o tooltip.\n  const dadosGrafico = [[\"Categoria\", \"Valor\"],\n  // Cabeçalho do gráfico.\n  ...(dadosGraficoBrutos.length > 0 // Se houver dados...\n  ? dadosGraficoBrutos.map(item => [item[0],\n  // Nome da categoria.\n  // Objeto com valor numérico (v) e string formatada (f) para exibição no tooltip.\n  {\n    v: item[1],\n    f: item[1].toLocaleString(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    })\n  }]) : [[\"Nenhuma Categoria\", {\n    v: 0,\n    f: \"R$ 0,00\"\n  }]]) // Caso não haja dados, exibe \"Nenhuma Categoria\".\n  ];\n\n  // Função auxiliar para agrupar lançamentos por subcategoria dentro de uma categoria específica.\n  // Usado para os gráficos de barras (Necessidades, Desejos, Investimentos).\n  const agruparSubcategorias = (lista, categoria) => {\n    // Filtra os lançamentos pela categoria desejada.\n    const filtrado = lista.filter(g => g.categoria === categoria);\n\n    // Objeto para acumular os valores por subcategoria.\n    const agrupado = {};\n    filtrado.forEach(g => {\n      agrupado[g.subcategoria] = (agrupado[g.subcategoria] || 0) + g.valor;\n    });\n\n    // Mapeia o objeto agrupado para o formato de dados do Google Charts.\n    const resultados = Object.entries(agrupado).map(([nome, valor]) => {\n      // Calcula o total da categoria para o cálculo percentual (usado na anotação).\n      const total = filtrado.reduce((acc, g) => acc + Math.abs(g.valor), 0);\n      return [nome,\n      // Nome da subcategoria.\n      // Objeto com valor numérico (v) e string formatada (f) para exibição no tooltip.\n      {\n        v: valor,\n        f: valor.toLocaleString(\"pt-BR\", {\n          style: \"currency\",\n          currency: \"BRL\"\n        })\n      },\n      // Anotação percentual.\n      total > 0 ? `${(Math.abs(valor) / total * 100).toFixed(1)}%` : '0%'];\n    });\n\n    // Se não houver dados para a categoria, retorna um placeholder.\n    if (resultados.length === 0) {\n      return [[\"Sem dados\", {\n        v: 0,\n        f: \"R$ 0,00\"\n      }, \"0%\"]]; // Inclui formatação para \"Sem dados\"\n    }\n    return resultados;\n  };\n\n  // --- Componente de Botões de Navegação ---\n  // Componente funcional separado para os botões de troca de gráfico, para melhor organização.\n  const ChartNavigationButtons = ({\n    activeChart,\n    setActiveChart\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-navigation-buttons\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `nav-button ${activeChart === 'geral' ? 'active' : ''}` // Adiciona classe 'active' se for o gráfico atual.\n      ,\n      onClick: () => setActiveChart('geral') // Atualiza o estado 'activeChart' ao clicar.\n      ,\n      children: \"Vis\\xE3o Geral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `nav-button ${activeChart === 'necessidades' ? 'active' : ''}`,\n      onClick: () => setActiveChart('necessidades'),\n      children: \"Necessidades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `nav-button ${activeChart === 'desejos' ? 'active' : ''}`,\n      onClick: () => setActiveChart('desejos'),\n      children: \"Desejos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `nav-button ${activeChart === 'investimentos' ? 'active' : ''}`,\n      onClick: () => setActiveChart('investimentos'),\n      children: \"Investimentos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n\n  // --- Renderização do Componente ---\n  return (\n    /*#__PURE__*/\n    // Usa o componente Layout para manter a estrutura padrão da página.\n    _jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"home-header\",\n          children: \"Relat\\xF3rios Financeiros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-cards\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-label\",\n              children: \"Rendimento Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-value\",\n              children: renda.toLocaleString(\"pt-BR\", {\n                style: \"currency\",\n                currency: \"BRL\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-label\",\n              children: \"Gastos Totais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-value\",\n              children: totalGasto.toLocaleString(\"pt-BR\", {\n                style: \"currency\",\n                currency: \"BRL\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-label\",\n              children: \"Valor Investido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-value\",\n              children: totalInvestimento.toLocaleString(\"pt-BR\", {\n                style: \"currency\",\n                currency: \"BRL\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-grid\",\n          children: [activeChart === 'geral' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card full-width\",\n            children: [/*#__PURE__*/_jsxDEV(ChartNavigationButtons, {\n              activeChart: activeChart,\n              setActiveChart: setActiveChart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"chart-title\",\n              children: \"Distribui\\xE7\\xE3o de Gastos por Categoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chart-description\",\n              children: \"Entenda para onde seu dinheiro est\\xE1 indo, dividido em necessidades, desejos e investimentos.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                chartType: \"PieChart\",\n                width: \"100%\",\n                height: \"100%\",\n                data: dadosGrafico // Dados já formatados para o tooltip.\n                ,\n                options: {\n                  pieHole: 0.4,\n                  // Cria o efeito de \"donut\".\n                  colors: dadosGrafico.slice(1).map(item => categoryColors[item[0]] || '#CCCCCC'),\n                  // Aplica cores por categoria.\n                  legend: {\n                    position: \"bottom\",\n                    textStyle: {\n                      color: '#555',\n                      fontName: 'Inter',\n                      fontSize: 13\n                    }\n                  },\n                  // Posição e estilo da legenda.\n                  chartArea: {\n                    left: 15,\n                    top: 15,\n                    right: 15,\n                    bottom: 50,\n                    width: '90%',\n                    height: '80%'\n                  },\n                  // Ajusta a área do gráfico.\n                  fontName: 'Inter, sans-serif',\n                  // Fonte global do gráfico.\n                  titleTextStyle: {\n                    fontSize: 0\n                  },\n                  // Título do gráfico (definido externamente).\n                  tooltip: {\n                    textStyle: {\n                      fontName: 'Inter',\n                      fontSize: 13\n                    },\n                    trigger: 'focus' // Exibe tooltip ao focar/clicar, melhor para telas touch.\n                  },\n                  // Ajuste para exibir uma cor cinza se não houver dados, para \"Nenhuma Categoria\".\n                  slices: dadosGrafico.length === 2 && dadosGrafico[1][0] === \"Nenhuma Categoria\" ? {\n                    0: {\n                      color: '#CCCCCC'\n                    }\n                  } : {}\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), activeChart === 'necessidades' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card full-width\",\n            children: [/*#__PURE__*/_jsxDEV(ChartNavigationButtons, {\n              activeChart: activeChart,\n              setActiveChart: setActiveChart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"chart-title\",\n              children: \"Necessidades: Onde seu dinheiro \\xE9 essencial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chart-description\",\n              children: \"Detalhes dos seus gastos fixos e indispens\\xE1veis.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                chartType: \"BarChart\",\n                width: \"100%\",\n                height: \"100%\",\n                data: [[\"Subcategoria\", \"Valor\", {\n                  role: \"annotation\"\n                }],\n                // Cabeçalho com coluna para anotações.\n                ...agruparSubcategorias(gastos, \"NECESSIDADES\") // Dados agrupados por subcategoria.\n                ],\n                options: {\n                  title: \"\",\n                  // Título definido externamente.\n                  legend: {\n                    position: \"none\"\n                  },\n                  // Sem legenda.\n                  bars: \"horizontal\",\n                  // Barras horizontais.\n                  hAxis: {\n                    // Eixo horizontal (valores).\n                    format: \"currency\",\n                    // Formata como moeda.\n                    textStyle: {\n                      color: '#555',\n                      fontName: 'Inter'\n                    },\n                    minValue: 0,\n                    // Opções de formatação para moeda brasileira (R$ X.XXX,XX).\n                    formatOptions: {\n                      prefix: 'R$',\n                      decimalPlaces: 2,\n                      groupingSymbol: '.',\n                      // Ponto como separador de milhares.\n                      decimalSymbol: ',' // Vírgula como separador decimal.\n                    }\n                  },\n                  vAxis: {\n                    textStyle: {\n                      color: '#555',\n                      fontName: 'Inter'\n                    }\n                  },\n                  // Eixo vertical (subcategorias).\n                  colors: [\"#007bff\"],\n                  // Cor das barras.\n                  chartArea: {\n                    left: 100,\n                    top: 30,\n                    right: 30,\n                    bottom: 30\n                  },\n                  // Ajusta a área do gráfico.\n                  fontName: 'Inter, sans-serif',\n                  titleTextStyle: {\n                    fontSize: 0\n                  },\n                  tooltip: {\n                    textStyle: {\n                      fontName: 'Inter',\n                      fontSize: 13\n                    }\n                  },\n                  annotations: {\n                    // Configurações para as anotações (percentuais nas barras).\n                    alwaysOutside: true,\n                    textStyle: {\n                      fontSize: 12,\n                      color: '#000',\n                      fontName: 'Inter',\n                      auraColor: 'none'\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), activeChart === 'desejos' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card full-width\",\n            children: [/*#__PURE__*/_jsxDEV(ChartNavigationButtons, {\n              activeChart: activeChart,\n              setActiveChart: setActiveChart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"chart-title\",\n              children: \"Desejos: Gastos para o seu lazer e prazer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chart-description\",\n              children: \"Vis\\xE3o detalhada dos seus gastos n\\xE3o essenciais e de lazer.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                chartType: \"BarChart\",\n                width: \"100%\",\n                height: \"100%\",\n                data: [[\"Subcategoria\", \"Valor\", {\n                  role: \"annotation\"\n                }], ...agruparSubcategorias(gastos, \"DESEJOS\")],\n                options: {\n                  title: \"\",\n                  legend: {\n                    position: \"none\"\n                  },\n                  bars: \"horizontal\",\n                  hAxis: {\n                    format: \"currency\",\n                    textStyle: {\n                      color: '#555',\n                      fontName: 'Inter'\n                    },\n                    minValue: 0,\n                    formatOptions: {\n                      prefix: 'R$',\n                      decimalPlaces: 2,\n                      groupingSymbol: '.',\n                      decimalSymbol: ','\n                    }\n                  },\n                  vAxis: {\n                    textStyle: {\n                      color: '#555',\n                      fontName: 'Inter'\n                    }\n                  },\n                  colors: [\"#dc3545\"],\n                  chartArea: {\n                    left: 100,\n                    top: 30,\n                    right: 30,\n                    bottom: 30\n                  },\n                  fontName: 'Inter, sans-serif',\n                  titleTextStyle: {\n                    fontSize: 0\n                  },\n                  tooltip: {\n                    textStyle: {\n                      fontName: 'Inter',\n                      fontSize: 13\n                    }\n                  },\n                  annotations: {\n                    alwaysOutside: true,\n                    textStyle: {\n                      fontSize: 12,\n                      color: '#000',\n                      fontName: 'Inter',\n                      auraColor: 'none'\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), activeChart === 'investimentos' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card full-width\",\n            children: [/*#__PURE__*/_jsxDEV(ChartNavigationButtons, {\n              activeChart: activeChart,\n              setActiveChart: setActiveChart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"chart-title\",\n              children: \"Investimentos/Poupan\\xE7a: Construindo seu futuro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chart-description\",\n              children: \"Acompanhe seu progresso em dire\\xE7\\xE3o aos seus objetivos financeiros.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                chartType: \"BarChart\",\n                width: \"100%\",\n                height: \"100%\",\n                data: [[\"Subcategoria\", \"Valor\", {\n                  role: \"annotation\"\n                }], ...agruparSubcategorias(gastos, \"INVESTIMENTO_E_POUPANCA\")],\n                options: {\n                  title: \"\",\n                  legend: {\n                    position: \"none\"\n                  },\n                  bars: \"horizontal\",\n                  hAxis: {\n                    format: \"currency\",\n                    textStyle: {\n                      color: '#555',\n                      fontName: 'Inter'\n                    },\n                    minValue: 0,\n                    formatOptions: {\n                      prefix: 'R$',\n                      decimalPlaces: 2,\n                      groupingSymbol: '.',\n                      decimalSymbol: ','\n                    }\n                  },\n                  vAxis: {\n                    textStyle: {\n                      color: '#555',\n                      fontName: 'Inter'\n                    }\n                  },\n                  colors: [\"#28a745\"],\n                  chartArea: {\n                    left: 100,\n                    top: 30,\n                    right: 30,\n                    bottom: 30\n                  },\n                  fontName: 'Inter, sans-serif',\n                  titleTextStyle: {\n                    fontSize: 0\n                  },\n                  tooltip: {\n                    textStyle: {\n                      fontName: 'Inter',\n                      fontSize: 13\n                    }\n                  },\n                  annotations: {\n                    alwaysOutside: true,\n                    textStyle: {\n                      fontSize: 12,\n                      color: '#000',\n                      fontName: 'Inter',\n                      auraColor: 'none'\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Home, \"eRFtHrLVQjcwslbUNmvN0i1DI4A=\");\n_c = Home;\nexport default Home; // Exporta o componente Home para ser usado em outras partes da aplicação.\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Layout","Chart","authService","jsxDEV","_jsxDEV","Home","_s","renda","setRenda","gastos","setGastos","totalGasto","setTotalGasto","totalInvestimento","setTotalInvestimento","activeChart","setActiveChart","usuario","JSON","parse","localStorage","getItem","id","getUserById","then","res","data","catch","err","console","error","buscarLancamentosPorUsuario","todos","totalGastoCalculado","filter","g","categoria","reduce","acc","valor","totalInvestCalculado","categoryColors","dadosGraficoBrutos","item","nome","replace","toLowerCase","existente","find","i","push","dadosGrafico","length","map","v","f","toLocaleString","style","currency","agruparSubcategorias","lista","filtrado","agrupado","forEach","subcategoria","resultados","Object","entries","total","Math","abs","toFixed","ChartNavigationButtons","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","chartType","width","height","options","pieHole","colors","slice","legend","position","textStyle","color","fontName","fontSize","chartArea","left","top","right","bottom","titleTextStyle","tooltip","trigger","slices","role","title","bars","hAxis","format","minValue","formatOptions","prefix","decimalPlaces","groupingSymbol","decimalSymbol","vAxis","annotations","alwaysOutside","auraColor","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\n// Importa as dependências necessárias do React e bibliotecas externas.\r\nimport React, { useEffect, useState } from \"react\"; // useState para gerenciar o estado, useEffect para efeitos colaterais (como buscar dados).\r\nimport Layout from \"../components/Layout\"; // Componente de layout que estrutura a página.\r\nimport \"../assets/Home.css\";\r\nimport { Chart } from \"react-google-charts\"; // Componente para renderizar gráficos do Google Charts.\r\nimport authService from \"../services/authService\";\r\n\r\n// Componente funcional principal da página Home.\r\nconst Home = () => {\r\n  // --- Estados do Componente ---\r\n  // useState para armazenar a renda do usuário. Inicializa com 0.\r\n  const [renda, setRenda] = useState(0);\r\n  // useState para armazenar a lista completa de lançamentos (gastos/receitas). Inicializa com array vazio.\r\n  const [gastos, setGastos] = useState([]);\r\n  // useState para armazenar o total de gastos (excluindo investimentos). Inicializa com 0.\r\n  const [totalGasto, setTotalGasto] = useState(0);\r\n  // useState para armazenar o total investido. Inicializa com 0.\r\n  const [totalInvestimento, setTotalInvestimento] = useState(0);\r\n  // useState para controlar qual gráfico está ativo (visível). Inicializa com 'geral'.\r\n  const [activeChart, setActiveChart] = useState('geral'); // Valores possíveis: 'geral', 'necessidades', 'desejos', 'investimentos'\r\n\r\n  // --- Efeito Colateral (useEffect) ---\r\n  // Executado uma vez após a montagem inicial do componente, e sempre que as dependências mudarem (array vazio = apenas uma vez).\r\n  useEffect(() => {\r\n    // Busca os dados do usuário logado no localStorage.\r\n    const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n    // Verifica se o ID do usuário existe antes de fazer chamadas à API.\r\n    if (usuario?.id) {\r\n      // Busca os dados do usuário pelo ID para obter a renda.\r\n      authService.getUserById(usuario.id)\r\n        .then(res => setRenda(res.data.renda || 0)) // Atualiza o estado 'renda'. Se não houver, assume 0.\r\n        .catch(err => console.error(\"Erro ao buscar usuário:\", err)); // Loga erros.\r\n\r\n      // Busca todos os lançamentos financeiros do usuário.\r\n      // O segundo argumento '{}' é passado para que 'dataInicio' e 'dataFinal' sejam strings vazias por padrão no serviço, buscando todos.\r\n      authService.buscarLancamentosPorUsuario(usuario.id, {})\r\n        .then(res => { // 'res' é o objeto de resposta do Axios.\r\n          const todos = res.data; // Extrai a lista de lançamentos de 'res.data'.\r\n          setGastos(todos); // Atualiza o estado 'gastos' com todos os lançamentos.\r\n\r\n          // Calcula o total de gastos, filtrando o que NÃO é 'INVESTIMENTO_E_POUPANCA'.\r\n          const totalGastoCalculado = todos\r\n            .filter(g => g.categoria !== \"INVESTIMENTO_E_POUPANCA\")\r\n            .reduce((acc, g) => acc + g.valor, 0); // Soma os valores.\r\n\r\n          // Calcula o total de investimentos, filtrando apenas 'INVESTIMENTO_E_POUPANCA'.\r\n          const totalInvestCalculado = todos\r\n            .filter(g => g.categoria === \"INVESTIMENTO_E_POUPANCA\")\r\n            .reduce((acc, g) => acc + g.valor, 0); // Soma os valores.\r\n\r\n          setTotalGasto(totalGastoCalculado); // Atualiza o estado 'totalGasto'.\r\n          setTotalInvestimento(totalInvestCalculado); // Atualiza o estado 'totalInvestimento'.\r\n        })\r\n        .catch(err => {\r\n          console.error(\"Erro ao buscar lançamentos:\", err); // Loga erros.\r\n          // Em caso de erro, reinicia os estados para valores padrão.\r\n          setGastos([]);\r\n          setTotalGasto(0);\r\n          setTotalInvestimento(0);\r\n        });\r\n    }\r\n  }, []); // Array de dependências vazio significa que este efeito só roda uma vez, ao montar o componente.\r\n\r\n  // --- Dados e Lógica para Gráficos ---\r\n\r\n  // Objeto para mapear categorias a cores específicas nos gráficos.\r\n  const categoryColors = {\r\n    \"investimento e poupanca\": \"#28a745\", // Verde para investimento.\r\n    \"necessidades\": \"#007bff\",           // Azul para necessidades.\r\n    \"desejos\": \"#dc3545\",                 // Vermelho para desejos.\r\n  };\r\n\r\n  // Processa os dados de gastos para o Gráfico de Pizza (Visão Geral).\r\n  // Agrupa os gastos por categoria e soma seus valores.\r\n  const dadosGraficoBrutos = gastos.reduce((acc, item) => {\r\n    // Formata o nome da categoria para exibição (ex: \"INVESTIMENTO_E_POUPANCA\" -> \"investimento e poupanca\").\r\n    const nome = item.categoria\r\n      .replace(\"_E_\", \" e \")\r\n      .replace(/_/g, \" \")\r\n      .toLowerCase();\r\n    // Procura se a categoria já existe no acumulador.\r\n    const existente = acc.find(i => i[0] === nome);\r\n    if (existente) {\r\n      existente[1] += item.valor; // Se existe, adiciona o valor.\r\n    } else {\r\n      acc.push([nome, item.valor]); // Se não existe, adiciona uma nova entrada.\r\n    }\r\n    return acc;\r\n  }, []); // Inicia o acumulador como um array vazio.\r\n\r\n  // Prepara os dados para o Gráfico de Pizza, incluindo formatação para o tooltip.\r\n  // O Google Charts pode receber um objeto {v: valor, f: valor_formatado} para o tooltip.\r\n  const dadosGrafico = [\r\n    [\"Categoria\", \"Valor\"], // Cabeçalho do gráfico.\r\n    ...(dadosGraficoBrutos.length > 0 // Se houver dados...\r\n      ? dadosGraficoBrutos.map(item => [\r\n          item[0], // Nome da categoria.\r\n          // Objeto com valor numérico (v) e string formatada (f) para exibição no tooltip.\r\n          { v: item[1], f: item[1].toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" }) }\r\n        ])\r\n      : [[\"Nenhuma Categoria\", { v: 0, f: \"R$ 0,00\" }]]) // Caso não haja dados, exibe \"Nenhuma Categoria\".\r\n  ];\r\n\r\n  // Função auxiliar para agrupar lançamentos por subcategoria dentro de uma categoria específica.\r\n  // Usado para os gráficos de barras (Necessidades, Desejos, Investimentos).\r\n  const agruparSubcategorias = (lista, categoria) => {\r\n    // Filtra os lançamentos pela categoria desejada.\r\n    const filtrado = lista.filter(g => g.categoria === categoria);\r\n\r\n    // Objeto para acumular os valores por subcategoria.\r\n    const agrupado = {};\r\n    filtrado.forEach(g => {\r\n      agrupado[g.subcategoria] = (agrupado[g.subcategoria] || 0) + g.valor;\r\n    });\r\n\r\n    // Mapeia o objeto agrupado para o formato de dados do Google Charts.\r\n    const resultados = Object.entries(agrupado).map(([nome, valor]) => {\r\n      // Calcula o total da categoria para o cálculo percentual (usado na anotação).\r\n      const total = filtrado.reduce((acc, g) => acc + Math.abs(g.valor), 0);\r\n      return [\r\n        nome, // Nome da subcategoria.\r\n        // Objeto com valor numérico (v) e string formatada (f) para exibição no tooltip.\r\n        { v: valor, f: valor.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" }) },\r\n        // Anotação percentual.\r\n        total > 0 ? `${((Math.abs(valor) / total) * 100).toFixed(1)}%` : '0%'\r\n      ];\r\n    });\r\n\r\n    // Se não houver dados para a categoria, retorna um placeholder.\r\n    if (resultados.length === 0) {\r\n      return [[\"Sem dados\", { v: 0, f: \"R$ 0,00\" }, \"0%\"]]; // Inclui formatação para \"Sem dados\"\r\n    }\r\n    return resultados;\r\n  };\r\n\r\n  // --- Componente de Botões de Navegação ---\r\n  // Componente funcional separado para os botões de troca de gráfico, para melhor organização.\r\n  const ChartNavigationButtons = ({ activeChart, setActiveChart }) => (\r\n    <div className=\"chart-navigation-buttons\">\r\n      {/* Botão \"Visão Geral\" */}\r\n      <button\r\n        className={`nav-button ${activeChart === 'geral' ? 'active' : ''}`} // Adiciona classe 'active' se for o gráfico atual.\r\n        onClick={() => setActiveChart('geral')} // Atualiza o estado 'activeChart' ao clicar.\r\n      >\r\n        Visão Geral\r\n      </button>\r\n      {/* Botão \"Necessidades\" */}\r\n      <button\r\n        className={`nav-button ${activeChart === 'necessidades' ? 'active' : ''}`}\r\n        onClick={() => setActiveChart('necessidades')}\r\n      >\r\n        Necessidades\r\n      </button>\r\n      {/* Botão \"Desejos\" */}\r\n      <button\r\n        className={`nav-button ${activeChart === 'desejos' ? 'active' : ''}`}\r\n        onClick={() => setActiveChart('desejos')}\r\n      >\r\n        Desejos\r\n      </button>\r\n      {/* Botão \"Investimentos\" */}\r\n      <button\r\n        className={`nav-button ${activeChart === 'investimentos' ? 'active' : ''}`}\r\n        onClick={() => setActiveChart('investimentos')}\r\n      >\r\n        Investimentos\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  // --- Renderização do Componente ---\r\n  return (\r\n    // Usa o componente Layout para manter a estrutura padrão da página.\r\n    <Layout>\r\n      <div className=\"home-container\">\r\n        <h1 className=\"home-header\">Relatórios Financeiros</h1>\r\n\r\n        {/* Cartões de estatísticas principais */}\r\n        <div className=\"top-cards\">\r\n          {/* Cartão de Rendimento Total */}\r\n          <div className=\"stat-card\">\r\n            <span className=\"card-label\">Rendimento Total</span>\r\n            <span className=\"card-value\">\r\n              {/* Formata a renda para moeda brasileira */}\r\n              {renda.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" })}\r\n            </span>\r\n          </div>\r\n          {/* Cartão de Gastos Totais */}\r\n          <div className=\"stat-card\">\r\n            <span className=\"card-label\">Gastos Totais</span>\r\n            <span className=\"card-value\">\r\n              {/* Formata os gastos para moeda brasileira */}\r\n              {totalGasto.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" })}\r\n            </span>\r\n          </div>\r\n          {/* Cartão de Valor Investido */}\r\n          <div className=\"stat-card\">\r\n            <span className=\"card-label\">Valor Investido</span>\r\n            <span className=\"card-value\">\r\n              {/* Formata o investimento para moeda brasileira */}\r\n              {totalInvestimento.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" })}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Contêiner para os gráficos, agora com apenas um chart-card visível por vez */}\r\n        <div className=\"dashboard-grid\">\r\n          {/* Renderiza o Gráfico de Pizza (Visão Geral) se 'activeChart' for 'geral' */}\r\n          {activeChart === 'geral' && (\r\n            <div className=\"chart-card full-width\">\r\n              {/* Botões de navegação, posicionados DENTRO do card do gráfico */}\r\n              <ChartNavigationButtons activeChart={activeChart} setActiveChart={setActiveChart} />\r\n              <h2 className=\"chart-title\">Distribuição de Gastos por Categoria</h2>\r\n              <p className=\"chart-description\">Entenda para onde seu dinheiro está indo, dividido em necessidades, desejos e investimentos.</p>\r\n              {/* Wrapper para garantir que o gráfico preencha o espaço disponível */}\r\n              <div className=\"chart-container-wrapper\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  data={dadosGrafico} // Dados já formatados para o tooltip.\r\n                  options={{\r\n                    pieHole: 0.4, // Cria o efeito de \"donut\".\r\n                    colors: dadosGrafico.slice(1).map(item => categoryColors[item[0]] || '#CCCCCC'), // Aplica cores por categoria.\r\n                    legend: { position: \"bottom\", textStyle: { color: '#555', fontName: 'Inter', fontSize: 13 } }, // Posição e estilo da legenda.\r\n                    chartArea: { left: 15, top: 15, right: 15, bottom: 50, width: '90%', height: '80%' }, // Ajusta a área do gráfico.\r\n                    fontName: 'Inter, sans-serif', // Fonte global do gráfico.\r\n                    titleTextStyle: { fontSize: 0 }, // Título do gráfico (definido externamente).\r\n                    tooltip: {\r\n                      textStyle: { fontName: 'Inter', fontSize: 13 },\r\n                      trigger: 'focus' // Exibe tooltip ao focar/clicar, melhor para telas touch.\r\n                    },\r\n                    // Ajuste para exibir uma cor cinza se não houver dados, para \"Nenhuma Categoria\".\r\n                    slices: dadosGrafico.length === 2 && dadosGrafico[1][0] === \"Nenhuma Categoria\" ? {\r\n                        0: { color: '#CCCCCC' }\r\n                    } : {}\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Renderiza o Gráfico de Barras de Necessidades se 'activeChart' for 'necessidades' */}\r\n          {activeChart === 'necessidades' && (\r\n            <div className=\"chart-card full-width\">\r\n              <ChartNavigationButtons activeChart={activeChart} setActiveChart={setActiveChart} />\r\n              <h2 className=\"chart-title\">Necessidades: Onde seu dinheiro é essencial</h2>\r\n              <p className=\"chart-description\">Detalhes dos seus gastos fixos e indispensáveis.</p>\r\n              <div className=\"chart-container-wrapper\">\r\n                <Chart\r\n                  chartType=\"BarChart\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  data={[\r\n                    [\"Subcategoria\", \"Valor\", { role: \"annotation\" }], // Cabeçalho com coluna para anotações.\r\n                    ...agruparSubcategorias(gastos, \"NECESSIDADES\") // Dados agrupados por subcategoria.\r\n                  ]}\r\n                  options={{\r\n                    title: \"\", // Título definido externamente.\r\n                    legend: { position: \"none\" }, // Sem legenda.\r\n                    bars: \"horizontal\", // Barras horizontais.\r\n                    hAxis: { // Eixo horizontal (valores).\r\n                      format: \"currency\", // Formata como moeda.\r\n                      textStyle: { color: '#555', fontName: 'Inter' },\r\n                      minValue: 0,\r\n                      // Opções de formatação para moeda brasileira (R$ X.XXX,XX).\r\n                      formatOptions: {\r\n                        prefix: 'R$',\r\n                        decimalPlaces: 2,\r\n                        groupingSymbol: '.', // Ponto como separador de milhares.\r\n                        decimalSymbol: ',', // Vírgula como separador decimal.\r\n                      }\r\n                    },\r\n                    vAxis: { textStyle: { color: '#555', fontName: 'Inter' } }, // Eixo vertical (subcategorias).\r\n                    colors: [\"#007bff\"], // Cor das barras.\r\n                    chartArea: { left: 100, top: 30, right: 30, bottom: 30 }, // Ajusta a área do gráfico.\r\n                    fontName: 'Inter, sans-serif',\r\n                    titleTextStyle: { fontSize: 0 },\r\n                    tooltip: { textStyle: { fontName: 'Inter', fontSize: 13 } },\r\n                    annotations: { // Configurações para as anotações (percentuais nas barras).\r\n                      alwaysOutside: true,\r\n                      textStyle: {\r\n                        fontSize: 12,\r\n                        color: '#000',\r\n                        fontName: 'Inter',\r\n                        auraColor: 'none'\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Renderiza o Gráfico de Barras de Desejos se 'activeChart' for 'desejos' */}\r\n          {activeChart === 'desejos' && (\r\n            <div className=\"chart-card full-width\">\r\n              <ChartNavigationButtons activeChart={activeChart} setActiveChart={setActiveChart} />\r\n              <h2 className=\"chart-title\">Desejos: Gastos para o seu lazer e prazer</h2>\r\n              <p className=\"chart-description\">Visão detalhada dos seus gastos não essenciais e de lazer.</p>\r\n              <div className=\"chart-container-wrapper\">\r\n                <Chart\r\n                  chartType=\"BarChart\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  data={[\r\n                    [\"Subcategoria\", \"Valor\", { role: \"annotation\" }],\r\n                    ...agruparSubcategorias(gastos, \"DESEJOS\")\r\n                  ]}\r\n                  options={{\r\n                    title: \"\",\r\n                    legend: { position: \"none\" },\r\n                    bars: \"horizontal\",\r\n                    hAxis: {\r\n                      format: \"currency\",\r\n                      textStyle: { color: '#555', fontName: 'Inter' },\r\n                      minValue: 0,\r\n                      formatOptions: {\r\n                        prefix: 'R$',\r\n                        decimalPlaces: 2,\r\n                        groupingSymbol: '.',\r\n                        decimalSymbol: ',',\r\n                      }\r\n                    },\r\n                    vAxis: { textStyle: { color: '#555', fontName: 'Inter' } },\r\n                    colors: [\"#dc3545\"],\r\n                    chartArea: { left: 100, top: 30, right: 30, bottom: 30 },\r\n                    fontName: 'Inter, sans-serif',\r\n                    titleTextStyle: { fontSize: 0 },\r\n                    tooltip: { textStyle: { fontName: 'Inter', fontSize: 13 } },\r\n                    annotations: {\r\n                      alwaysOutside: true,\r\n                      textStyle: {\r\n                        fontSize: 12,\r\n                        color: '#000',\r\n                        fontName: 'Inter',\r\n                        auraColor: 'none'\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Renderiza o Gráfico de Barras de Investimentos se 'activeChart' for 'investimentos' */}\r\n          {activeChart === 'investimentos' && (\r\n            <div className=\"chart-card full-width\">\r\n              <ChartNavigationButtons activeChart={activeChart} setActiveChart={setActiveChart} />\r\n              <h2 className=\"chart-title\">Investimentos/Poupança: Construindo seu futuro</h2>\r\n              <p className=\"chart-description\">Acompanhe seu progresso em direção aos seus objetivos financeiros.</p>\r\n              <div className=\"chart-container-wrapper\">\r\n                <Chart\r\n                  chartType=\"BarChart\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  data={[\r\n                    [\"Subcategoria\", \"Valor\", { role: \"annotation\" }],\r\n                    ...agruparSubcategorias(gastos, \"INVESTIMENTO_E_POUPANCA\")\r\n                  ]}\r\n                  options={{\r\n                    title: \"\",\r\n                    legend: { position: \"none\" },\r\n                    bars: \"horizontal\",\r\n                    hAxis: {\r\n                      format: \"currency\",\r\n                      textStyle: { color: '#555', fontName: 'Inter' },\r\n                      minValue: 0,\r\n                      formatOptions: {\r\n                        prefix: 'R$',\r\n                        decimalPlaces: 2,\r\n                        groupingSymbol: '.',\r\n                        decimalSymbol: ',',\r\n                      }\r\n                    },\r\n                    vAxis: { textStyle: { color: '#555', fontName: 'Inter' } },\r\n                    colors: [\"#28a745\"],\r\n                    chartArea: { left: 100, top: 30, right: 30, bottom: 30 },\r\n                    fontName: 'Inter, sans-serif',\r\n                    titleTextStyle: { fontSize: 0 },\r\n                    tooltip: { textStyle: { fontName: 'Inter', fontSize: 13 } },\r\n                    annotations: {\r\n                      alwaysOutside: true,\r\n                      textStyle: {\r\n                        fontSize: 12,\r\n                        color: '#000',\r\n                        fontName: 'Inter',\r\n                        auraColor: 'none'\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home; // Exporta o componente Home para ser usado em outras partes da aplicação."],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}