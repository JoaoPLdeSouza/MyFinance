{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\pages\\\\Planos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Chart } from \"react-google-charts\";\nimport authService from \"../services/authService\"; // Certifique-se que o caminho está correto\nimport \"../assets/Planos.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Planos = () => {\n  _s();\n  var _dadosPlano$ajustes, _dadosPlano$riscos;\n  const [dadosPlano, setDadosPlano] = useState(null);\n  const [loading, setLoading] = useState(true); // Começa como true para carregar o plano existente\n  const [error, setError] = useState(null);\n  const [planoExiste, setPlanoExiste] = useState(false); // Indica se já existe um plano carregado/gerado\n\n  const formatarValor = valor => {\n    return valor.toLocaleString(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    });\n  };\n  const categoriaMapeada = {\n    NECESSIDADES: \"Necessidades\",\n    DESEJOS: \"Desejos\",\n    INVESTIMENTO_E_POUPANCA: \"Investimento/Poupança\"\n  };\n  const prepararDadosParaGrafico = (dataArray, titulo) => {\n    const categoriasAgrupadas = dataArray.reduce((acc, item) => {\n      acc[item.categoria] = (acc[item.categoria] || 0) + item.valor;\n      return acc;\n    }, {});\n    const dados = [[\"Categoria\", titulo]];\n    for (const categoria in categoriasAgrupadas) {\n      dados.push([categoriaMapeada[categoria] || categoria, categoriasAgrupadas[categoria]]);\n    }\n    return dados;\n  };\n\n  // Função para buscar um plano existente (GET)\n  const carregarPlanoExistente = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      var _response$data$ajuste, _response$data$riscos;\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n      if (!usuario || !usuario.id) {\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\n      }\n      // Tenta buscar o plano salvo no backend.\n      // ESTA FUNÇÃO 'buscarPlano' DEVE SER CRIADA NO SEU authService.js\n      const response = await authService.buscarPlano(usuario.id);\n      if (response.data && (((_response$data$ajuste = response.data.ajustes) === null || _response$data$ajuste === void 0 ? void 0 : _response$data$ajuste.length) > 0 || ((_response$data$riscos = response.data.riscos) === null || _response$data$riscos === void 0 ? void 0 : _response$data$riscos.length) > 0)) {\n        setDadosPlano(response.data);\n        setPlanoExiste(true);\n      } else {\n        setDadosPlano(null);\n        setPlanoExiste(false); // Não há plano existente ou está vazio\n      }\n    } catch (err) {\n      console.error(\"Erro ao carregar plano existente:\", err);\n      // Se for 404, significa que não há plano salvo para este usuário, o que é esperado\n      if (err.response && err.response.status === 404) {\n        setDadosPlano(null);\n        setPlanoExiste(false);\n      } else {\n        setError(\"Não foi possível carregar o plano salvo. Verifique sua conexão ou tente gerar um novo.\");\n        setDadosPlano(null);\n        setPlanoExiste(false);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Função para gerar um NOVO plano (POST)\n  const gerarNovoPlano = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n      if (!usuario || !usuario.id) {\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\n      }\n      // Usa a função gerarPlano que faz o POST, que deve gerar e salvar o plano\n      const response = await authService.gerarPlano(usuario.id);\n      setDadosPlano(response.data);\n      setPlanoExiste(true); // Um plano foi gerado (e salvo)\n    } catch (err) {\n      console.error(\"Erro ao gerar novo plano:\", err);\n      if (err.response && err.response.data && err.response.data.message) {\n        setError(`Erro ao gerar plano: ${err.response.data.message}`);\n      } else {\n        setError(\"Não foi possível gerar um novo plano financeiro. Verifique sua conexão ou tente novamente.\");\n      }\n      setDadosPlano(null);\n      setPlanoExiste(false);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Efeito para carregar o plano existente ao montar a página\n  useEffect(() => {\n    carregarPlanoExistente();\n  }, [carregarPlanoExistente]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planos-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"planos-header\",\n        children: \"Seu Plano Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"planos-description\",\n        children: \"Aqui voc\\xEA pode visualizar seu plano financeiro atual. Ele \\xE9 gerado com base nos seus lan\\xE7amentos e oferece recomenda\\xE7\\xF5es de ajustes e identifica \\xE1reas de risco em seus gastos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gerar-plano-button\",\n          onClick: gerarNovoPlano // Chama a função para gerar novo plano\n          ,\n          disabled: loading,\n          children: loading ? \"Gerando Plano...\" : \"Gerar Novo Plano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-message loading-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Carregando plano financeiro...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-message error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), !loading && !error && planoExiste && dadosPlano && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"**Entenda seu plano:**\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), \"**Ajustes Recomendados:** Sugerem onde voc\\xEA pode otimizar seus gastos para melhorar sua sa\\xFAde financeira. Considere redirecionar esses valores para poupan\\xE7a ou investimentos.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), \"**\\xC1reas de Risco:** Indicam gastos que foram detectados como potencialmente altos em suas categorias. \\xC9 importante revisar esses itens para identificar onde voc\\xEA pode economizar.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), dadosPlano.ajustes && dadosPlano.ajustes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Ajustes Recomendados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aqui est\\xE3o os valores e categorias que voc\\xEA pode ajustar para melhorar sua sa\\xFAde financeira. Ao reduzir esses gastos, voc\\xEA pode direcionar mais recursos para suas metas.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planos-content-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                chartType: \"PieChart\",\n                width: \"100%\",\n                height: \"100%\",\n                data: prepararDadosParaGrafico(dadosPlano.ajustes, \"Valor Ajustado\"),\n                options: {\n                  title: \"Distribuição dos Ajustes Recomendados\",\n                  pieHole: 0.4,\n                  is3D: false,\n                  legend: {\n                    position: \"bottom\",\n                    alignment: \"center\"\n                  },\n                  colors: ['#28a745', '#007bff', '#ffc107', '#6f42c1', '#17a2b8'],\n                  tooltip: {\n                    trigger: 'focus'\n                  },\n                  backgroundColor: 'transparent'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Detalhes dos Ajustes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: dadosPlano.ajustes.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [categoriaMapeada[item.categoria] || item.categoria, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 27\n                  }, this), \" \", item.subcategoria, \" - \", formatarValor(item.valor)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), dadosPlano.riscos && dadosPlano.riscos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\xC1reas de Risco\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Estes gastos foram identificados como potencialmente altos. Recomendamos que voc\\xEA os revise para encontrar oportunidades de economia e evitar desequil\\xEDbrios.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planos-content-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                chartType: \"BarChart\",\n                width: \"100%\",\n                height: \"100%\",\n                data: prepararDadosParaGrafico(dadosPlano.riscos, \"Valor Detectado\"),\n                options: {\n                  title: \"Valores por Categoria de Risco\",\n                  legend: {\n                    position: \"none\"\n                  },\n                  bars: \"horizontal\",\n                  hAxis: {\n                    format: \"currency\"\n                  },\n                  colors: ['#dc3545'],\n                  // Cores para riscos\n                  tooltip: {\n                    trigger: 'focus'\n                  },\n                  backgroundColor: 'transparent'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Detalhes dos Riscos:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: dadosPlano.riscos.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [categoriaMapeada[item.categoria] || item.categoria, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 27\n                  }, this), \" \", item.subcategoria, \" - \", formatarValor(item.valor)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this), !(dadosPlano !== null && dadosPlano !== void 0 && (_dadosPlano$ajustes = dadosPlano.ajustes) !== null && _dadosPlano$ajustes !== void 0 && _dadosPlano$ajustes.length) && !(dadosPlano !== null && dadosPlano !== void 0 && (_dadosPlano$riscos = dadosPlano.riscos) !== null && _dadosPlano$riscos !== void 0 && _dadosPlano$riscos.length) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planos-message no-data-found-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"O plano foi gerado, mas n\\xE3o foram encontrados ajustes ou riscos para o seu perfil atual. Continue monitorando seus gastos!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), dadosPlano.dataAlteracao && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"data-alteracao\",\n          children: [\"\\xDAltima atualiza\\xE7\\xE3o do plano: \", dadosPlano.dataAlteracao]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), !loading && !error && !planoExiste && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planos-message initial-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Voc\\xEA ainda n\\xE3o possui um plano financeiro.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), \"Clique em **\\\"Gerar Novo Plano\\\"** para analisar seus gastos e obter recomenda\\xE7\\xF5es personalizadas.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Planos, \"x5i8dRiKdvzWLcLfaGPVUfQdGQU=\");\n_c = Planos;\nexport default Planos;\nvar _c;\n$RefreshReg$(_c, \"Planos\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Layout","Chart","authService","jsxDEV","_jsxDEV","Fragment","_Fragment","Planos","_s","_dadosPlano$ajustes","_dadosPlano$riscos","dadosPlano","setDadosPlano","loading","setLoading","error","setError","planoExiste","setPlanoExiste","formatarValor","valor","toLocaleString","style","currency","categoriaMapeada","NECESSIDADES","DESEJOS","INVESTIMENTO_E_POUPANCA","prepararDadosParaGrafico","dataArray","titulo","categoriasAgrupadas","reduce","acc","item","categoria","dados","push","carregarPlanoExistente","_response$data$ajuste","_response$data$riscos","usuario","JSON","parse","localStorage","getItem","id","Error","response","buscarPlano","data","ajustes","length","riscos","err","console","status","gerarNovoPlano","gerarPlano","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","chartType","width","height","options","title","pieHole","is3D","legend","position","alignment","colors","tooltip","trigger","backgroundColor","map","index","subcategoria","bars","hAxis","format","dataAlteracao","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/pages/Planos.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport authService from \"../services/authService\"; // Certifique-se que o caminho está correto\r\nimport \"../assets/Planos.css\";\r\n\r\nconst Planos = () => {\r\n  const [dadosPlano, setDadosPlano] = useState(null);\r\n  const [loading, setLoading] = useState(true); // Começa como true para carregar o plano existente\r\n  const [error, setError] = useState(null);\r\n  const [planoExiste, setPlanoExiste] = useState(false); // Indica se já existe um plano carregado/gerado\r\n\r\n  const formatarValor = (valor) => {\r\n    return valor.toLocaleString(\"pt-BR\", { style: \"currency\", currency: \"BRL\" });\r\n  };\r\n\r\n  const categoriaMapeada = {\r\n    NECESSIDADES: \"Necessidades\",\r\n    DESEJOS: \"Desejos\",\r\n    INVESTIMENTO_E_POUPANCA: \"Investimento/Poupança\"\r\n  };\r\n\r\n  const prepararDadosParaGrafico = (dataArray, titulo) => {\r\n    const categoriasAgrupadas = dataArray.reduce((acc, item) => {\r\n      acc[item.categoria] = (acc[item.categoria] || 0) + item.valor;\r\n      return acc;\r\n    }, {});\r\n\r\n    const dados = [[\"Categoria\", titulo]];\r\n    for (const categoria in categoriasAgrupadas) {\r\n      dados.push([categoriaMapeada[categoria] || categoria, categoriasAgrupadas[categoria]]);\r\n    }\r\n    return dados;\r\n  };\r\n\r\n  // Função para buscar um plano existente (GET)\r\n  const carregarPlanoExistente = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n      if (!usuario || !usuario.id) {\r\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\r\n      }\r\n      // Tenta buscar o plano salvo no backend.\r\n      // ESTA FUNÇÃO 'buscarPlano' DEVE SER CRIADA NO SEU authService.js\r\n      const response = await authService.buscarPlano(usuario.id);\r\n      if (response.data && (response.data.ajustes?.length > 0 || response.data.riscos?.length > 0)) {\r\n        setDadosPlano(response.data);\r\n        setPlanoExiste(true);\r\n      } else {\r\n        setDadosPlano(null);\r\n        setPlanoExiste(false); // Não há plano existente ou está vazio\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erro ao carregar plano existente:\", err);\r\n      // Se for 404, significa que não há plano salvo para este usuário, o que é esperado\r\n      if (err.response && err.response.status === 404) {\r\n        setDadosPlano(null);\r\n        setPlanoExiste(false);\r\n      } else {\r\n        setError(\"Não foi possível carregar o plano salvo. Verifique sua conexão ou tente gerar um novo.\");\r\n        setDadosPlano(null);\r\n        setPlanoExiste(false);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Função para gerar um NOVO plano (POST)\r\n  const gerarNovoPlano = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n      if (!usuario || !usuario.id) {\r\n        throw new Error(\"ID do usuário não encontrado. Faça login novamente.\");\r\n      }\r\n      // Usa a função gerarPlano que faz o POST, que deve gerar e salvar o plano\r\n      const response = await authService.gerarPlano(usuario.id);\r\n      setDadosPlano(response.data);\r\n      setPlanoExiste(true); // Um plano foi gerado (e salvo)\r\n    } catch (err) {\r\n      console.error(\"Erro ao gerar novo plano:\", err);\r\n      if (err.response && err.response.data && err.response.data.message) {\r\n        setError(`Erro ao gerar plano: ${err.response.data.message}`);\r\n      } else {\r\n        setError(\"Não foi possível gerar um novo plano financeiro. Verifique sua conexão ou tente novamente.\");\r\n      }\r\n      setDadosPlano(null);\r\n      setPlanoExiste(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Efeito para carregar o plano existente ao montar a página\r\n  useEffect(() => {\r\n    carregarPlanoExistente();\r\n  }, [carregarPlanoExistente]);\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"planos-container\">\r\n        <h1 className=\"planos-header\">Seu Plano Financeiro</h1>\r\n        <p className=\"planos-description\">\r\n          Aqui você pode visualizar seu plano financeiro atual. Ele é gerado com base nos seus lançamentos\r\n          e oferece recomendações de ajustes e identifica áreas de risco em seus gastos.\r\n        </p>\r\n\r\n        <div className=\"planos-actions\">\r\n          <button\r\n            className=\"gerar-plano-button\"\r\n            onClick={gerarNovoPlano} // Chama a função para gerar novo plano\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Gerando Plano...\" : \"Gerar Novo Plano\"}\r\n          </button>\r\n        </div>\r\n\r\n        {loading && (\r\n          <div className=\"planos-message loading-message\">\r\n            <p>Carregando plano financeiro...</p>\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <div className=\"planos-message error-message\">\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Exibe o plano se ele existir e não estiver carregando/houver erro */}\r\n        {!loading && !error && planoExiste && dadosPlano && (\r\n          <>\r\n            <div className=\"planos-summary\">\r\n              <p>\r\n                **Entenda seu plano:**\r\n                <br />\r\n                **Ajustes Recomendados:** Sugerem onde você pode otimizar seus gastos para melhorar sua saúde financeira. Considere redirecionar esses valores para poupança ou investimentos.\r\n                <br />\r\n                **Áreas de Risco:** Indicam gastos que foram detectados como potencialmente altos em suas categorias. É importante revisar esses itens para identificar onde você pode economizar.\r\n              </p>\r\n            </div>\r\n\r\n            {dadosPlano.ajustes && dadosPlano.ajustes.length > 0 && (\r\n              <div className=\"planos-section\">\r\n                <h2>Ajustes Recomendados</h2>\r\n                <p>\r\n                  Aqui estão os valores e categorias que você pode ajustar para melhorar sua saúde financeira.\r\n                  Ao reduzir esses gastos, você pode direcionar mais recursos para suas metas.\r\n                </p>\r\n                <div className=\"planos-content-grid\">\r\n                  <div className=\"chart-wrapper\">\r\n                    <Chart\r\n                      chartType=\"PieChart\"\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      data={prepararDadosParaGrafico(dadosPlano.ajustes, \"Valor Ajustado\")}\r\n                      options={{\r\n                        title: \"Distribuição dos Ajustes Recomendados\",\r\n                        pieHole: 0.4,\r\n                        is3D: false,\r\n                        legend: { position: \"bottom\", alignment: \"center\" },\r\n                        colors: ['#28a745', '#007bff', '#ffc107', '#6f42c1', '#17a2b8'],\r\n                        tooltip: { trigger: 'focus' },\r\n                        backgroundColor: 'transparent'\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"list-wrapper\">\r\n                    <h3>Detalhes dos Ajustes:</h3>\r\n                    <ul>\r\n                      {dadosPlano.ajustes.map((item, index) => (\r\n                        <li key={index}>\r\n                          <strong>{categoriaMapeada[item.categoria] || item.categoria}:</strong> {item.subcategoria} - {formatarValor(item.valor)}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {dadosPlano.riscos && dadosPlano.riscos.length > 0 && (\r\n              <div className=\"planos-section\">\r\n                <h2>Áreas de Risco</h2>\r\n                <p>\r\n                  Estes gastos foram identificados como potencialmente altos. Recomendamos que\r\n                  você os revise para encontrar oportunidades de economia e evitar desequilíbrios.\r\n                </p>\r\n                <div className=\"planos-content-grid\">\r\n                  <div className=\"chart-wrapper\">\r\n                    <Chart\r\n                      chartType=\"BarChart\"\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      data={prepararDadosParaGrafico(dadosPlano.riscos, \"Valor Detectado\")}\r\n                      options={{\r\n                        title: \"Valores por Categoria de Risco\",\r\n                        legend: { position: \"none\" },\r\n                        bars: \"horizontal\",\r\n                        hAxis: { format: \"currency\" },\r\n                        colors: ['#dc3545'], // Cores para riscos\r\n                        tooltip: { trigger: 'focus' },\r\n                        backgroundColor: 'transparent'\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"list-wrapper\">\r\n                    <h3>Detalhes dos Riscos:</h3>\r\n                    <ul>\r\n                      {dadosPlano.riscos.map((item, index) => (\r\n                        <li key={index}>\r\n                          <strong>{categoriaMapeada[item.categoria] || item.categoria}:</strong> {item.subcategoria} - {formatarValor(item.valor)}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {!dadosPlano?.ajustes?.length && !dadosPlano?.riscos?.length && (\r\n              <div className=\"planos-message no-data-found-message\">\r\n                <p>O plano foi gerado, mas não foram encontrados ajustes ou riscos para o seu perfil atual. Continue monitorando seus gastos!</p>\r\n              </div>\r\n            )}\r\n\r\n            {dadosPlano.dataAlteracao && (\r\n              <p className=\"data-alteracao\">\r\n                Última atualização do plano: {dadosPlano.dataAlteracao}\r\n              </p>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {/* Mensagem quando não há plano existente e não está carregando */}\r\n        {!loading && !error && !planoExiste && (\r\n          <div className=\"planos-message initial-message\">\r\n            <p>\r\n              Você ainda não possui um plano financeiro.\r\n              <br />\r\n              Clique em **\"Gerar Novo Plano\"** para analisar seus gastos e obter recomendações personalizadas.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Planos;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}