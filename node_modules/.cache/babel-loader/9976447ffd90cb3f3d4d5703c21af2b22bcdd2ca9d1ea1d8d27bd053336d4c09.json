{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\components\\\\ValueInputPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../assets/Popup.css'; // Assuming you have this CSS file for styling the popup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ValueInputPopup = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  isLoading\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [message, setMessage] = useState('');\n  if (!isOpen) return null;\n  const handleSubmit = e => {\n    e.preventDefault();\n    const numericValue = parseFloat(value);\n    if (isNaN(numericValue) || numericValue < 0) {\n      setMessage('Por favor, insira um valor numérico válido e positivo.');\n      return;\n    }\n    onSubmit(numericValue);\n    setMessage('');\n    setValue(''); // Clear input after submission\n  };\n  const handleClose = () => {\n    setMessage('');\n    setValue(''); // Clear input on close\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Gerar Novo Plano com Valor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          placeholder: \"Insira um valor opcional\",\n          value: value,\n          onChange: e => setValue(e.target.value),\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"popup-message error-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'Gerando...' : 'Gerar Plano'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleClose,\n          disabled: isLoading,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ValueInputPopup, \"qCmNwgOPxNDIbgGegFlE2zYCyCM=\");\n_c = ValueInputPopup;\nexport default ValueInputPopup;\nvar _c;\n$RefreshReg$(_c, \"ValueInputPopup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ValueInputPopup","isOpen","onClose","onSubmit","isLoading","_s","value","setValue","message","setMessage","handleSubmit","e","preventDefault","numericValue","parseFloat","isNaN","handleClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","step","placeholder","onChange","target","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/components/ValueInputPopup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../assets/Popup.css'; // Assuming you have this CSS file for styling the popup\r\n\r\nconst ValueInputPopup = ({ isOpen, onClose, onSubmit, isLoading }) => {\r\n  const [value, setValue] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const numericValue = parseFloat(value);\r\n    if (isNaN(numericValue) || numericValue < 0) {\r\n      setMessage('Por favor, insira um valor numérico válido e positivo.');\r\n      return;\r\n    }\r\n    onSubmit(numericValue);\r\n    setMessage('');\r\n    setValue(''); // Clear input after submission\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setMessage('');\r\n    setValue(''); // Clear input on close\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"popup\">\r\n        <h3>Gerar Novo Plano com Valor</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            placeholder=\"Insira um valor opcional\"\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            disabled={isLoading}\r\n          />\r\n          {message && <p className=\"popup-message error-message\">{message}</p>}\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Gerando...' : 'Gerar Plano'}\r\n          </button>\r\n          <button type=\"button\" onClick={handleClose} disabled={isLoading}>\r\n            Cancelar\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ValueInputPopup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}