{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\components\\\\EditRendaPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport authService from \"../services/authService\";\nimport \"../assets/Popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditRendaPopup = ({\n  usuario,\n  onClose\n}) => {\n  _s();\n  // Use usuario.renda, default to 0 if null/undefined\n  const [novaRenda, setNovaRenda] = useState(usuario.renda || 0);\n  const [mensagem, setMensagem] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Assuming authService.alterarRendimento is the correct function\n    // and it expects id and rendimento as query parameters, as per your authService.js\n    authService.alterarRendimento(usuario.id, novaRenda).then(() => {\n      setMensagem(\"Rendimento atualizado com sucesso!\");\n      // Clear message after a short delay and close popup\n      setTimeout(() => {\n        setMensagem(\"\"); // Clear message\n        onClose(); // Close the popup\n      }, 1500);\n    }).catch(error => {\n      var _error$response;\n      console.error(\"Erro ao atualizar rendimento:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setMensagem(\"Erro ao atualizar rendimento. Tente novamente.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Editar Rendimento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\" // Allows decimal values\n        ,\n        value: novaRenda,\n        onChange: e => setNovaRenda(parseFloat(e.target.value)),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup-message\",\n        children: mensagem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(EditRendaPopup, \"eki+vcMBQ3dEY0Po5xTfg/9ApNs=\");\n_c = EditRendaPopup;\nexport default EditRendaPopup;\nvar _c;\n$RefreshReg$(_c, \"EditRendaPopup\");","map":{"version":3,"names":["React","useState","authService","jsxDEV","_jsxDEV","EditRendaPopup","usuario","onClose","_s","novaRenda","setNovaRenda","renda","mensagem","setMensagem","handleSubmit","e","preventDefault","alterarRendimento","id","then","setTimeout","catch","error","_error$response","console","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","step","value","onChange","parseFloat","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/components/EditRendaPopup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport authService from \"../services/authService\";\r\nimport \"../assets/Popup.css\";\r\n\r\nconst EditRendaPopup = ({ usuario, onClose }) => {\r\n  // Use usuario.renda, default to 0 if null/undefined\r\n  const [novaRenda, setNovaRenda] = useState(usuario.renda || 0);\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Assuming authService.alterarRendimento is the correct function\r\n    // and it expects id and rendimento as query parameters, as per your authService.js\r\n    authService.alterarRendimento(usuario.id, novaRenda)\r\n      .then(() => {\r\n        setMensagem(\"Rendimento atualizado com sucesso!\");\r\n        // Clear message after a short delay and close popup\r\n        setTimeout(() => {\r\n          setMensagem(\"\"); // Clear message\r\n          onClose(); // Close the popup\r\n        }, 1500);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao atualizar rendimento:\", error.response?.data || error.message);\r\n        setMensagem(\"Erro ao atualizar rendimento. Tente novamente.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      <h3>Editar Rendimento</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"number\"\r\n          step=\"0.01\" // Allows decimal values\r\n          value={novaRenda}\r\n          onChange={(e) => setNovaRenda(parseFloat(e.target.value))}\r\n          required\r\n        />\r\n        <button type=\"submit\">Salvar</button>\r\n        <button type=\"button\" onClick={onClose}>Cancelar</button>\r\n        {mensagem && <p className=\"popup-message\">{mensagem}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditRendaPopup;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/C;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAACK,OAAO,CAACK,KAAK,IAAI,CAAC,CAAC;EAC9D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACAd,WAAW,CAACe,iBAAiB,CAACX,OAAO,CAACY,EAAE,EAAET,SAAS,CAAC,CACjDU,IAAI,CAAC,MAAM;MACVN,WAAW,CAAC,oCAAoC,CAAC;MACjD;MACAO,UAAU,CAAC,MAAM;QACfP,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QACjBN,OAAO,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAK;MAAA,IAAAC,eAAA;MAChBC,OAAO,CAACF,KAAK,CAAC,+BAA+B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBG,IAAI,KAAIJ,KAAK,CAACK,OAAO,CAAC;MACrFd,WAAW,CAAC,gDAAgD,CAAC;IAC/D,CAAC,CAAC;EACN,CAAC;EAED,oBACET,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBzB,OAAA;MAAAyB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B7B,OAAA;MAAM8B,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBAC3BzB,OAAA;QACE+B,IAAI,EAAC,QAAQ;QACbC,IAAI,EAAC,MAAM,CAAC;QAAA;QACZC,KAAK,EAAE5B,SAAU;QACjB6B,QAAQ,EAAGvB,CAAC,IAAKL,YAAY,CAAC6B,UAAU,CAACxB,CAAC,CAACyB,MAAM,CAACH,KAAK,CAAC,CAAE;QAC1DI,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF7B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrC7B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACO,OAAO,EAAEnC,OAAQ;QAAAsB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxDrB,QAAQ,iBAAIR,OAAA;QAAGwB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEjB;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzB,EAAA,CAzCIH,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}