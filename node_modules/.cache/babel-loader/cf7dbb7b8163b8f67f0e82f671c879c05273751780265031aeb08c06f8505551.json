{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\components\\\\EditRendaPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport authService from \"../services/authService\";\nimport \"../assets/Popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditRendaPopup = ({\n  usuario,\n  onClose\n}) => {\n  _s();\n  const [novaRenda, setNovaRenda] = useState(usuario.renda || 0);\n  const [mensagem, setMensagem] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    const dadosParaAtualizar = {\n      name: usuario.nome,\n      // Get name from the existing user object, system-provided\n      renda: novaRenda\n    };\n\n    // Call the new service function that matches the /usuario/alterar API\n    authService.alterarDadosUsuario(usuario.id, dadosParaAtualizar).then(() => {\n      setMensagem(\"Rendimento atualizado com sucesso!\");\n      setTimeout(() => {\n        setMensagem(\"\");\n        onClose();\n      }, 1500);\n    }).catch(error => {\n      var _error$response;\n      console.error(\"Erro ao atualizar rendimento:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setMensagem(\"Erro ao atualizar rendimento. Tente novamente.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Editar Rendimento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        value: novaRenda,\n        onChange: e => setNovaRenda(parseFloat(e.target.value)),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup-message\",\n        children: mensagem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(EditRendaPopup, \"eki+vcMBQ3dEY0Po5xTfg/9ApNs=\");\n_c = EditRendaPopup;\nexport default EditRendaPopup;\nvar _c;\n$RefreshReg$(_c, \"EditRendaPopup\");","map":{"version":3,"names":["React","useState","authService","jsxDEV","_jsxDEV","EditRendaPopup","usuario","onClose","_s","novaRenda","setNovaRenda","renda","mensagem","setMensagem","handleSubmit","e","preventDefault","dadosParaAtualizar","name","nome","alterarDadosUsuario","id","then","setTimeout","catch","error","_error$response","console","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","step","value","onChange","parseFloat","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/components/EditRendaPopup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport authService from \"../services/authService\";\r\nimport \"../assets/Popup.css\";\r\n\r\nconst EditRendaPopup = ({ usuario, onClose }) => {\r\n  const [novaRenda, setNovaRenda] = useState(usuario.renda || 0);\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const dadosParaAtualizar = {\r\n      name: usuario.nome, // Get name from the existing user object, system-provided\r\n      renda: novaRenda,\r\n    };\r\n\r\n    // Call the new service function that matches the /usuario/alterar API\r\n    authService.alterarDadosUsuario(usuario.id, dadosParaAtualizar)\r\n      .then(() => {\r\n        setMensagem(\"Rendimento atualizado com sucesso!\");\r\n        setTimeout(() => {\r\n          setMensagem(\"\");\r\n          onClose();\r\n        }, 1500);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao atualizar rendimento:\", error.response?.data || error.message);\r\n        setMensagem(\"Erro ao atualizar rendimento. Tente novamente.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      <h3>Editar Rendimento</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"number\"\r\n          step=\"0.01\"\r\n          value={novaRenda}\r\n          onChange={(e) => setNovaRenda(parseFloat(e.target.value))}\r\n          required\r\n        />\r\n        <button type=\"submit\">Salvar</button>\r\n        <button type=\"button\" onClick={onClose}>Cancelar</button>\r\n        {mensagem && <p className=\"popup-message\">{mensagem}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditRendaPopup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}