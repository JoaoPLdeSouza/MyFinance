{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\components\\\\EditRendaPopup.js\",\n  _s = $RefreshSig$();\n// src/components/EditRendaPopup.js\nimport React, { useState, useEffect } from \"react\"; // Import useEffect\nimport authService from \"../services/authService\";\nimport \"../assets/Popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditRendaPopup = ({\n  usuario,\n  onClose\n}) => {\n  _s();\n  const [novaRenda, setNovaRenda] = useState(usuario.renda || 0);\n  const [mensagem, setMensagem] = useState(\"\");\n\n  // Add useEffect to log usuario prop when component mounts or usuario changes\n  useEffect(() => {\n    console.log(\"EditRendaPopup - Prop 'usuario':\", usuario);\n    if (usuario && !usuario.nome) {\n      console.warn(\"EditRendaPopup - 'usuario.nome' está ausente ou é nulo/vazio:\", usuario.nome);\n      setMensagem(\"Atenção: O nome do usuário não foi carregado corretamente. A atualização pode falhar.\");\n    }\n  }, [usuario]); // Dependency array: run when 'usuario' prop changes\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Ensure 'name' is always a non-null, non-empty string.\n    // Trim whitespace to handle cases where name might be \"   \"\n    const nomeDoUsuario = usuario.nome ? String(usuario.nome).trim() : \"\";\n\n    // If the name is truly empty/null from the system,\n    // display an error and prevent submission.\n    if (!nomeDoUsuario) {\n      setMensagem(\"Erro: O nome do usuário é obrigatório e não foi carregado. Por favor, recarregue a página.\");\n      console.error(\"Tentativa de enviar renda com nome vazio. Usuario:\", usuario);\n      return; // Prevent submission\n    }\n    const dadosParaAtualizar = {\n      name: nomeDoUsuario,\n      renda: novaRenda\n    };\n    console.log(\"EditRendaPopup - Dados a serem enviados (payload):\", dadosParaAtualizar);\n    console.log(\"EditRendaPopup - Usuario ID para requisição:\", usuario.id);\n    authService.alterarDadosUsuario(usuario.id, dadosParaAtualizar).then(() => {\n      setMensagem(\"Rendimento atualizado com sucesso!\");\n      setTimeout(() => {\n        setMensagem(\"\");\n        onClose(); // Close the popup and trigger re-fetch in ConfigAll\n      }, 1500);\n    }).catch(error => {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error(\"Erro ao atualizar rendimento (detalhes):\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      const backendMessage = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message;\n      // Check for specific backend messages about name or fields\n      if (Array.isArray(backendMessage)) {\n        // If message is an array, try to join it\n        setMensagem(backendMessage.join(\", \") + \". Verifique os dados.\");\n      } else if (backendMessage && backendMessage.includes(\"Nome\")) {\n        setMensagem(backendMessage + \". Por favor, verifique o nome em seu perfil.\");\n      } else {\n        setMensagem(backendMessage || \"Erro ao atualizar rendimento. Tente novamente.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Editar Rendimento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        value: novaRenda,\n        onChange: e => setNovaRenda(parseFloat(e.target.value)),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup-message\",\n        children: mensagem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(EditRendaPopup, \"UdyOu8cenpSZh2lfw7QlYnswJfA=\");\n_c = EditRendaPopup;\nexport default EditRendaPopup;\nvar _c;\n$RefreshReg$(_c, \"EditRendaPopup\");","map":{"version":3,"names":["React","useState","useEffect","authService","jsxDEV","_jsxDEV","EditRendaPopup","usuario","onClose","_s","novaRenda","setNovaRenda","renda","mensagem","setMensagem","console","log","nome","warn","handleSubmit","e","preventDefault","nomeDoUsuario","String","trim","error","dadosParaAtualizar","name","id","alterarDadosUsuario","then","setTimeout","catch","_error$response","_error$response2","_error$response2$data","response","data","message","backendMessage","Array","isArray","join","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","step","value","onChange","parseFloat","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/components/EditRendaPopup.js"],"sourcesContent":["// src/components/EditRendaPopup.js\r\nimport React, { useState, useEffect } from \"react\"; // Import useEffect\r\nimport authService from \"../services/authService\";\r\nimport \"../assets/Popup.css\";\r\n\r\nconst EditRendaPopup = ({ usuario, onClose }) => {\r\n  const [novaRenda, setNovaRenda] = useState(usuario.renda || 0);\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n\r\n  // Add useEffect to log usuario prop when component mounts or usuario changes\r\n  useEffect(() => {\r\n    console.log(\"EditRendaPopup - Prop 'usuario':\", usuario);\r\n    if (usuario && !usuario.nome) {\r\n      console.warn(\"EditRendaPopup - 'usuario.nome' está ausente ou é nulo/vazio:\", usuario.nome);\r\n      setMensagem(\"Atenção: O nome do usuário não foi carregado corretamente. A atualização pode falhar.\");\r\n    }\r\n  }, [usuario]); // Dependency array: run when 'usuario' prop changes\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Ensure 'name' is always a non-null, non-empty string.\r\n    // Trim whitespace to handle cases where name might be \"   \"\r\n    const nomeDoUsuario = usuario.nome ? String(usuario.nome).trim() : \"\";\r\n\r\n    // If the name is truly empty/null from the system,\r\n    // display an error and prevent submission.\r\n    if (!nomeDoUsuario) {\r\n      setMensagem(\"Erro: O nome do usuário é obrigatório e não foi carregado. Por favor, recarregue a página.\");\r\n      console.error(\"Tentativa de enviar renda com nome vazio. Usuario:\", usuario);\r\n      return; // Prevent submission\r\n    }\r\n\r\n    const dadosParaAtualizar = {\r\n      name: nomeDoUsuario,\r\n      renda: novaRenda,\r\n    };\r\n\r\n    console.log(\"EditRendaPopup - Dados a serem enviados (payload):\", dadosParaAtualizar);\r\n    console.log(\"EditRendaPopup - Usuario ID para requisição:\", usuario.id);\r\n\r\n    authService.alterarDadosUsuario(usuario.id, dadosParaAtualizar)\r\n      .then(() => {\r\n        setMensagem(\"Rendimento atualizado com sucesso!\");\r\n        setTimeout(() => {\r\n          setMensagem(\"\");\r\n          onClose(); // Close the popup and trigger re-fetch in ConfigAll\r\n        }, 1500);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao atualizar rendimento (detalhes):\", error.response?.data || error.message);\r\n        const backendMessage = error.response?.data?.message;\r\n        // Check for specific backend messages about name or fields\r\n        if (Array.isArray(backendMessage)) { // If message is an array, try to join it\r\n            setMensagem(backendMessage.join(\", \") + \". Verifique os dados.\");\r\n        } else if (backendMessage && backendMessage.includes(\"Nome\")) {\r\n            setMensagem(backendMessage + \". Por favor, verifique o nome em seu perfil.\");\r\n        } else {\r\n            setMensagem(backendMessage || \"Erro ao atualizar rendimento. Tente novamente.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      <h3>Editar Rendimento</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"number\"\r\n          step=\"0.01\"\r\n          value={novaRenda}\r\n          onChange={(e) => setNovaRenda(parseFloat(e.target.value))}\r\n          required\r\n        />\r\n        <button type=\"submit\">Salvar</button>\r\n        <button type=\"button\" onClick={onClose}>Cancelar</button>\r\n        {mensagem && <p className=\"popup-message\">{mensagem}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditRendaPopup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}