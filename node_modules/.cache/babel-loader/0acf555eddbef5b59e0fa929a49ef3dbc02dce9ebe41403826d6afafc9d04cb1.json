{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\React\\\\myfinance\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"../assets/Login.css\";\nimport authService from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await authService.login({\n        email,\n        senha\n      });\n      localStorage.setItem(\"usuario\", JSON.stringify(response.data));\n      navigate(\"/home\");\n    } catch (err) {\n      setError(\"E-mail ou senha inválidos.\");\n      console.error(\"Erro ao fazer login:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-image-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          className: \"input-field\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"senha\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"senha\",\n          className: \"input-field\",\n          value: senha,\n          onChange: e => setSenha(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"signup-link\",\n      children: [\"N\\xE3o tem uma conta? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/registro\",\n        children: \"Criar uma conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"DQfWsjj+TuX7EfWr0awBt05i3Ks=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","authService","jsxDEV","_jsxDEV","Login","_s","email","setEmail","senha","setSenha","error","setError","navigate","handleSubmit","e","preventDefault","response","login","localStorage","setItem","JSON","stringify","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","style","color","to","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/React/myfinance/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport \"../assets/Login.css\";\r\nimport authService from \"../services/authService\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await authService.login({ email, senha });\r\n      localStorage.setItem(\"usuario\", JSON.stringify(response.data));\r\n      navigate(\"/home\");\r\n    } catch (err) {\r\n      setError(\"E-mail ou senha inválidos.\");\r\n      console.error(\"Erro ao fazer login:\", err);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-image-container\"></div>\r\n      <h2 className=\"login-title\">Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"email\">E-mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"input-field\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"senha\">Senha</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"senha\"\r\n            className=\"input-field\"\r\n            value={senha}\r\n            onChange={(e) => setSenha(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n        <button type=\"submit\" className=\"login-button\">Entrar</button>\r\n      </form>\r\n      <p className=\"signup-link\">\r\n        Não tem uma conta? <Link to=\"/registro\">Criar uma conta</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}