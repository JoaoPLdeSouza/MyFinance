{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\components\\\\ExclPop.js\";\n// src/components/ExclPop.jsx\nimport React from 'react';\nimport '../assets/Popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExclPop = ({\n  message,\n  onConfirm,\n  onCancel\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: onConfirm && onCancel ? \"Confirmação\" : \"Aviso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup-description\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), (onConfirm || onCancel) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-actions\",\n        children: [onConfirm && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirmar-btn\",\n          onClick: onConfirm,\n          children: \"Sim, excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 27\n        }, this), onCancel && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancelar-btn\",\n          onClick: onCancel,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 26\n        }, this), !onConfirm && !onCancel && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirmar-btn\",\n          onClick: onCancel,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this) // Usando onCancel para fechar/redirecionar no OK\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = ExclPop;\nexport default ExclPop;\nvar _c;\n$RefreshReg$(_c, \"ExclPop\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ExclPop","message","onConfirm","onCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/components/ExclPop.js"],"sourcesContent":["// src/components/ExclPop.jsx\r\nimport React from 'react';\r\nimport '../assets/Popup.css';\r\n\r\nconst ExclPop = ({ message, onConfirm, onCancel }) => {\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"popup\">\r\n        <h3>{onConfirm && onCancel ? \"Confirmação\" : \"Aviso\"}</h3>\r\n        <p className=\"popup-description\">{message}</p>\r\n        {(onConfirm || onCancel) && (\r\n          <div className=\"popup-actions\">\r\n            {onConfirm && <button className=\"confirmar-btn\" onClick={onConfirm}>Sim, excluir</button>}\r\n            {onCancel && <button className=\"cancelar-btn\" onClick={onCancel}>Cancelar</button>}\r\n            {/* Se você quiser um botão \"OK\" para o pop-up de sucesso, você pode adicionar uma lógica aqui */}\r\n            {!onConfirm && !onCancel && (\r\n              <button className=\"confirmar-btn\" onClick={onCancel}>OK</button> // Usando onCancel para fechar/redirecionar no OK\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExclPop;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAS,CAAC,KAAK;EACpD,oBACEJ,OAAA;IAAKK,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BN,OAAA;MAAKK,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBN,OAAA;QAAAM,QAAA,EAAKH,SAAS,IAAIC,QAAQ,GAAG,aAAa,GAAG;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1DV,OAAA;QAAGK,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAEJ;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7C,CAACP,SAAS,IAAIC,QAAQ,kBACrBJ,OAAA;QAAKK,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3BH,SAAS,iBAAIH,OAAA;UAAQK,SAAS,EAAC,eAAe;UAACM,OAAO,EAAER,SAAU;UAAAG,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACxFN,QAAQ,iBAAIJ,OAAA;UAAQK,SAAS,EAAC,cAAc;UAACM,OAAO,EAAEP,QAAS;UAAAE,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAEjF,CAACP,SAAS,IAAI,CAACC,QAAQ,iBACtBJ,OAAA;UAAQK,SAAS,EAAC,eAAe;UAACM,OAAO,EAAEP,QAAS;UAAAE,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,CAAC;QAClE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GAnBIX,OAAO;AAqBb,eAAeA,OAAO;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}