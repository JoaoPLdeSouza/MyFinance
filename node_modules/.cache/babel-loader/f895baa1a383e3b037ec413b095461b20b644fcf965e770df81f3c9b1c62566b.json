{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\components\\\\ExclPop.js\";\n// src/components/ExclPop.jsx\nimport React from 'react';\nimport '../assets/Popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExclPop = ({\n  message,\n  onConfirm,\n  onCancel\n}) => {\n  // Renderiza os botões apenas se ambos onConfirm e onCancel forem fornecidos (para o caso de confirmação)\n  const shouldShowButtons = onConfirm && onCancel;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: shouldShowButtons ? \"Confirmação\" : \"Aviso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup-description\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), shouldShowButtons &&\n      /*#__PURE__*/\n      // Renderiza os botões apenas se for um pop-up de confirmação\n      _jsxDEV(\"div\", {\n        className: \"popup-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirmar-btn\",\n          onClick: onConfirm,\n          children: \"Sim, excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancelar-btn\",\n          onClick: onCancel,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = ExclPop;\nexport default ExclPop;\nvar _c;\n$RefreshReg$(_c, \"ExclPop\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ExclPop","message","onConfirm","onCancel","shouldShowButtons","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/components/ExclPop.js"],"sourcesContent":["// src/components/ExclPop.jsx\r\nimport React from 'react';\r\nimport '../assets/Popup.css';\r\n\r\nconst ExclPop = ({ message, onConfirm, onCancel }) => {\r\n  // Renderiza os botões apenas se ambos onConfirm e onCancel forem fornecidos (para o caso de confirmação)\r\n  const shouldShowButtons = onConfirm && onCancel;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"popup\">\r\n        <h3>{shouldShowButtons ? \"Confirmação\" : \"Aviso\"}</h3>\r\n        <p className=\"popup-description\">{message}</p>\r\n        {shouldShowButtons && ( // Renderiza os botões apenas se for um pop-up de confirmação\r\n          <div className=\"popup-actions\">\r\n            <button className=\"confirmar-btn\" onClick={onConfirm}>Sim, excluir</button>\r\n            <button className=\"cancelar-btn\" onClick={onCancel}>Cancelar</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExclPop;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAS,CAAC,KAAK;EACpD;EACA,MAAMC,iBAAiB,GAAGF,SAAS,IAAIC,QAAQ;EAE/C,oBACEJ,OAAA;IAAKM,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BP,OAAA;MAAKM,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBP,OAAA;QAAAO,QAAA,EAAKF,iBAAiB,GAAG,aAAa,GAAG;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtDX,OAAA;QAAGM,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAEL;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7CN,iBAAiB;MAAA;MAAM;MACtBL,OAAA;QAAKM,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BP,OAAA;UAAQM,SAAS,EAAC,eAAe;UAACM,OAAO,EAAET,SAAU;UAAAI,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3EX,OAAA;UAAQM,SAAS,EAAC,cAAc;UAACM,OAAO,EAAER,QAAS;UAAAG,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GAlBIZ,OAAO;AAoBb,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}