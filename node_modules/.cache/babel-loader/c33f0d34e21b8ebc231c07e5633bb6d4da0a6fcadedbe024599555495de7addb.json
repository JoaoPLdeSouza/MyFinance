{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpls2\\\\TCC\\\\Front\\\\myFinance\\\\src\\\\components\\\\PUPRegistro.js\",\n  _s = $RefreshSig$();\n// src/components/PUPRegistro.js\nimport React, { useEffect } from 'react'; // Import useEffect\nimport '../assets/Popup.css'; // Make sure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PUPRegistro = ({\n  message,\n  type,\n  onClose\n}) => {\n  _s();\n  if (!message) {\n    return null; // Don't render if there's no message\n  }\n\n  // Use useEffect to set a timer to close the popup automatically\n  useEffect(() => {\n    let timer;\n    if (message) {\n      // Only set timer if there's a message to display\n      timer = setTimeout(() => {\n        onClose(); // Call onClose after 8 seconds\n      }, 8000); // 8000 milliseconds = 8 seconds\n    }\n\n    // Cleanup function to clear the timer if the component unmounts\n    // or if the message changes before the timer finishes\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [message, onClose]); // Re-run effect if message or onClose changes\n\n  const popupClass = `popup-message ${type === 'error' ? 'error-message' : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Aviso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: popupClass,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(PUPRegistro, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PUPRegistro;\nexport default PUPRegistro;\nvar _c;\n$RefreshReg$(_c, \"PUPRegistro\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","PUPRegistro","message","type","onClose","_s","timer","setTimeout","clearTimeout","popupClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jpls2/TCC/Front/myFinance/src/components/PUPRegistro.js"],"sourcesContent":["// src/components/PUPRegistro.js\r\nimport React, { useEffect } from 'react'; // Import useEffect\r\nimport '../assets/Popup.css'; // Make sure this path is correct\r\n\r\nconst PUPRegistro = ({ message, type, onClose }) => {\r\n  if (!message) {\r\n    return null; // Don't render if there's no message\r\n  }\r\n\r\n  // Use useEffect to set a timer to close the popup automatically\r\n  useEffect(() => {\r\n    let timer;\r\n    if (message) { // Only set timer if there's a message to display\r\n      timer = setTimeout(() => {\r\n        onClose(); // Call onClose after 8 seconds\r\n      }, 8000); // 8000 milliseconds = 8 seconds\r\n    }\r\n\r\n    // Cleanup function to clear the timer if the component unmounts\r\n    // or if the message changes before the timer finishes\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [message, onClose]); // Re-run effect if message or onClose changes\r\n\r\n  const popupClass = `popup-message ${type === 'error' ? 'error-message' : ''}`;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"popup\">\r\n        <h3>Aviso</h3>\r\n        <p className={popupClass}>{message}</p>\r\n        {/* Removed the OK button */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PUPRegistro;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO,CAAC,CAAC;AAC1C,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClD,IAAI,CAACH,OAAO,EAAE;IACZ,OAAO,IAAI,CAAC,CAAC;EACf;;EAEA;EACAJ,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK;IACT,IAAIJ,OAAO,EAAE;MAAE;MACbI,KAAK,GAAGC,UAAU,CAAC,MAAM;QACvBH,OAAO,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;;IAEA;IACA;IACA,OAAO,MAAM;MACXI,YAAY,CAACF,KAAK,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACJ,OAAO,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;;EAExB,MAAMK,UAAU,GAAG,iBAAiBN,IAAI,KAAK,OAAO,GAAG,eAAe,GAAG,EAAE,EAAE;EAE7E,oBACEH,OAAA;IAAKU,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BX,OAAA;MAAKU,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBX,OAAA;QAAAW,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdf,OAAA;QAAGU,SAAS,EAAED,UAAW;QAAAE,QAAA,EAAET;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CAhCIJ,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}